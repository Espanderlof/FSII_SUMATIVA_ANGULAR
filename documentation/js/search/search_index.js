var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.208,1,0.814]],["body/components/AppComponent.html",[0,0.289,1,1.235,2,1.081,3,0.361,4,0.361,5,0.841,6,0.841,7,0.841,8,0.31,9,2,10,0.438,11,1.434,12,2.449,13,0.499,14,0.625,15,2.728,16,1.678,17,3.504,18,1.886,19,0.597,20,2.136,21,3.504,22,0.679,23,3.504,24,1.205,25,1.409,26,0.841,27,1.675,28,1.338,29,1.5,30,1.081,31,0.768,32,1.081,33,1.263,34,4.097,35,3.353,36,4.097,37,4.097,38,1.081,39,3.504,40,1.886,41,3.504,42,0.216,43,0.444,44,2.888,45,4.097,46,0.955,47,4.097,48,2.497,49,0.768,50,3.127,51,3.127,52,4.475,53,1.38,54,0.567,55,2,56,1.746,57,1.434,58,3.663,59,2.728,60,1.158,61,3.504,62,0.528,63,0.535,64,0.044,65,0.897,66,0.507,67,0.535,68,0.625,69,0.435,70,0.679,71,1.915,72,1.205,73,2.728,74,1.344,75,2.444,76,3.166,77,1.678,78,1.103,79,1.819,80,0.98,81,2.408,82,0.601,83,1.263,84,2.868,85,2.868,86,1.103,87,2.136,88,2.136,89,2.444,90,3.663,91,2.361,92,1.009,93,2.444,94,0.863,95,1.5,96,3.504,97,1.235,98,3.504,99,2.444,100,1.678,101,1.571,102,1.571,103,1.678,104,2.444,105,2.136,106,2.868,107,1.046,108,5.195,109,2.444,110,3.504,111,4.097,112,3.504,113,3.504,114,1.678,115,2.136,116,1.5,117,2.444,118,2.449,119,3.504,120,0.75,121,0.31,122,1.315,123,1.49,124,1.17,125,0.361,126,2.444,127,2.444,128,1.046,129,0.361,130,0.361,131,0.519,132,2.444,133,2,134,2,135,1.49,136,3.504,137,2.444,138,2,139,2.444,140,2.444,141,0.602,142,2.444,143,2.408,144,3.663,145,4.475,146,2.868,147,2.868,148,1.5,149,1.409,150,2.136,151,2.449,152,3.504,153,2.868,154,3.504,155,4.475,156,3.504,157,3.504,158,3.504,159,3.504,160,1.5,161,3.504,162,3.504,163,3.504,164,1.205,165,2.444,166,3.504,167,2.444,168,3.504,169,2.136,170,0.518,171,3.504,172,3.504,173,0.841,174,1.205,175,1.205,176,0.841,177,1.539,178,0.841,179,2.444,180,0.841,181,0.602,182,0.841,183,0.675,184,0.841,185,0.675,186,0.841,187,0.675,188,0.841,189,0.675,190,0.841,191,0.841,192,0.675,193,0.841,194,0.675,195,0.841,196,0.841,197,0.675,198,0.841,199,0.841,200,0.841,201,0.025,202,0.025]],["title/injectables/AuthService.html",[57,0.814,203,0.814]],["body/injectables/AuthService.html",[3,0.232,4,0.232,8,0.199,10,0.512,13,0.487,14,0.702,19,0.608,22,0.485,29,0.672,31,1.182,42,0.276,43,0.318,46,0.804,48,1.906,49,0.549,50,2.493,51,2.493,54,0.396,57,0.692,60,1.145,62,0.611,63,0.991,64,0.044,65,0.991,66,0.499,67,0.991,68,0.452,69,0.4,70,0.691,72,0.862,74,1.736,78,1.37,79,2.039,80,1.165,81,2.098,82,0.699,83,1.612,86,1.288,87,3.03,88,3.03,91,2.234,92,0.617,94,0.387,95,1.072,101,0.602,102,0.602,107,2.397,114,2.087,115,3.243,116,2.047,120,0.462,121,0.199,125,0.232,128,0.672,129,0.232,130,0.232,131,0.619,141,1.364,143,1.349,148,2.258,150,2.175,160,1.338,164,1.878,169,1.528,170,0.527,201,0.018,202,0.018,203,0.692,204,0.846,205,1.098,206,2.051,207,1.683,208,2.506,209,2.506,210,2.506,211,2.92,212,2.506,213,2.92,214,2.92,215,2.92,216,2.175,217,2.506,218,2.506,219,1.286,220,1.683,221,2.506,222,1.683,223,0.961,224,1.349,225,1.349,226,0.792,227,1.708,228,2.051,229,1.571,230,1.778,231,2.09,232,2.759,233,1.708,234,2.903,235,3.705,236,3.794,237,2.051,238,1.571,239,2.493,240,1.751,241,2.051,242,1.571,243,2.051,244,1.571,245,1.072,246,1.072,247,2.051,248,2.051,249,1.571,250,1.528,251,2.051,252,1.571,253,1.751,254,3.03,255,2.903,256,2.051,257,2.051,258,1.708,259,2.92,260,1.571,261,2.236,262,2.051,263,1.571,264,1.571,265,1.528,266,1.708,267,2.051,268,2.236,269,1.571,270,2.051,271,2.493,272,1.571,273,1.751,274,2.051,275,1.571,276,2.051,277,2.051,278,1.571,279,2.051,280,2.92,281,1.751,282,1.751,283,1.751,284,1.2,285,1.349,286,1.072,287,1.349,288,0.862,289,2.051,290,1.571,291,1.906,292,0.846,293,0.846,294,0.846,295,0.752,296,0.752,297,0.752,298,0.484,299,0.964,300,0.846,301,0.846,302,1.349,303,1.906,304,0.752,305,0.958,306,2.676,307,0.846,308,1.286,309,1.83,310,3.4,311,1.286,312,1.286,313,2.051,314,1.286,315,1.286,316,1.286,317,2.92,318,2.051,319,1.286,320,2.493,321,2.051,322,1.286,323,1.286,324,1.286,325,1.286,326,1.286,327,1.286,328,2.051,329,1.286,330,1.286,331,1.286,332,1.286,333,1.286,334,2.051,335,2.559,336,2.92,337,1.286,338,1.286,339,2.903,340,3.4,341,1.286,342,1.286,343,1.286,344,2.051,345,2.051,346,1.286,347,3.4,348,2.185,349,2.559,350,2.051,351,1.495,352,2.051,353,2.051,354,2.051,355,1.286,356,1.286,357,1.286,358,1.286,359,0.846,360,1.286]],["title/components/CartComponent.html",[0,0.208,181,0.726]],["body/components/CartComponent.html",[0,0.298,1,0.712,2,1.123,3,0.381,4,0.381,5,0.887,6,0.887,7,0.887,8,0.327,10,0.518,11,1.385,13,0.473,14,0.613,16,1.744,19,0.573,24,1.253,25,1.452,26,0.887,27,1.693,28,1.353,30,1.123,31,0.798,32,1.123,33,1.302,38,1.123,40,1.96,42,0.228,43,0.462,46,0.817,49,0.798,53,1.414,54,0.535,55,2.112,56,1.774,60,1.154,62,0.63,63,0.925,64,0.044,65,1.059,66,0.518,67,0.925,68,0.581,69,0.405,70,0.888,71,2.49,73,2.22,76,2.22,82,0.613,86,1.04,92,1.192,94,1.04,100,2.522,101,1.397,102,1.397,103,2.021,107,1.104,120,0.677,121,0.327,123,1.573,125,0.381,129,0.381,130,0.381,131,0.535,149,0.887,170,0.677,173,0.887,174,1.253,175,1.253,176,0.887,177,1.577,178,0.887,180,0.887,181,1.13,182,0.887,183,0.712,184,0.887,185,0.712,186,0.887,187,0.712,188,0.887,189,0.712,190,0.887,191,0.887,192,0.712,193,0.887,194,0.712,195,0.887,196,0.887,197,0.712,198,0.887,199,0.887,200,0.887,201,0.026,202,0.026,223,1.758,226,0.714,230,1.962,245,1.559,246,1.559,266,1.744,295,1.235,296,1.235,297,1.235,298,0.796,299,1.123,351,1.397,361,1.803,362,2.981,363,2.795,364,2.22,365,3.455,366,2.981,367,2.981,368,3.455,369,3.347,370,3.753,371,2.981,372,2.981,373,3.753,374,3.642,375,1.123,376,1.744,377,2.58,378,2.795,379,2.58,380,2.22,381,2.58,382,2.22,383,3.144,384,2.22,385,2.835,386,2.795,387,2.981,388,2.148,389,2.58,390,3.059,391,2.573,392,2.58,393,2.58,394,0.887,395,2.112,396,2.468,397,2.112,398,1.573,399,2.981,400,2.112,401,2.112,402,2.981,403,2.112,404,2.795,405,2.112,406,2.112,407,2.112,408,2.112,409,3.958,410,3.642,411,2.981,412,3.642]],["title/interfaces/CartItem.html",[298,0.909,388,1.261]],["body/interfaces/CartItem.html",[3,0.423,4,0.423,8,0.363,10,0.419,13,0.498,14,0.608,19,0.568,29,1.225,42,0.253,43,0.496,44,1.745,46,0.929,54,0.363,56,0.985,62,0.62,64,0.044,66,0.513,68,0.496,69,0.394,70,0.758,71,2.396,78,0.965,80,0.627,82,0.496,83,0.883,86,1.237,94,0.965,95,1.225,97,0.79,100,2.72,103,1.371,105,2.924,107,1.909,114,1.875,120,0.659,121,0.363,125,0.423,128,1.225,129,0.423,130,0.423,131,0.637,135,1.745,141,1.099,170,0.423,201,0.028,202,0.028,203,1.081,207,1.541,220,1.541,222,2.107,223,2.102,224,1.541,225,1.541,226,0.798,227,1.875,230,1.676,233,1.371,261,2.107,266,1.371,284,1.371,285,1.541,286,1.225,287,1.541,288,0.985,291,2.387,292,1.541,293,1.541,294,1.541,295,1.875,296,1.875,297,1.875,298,0.883,299,1.599,304,1.371,305,1.745,306,2.857,307,1.541,309,1.65,351,1.098,359,1.541,363,1.745,364,3.061,369,1.745,375,0.883,376,1.371,378,3.161,380,1.745,382,1.745,383,2.924,384,2.924,385,3.037,386,1.745,388,1.909,390,3.341,391,2.72,396,2.791,404,2.387,413,1.745,414,2.001,415,2.344,416,3.926,417,2.344,418,3.652,419,3.652,420,2.344,421,3.205,422,2.344,423,3.652,424,3.652,425,3.652,426,2.344,427,2.001,428,2.736,429,2.001,430,2.001,431,3.205,432,2.344,433,2.344,434,2.344,435,2.344,436,2.344,437,2.344,438,2.344,439,2.344,440,2.344]],["title/interfaces/CartItem-1.html",[298,0.763,359,1.332,388,1.059]],["body/interfaces/CartItem-1.html",[0,0.299,3,0.475,4,0.475,8,0.408,10,0.453,11,1.306,13,0.461,14,0.637,16,1.54,19,0.574,24,1.106,25,1.456,27,0.992,28,0.793,30,0.992,31,0.705,32,0.992,33,1.305,38,0.992,40,1.731,42,0.284,43,0.537,46,0.623,53,0.992,54,0.408,56,1.729,62,0.635,64,0.044,66,0.538,68,0.537,69,0.374,70,0.82,71,2.473,73,1.961,76,1.961,86,1.166,94,1.166,100,2.734,103,2.027,107,2.025,120,0.743,121,0.408,123,1.961,125,0.475,129,0.475,130,0.475,131,0.6,170,0.625,181,0.793,201,0.03,202,0.03,223,2.097,226,0.743,230,1.812,245,1.377,246,1.377,266,1.54,295,2.027,296,2.027,297,2.027,298,0.992,299,1.654,351,1.234,361,2.248,362,2.633,363,1.961,364,1.961,365,3.465,366,2.633,367,2.633,368,2.633,369,2.884,370,2.633,373,2.633,375,0.992,376,1.54,378,2.58,380,1.961,382,1.961,383,3.184,384,1.961,385,3.021,386,1.961,387,2.633,388,2.152,390,3.333,391,2.58,394,1.106,395,3.465,396,2.887,397,3.465,398,1.961,399,3.465,400,2.633,401,2.633,402,3.465,403,2.633,404,2.58,405,2.633,406,2.633,407,2.633,408,2.633,409,2.633,413,1.961]],["title/injectables/CartService.html",[56,1.014,203,0.814]],["body/injectables/CartService.html",[3,0.367,4,0.367,8,0.315,10,0.53,13,0.505,14,0.604,19,0.599,29,1.062,42,0.219,43,0.449,44,2.519,46,1.043,49,0.776,54,0.524,56,1.219,60,1.163,62,0.62,63,0.987,64,0.044,65,0.987,66,0.51,67,0.987,68,0.571,69,0.438,70,0.873,71,2.456,78,1.11,80,0.776,82,0.661,83,1.093,86,1.327,92,1.11,94,0.612,95,1.517,97,0.978,100,2.658,101,0.952,102,0.952,103,1.189,105,3.179,107,1.062,114,2.158,120,0.61,121,0.315,125,0.367,128,1.062,129,0.367,130,0.367,131,0.604,135,1.513,141,1.018,170,0.523,201,0.025,202,0.025,203,0.978,204,1.336,207,2.224,219,2.032,220,2.224,222,2.224,223,2,224,1.907,225,1.907,226,0.82,227,2.158,230,1.929,233,1.697,261,2.426,266,1.697,284,1.697,285,1.907,286,1.517,287,1.907,288,1.219,291,2.519,292,1.336,293,1.336,294,1.336,295,1.189,296,1.189,297,1.189,298,0.766,299,1.093,304,1.189,305,1.513,306,2.745,307,1.336,309,1.55,351,1.359,359,1.336,363,2.16,364,2.905,369,1.513,371,2.9,372,2.9,375,1.093,376,1.697,378,3.355,380,2.16,382,2.16,383,2.905,384,3.021,385,2.962,386,2.16,388,1.769,390,3.109,391,2.519,396,1.907,404,2.16,414,1.735,415,2.9,416,3.689,417,3.689,418,3.382,419,3.901,420,2.9,421,2.9,422,2.032,423,3.382,424,3.382,425,3.382,426,2.032,427,2.477,428,2.888,429,2.477,430,2.477,431,2.9,432,2.032,433,2.032,434,2.032,435,2.032,436,3.689,437,2.032,438,2.032,439,3.689,440,2.032,441,2.9,442,3.544,443,2.483,444,2.483,445,2.483,446,2.483,447,2.483,448,2.483,449,2.483]],["title/components/ContactoComponent.html",[0,0.208,183,0.814]],["body/components/ContactoComponent.html",[0,0.307,1,0.753,2,1.168,3,0.403,4,0.403,5,0.939,6,0.939,7,0.939,8,0.346,10,0.466,11,1.41,13,0.494,19,0.629,22,0.734,24,1.303,25,1.496,26,0.939,27,1.711,28,1.367,30,1.168,31,0.953,32,1.168,33,1.342,38,1.168,40,2.039,42,0.241,43,0.48,49,0.83,53,1.449,54,0.552,60,1.119,62,0.561,63,0.598,64,0.044,65,0.953,66,0.405,67,0.598,68,0.48,69,0.451,70,0.734,78,0.933,80,1.203,82,0.552,92,0.933,97,1.297,101,1.047,102,1.047,120,0.643,121,0.346,125,0.403,129,0.403,130,0.403,131,0.346,141,0.673,144,4.373,149,0.939,153,3.101,160,2.113,164,1.698,170,0.643,173,0.939,174,1.303,175,1.303,176,0.939,177,1.616,178,0.939,180,0.939,181,0.673,182,0.939,183,1.297,184,0.939,185,0.753,186,0.939,187,0.753,188,0.939,189,0.753,190,0.939,191,0.939,192,0.753,193,0.939,194,0.753,195,0.939,196,0.939,197,0.753,198,0.939,199,0.939,200,0.939,201,0.027,202,0.027,226,0.56,236,3.041,284,1.814,299,1.616,394,0.939,398,1.664,450,2.234,451,2.442,452,2.083,453,3.789,454,3.789,455,4.351,456,4.351,457,2.25,458,3.789,459,4.351,460,2.73,461,2.509,462,3.789,463,3.789,464,2.648,465,2.648,466,2.73,467,1.453,468,1.453,469,2.73,470,1.814,471,1.814,472,2.083,473,2.73,474,3.101,475,3.101,476,3.561,477,2.73,478,2.73,479,3.789,480,3.789,481,3.789,482,4.351,483,1.307,484,2.73,485,2.73,486,2.364,487,2.73,488,1.469,489,2.73,490,1.664,491,4.938,492,4.289,493,2.73,494,3.789,495,2.73,496,2.73,497,1.469,498,2.73,499,2.73,500,2.63,501,2.876,502,2.865,503,2.865,504,3.789,505,2.865,506,2.309,507,2.309,508,2.53,509,1.303,510,2.309,511,2.53,512,2.039,513,2.039,514,3.789,515,3.789]],["title/injectables/DataInitializationService.html",[59,1.796,203,0.814]],["body/injectables/DataInitializationService.html",[3,0.496,4,0.496,8,0.426,10,0.517,13,0.479,14,0.688,15,3.117,19,0.466,29,1.438,42,0.297,43,0.552,46,0.99,49,0.954,54,0.648,59,2.655,60,1.059,62,0.466,63,0.736,64,0.044,65,0.736,66,0.466,67,0.736,68,0.648,69,0.479,74,2.081,78,1.26,80,0.954,82,0.552,83,1.343,86,1.073,94,1.073,95,2.323,120,0.714,121,0.426,125,0.496,129,0.496,130,0.496,131,0.552,141,0.828,170,0.755,201,0.031,202,0.031,203,1.202,204,1.809,207,2.601,220,2.601,222,2.752,223,1.67,224,2.344,225,2.344,226,0.802,227,2.448,246,1.864,284,2.086,285,2.344,286,1.864,287,2.344,288,1.156,292,1.809,293,1.809,294,1.809,304,1.609,306,2.344,307,1.809,339,2.349,348,2.349,467,1.67,509,1.498,516,4.185,517,2.751,518,4.356,519,3.565,520,3.565,521,5.114,522,2.751,523,4.185,524,4.356,525,3.702,526,3.044,527,3.565,528,3.565,529,3.361,530,4.356,531,4.356,532,3.565,533,4.356,534,4.356,535,2.751,536,3.361,537,3.361,538,3.361,539,3.361,540,3.361,541,4.356,542,3.361,543,3.361,544,3.361,545,3.361,546,3.361,547,3.361,548,3.361,549,3.361,550,1.809,551,4.356,552,3.361,553,3.361,554,3.361]],["title/components/HomeComponent.html",[0,0.208,185,0.814]],["body/components/HomeComponent.html",[0,0.282,1,0.644,2,1.045,3,0.345,4,0.345,5,0.803,6,0.803,7,0.803,8,0.296,10,0.519,11,1.34,12,2.369,13,0.508,14,0.702,19,0.519,22,1.028,26,0.803,27,1.659,28,1.326,30,1.045,31,0.742,32,1.045,33,1.231,38,1.045,40,1.824,42,0.206,43,0.43,44,2.433,46,0.656,49,0.742,53,1.351,54,0.555,56,1.764,60,1.179,62,0.519,63,0.959,64,0.044,65,1.063,66,0.56,67,0.959,68,0.615,69,0.469,70,0.656,71,2.386,74,1.861,82,0.59,86,0.835,92,1.146,97,1.485,100,2.543,101,1.784,102,1.784,103,2.456,105,2.066,106,2.774,118,2.369,120,0.647,121,0.296,123,1.422,125,0.345,129,0.345,130,0.345,131,0.59,133,1.91,134,1.91,135,1.422,143,1.824,149,0.803,169,2.066,170,0.758,173,0.803,174,1.166,175,1.166,176,0.803,177,1.506,178,0.803,180,0.803,181,0.575,182,0.803,183,0.644,184,0.803,185,1.209,186,0.803,187,0.644,188,0.803,189,0.644,190,0.803,191,0.803,192,0.644,193,0.803,194,0.644,195,0.803,196,0.803,197,0.644,198,0.803,199,0.803,200,0.803,201,0.024,202,0.024,223,1.861,226,0.501,230,1.451,245,1.451,246,1.451,265,2.958,376,1.623,385,2.357,396,1.824,427,2.369,428,2.369,429,3.061,430,2.369,441,2.774,467,1.3,511,1.824,555,1.91,556,3.39,557,3.39,558,4.696,559,4.199,560,3.39,561,4.38,562,3.39,563,3.39,564,3.39,565,3.991,566,3.991,567,3.991,568,3.39,569,4.38,570,3.39,571,2.334,572,3.052,573,3.39,574,3.39,575,2.334,576,3.39,577,2.334,578,4.38,579,4.38,580,5.44,581,5.312,582,5.008,583,3.39,584,2.334,585,2.334,586,3.39,587,3.39,588,3.39,589,2.334,590,2.334,591,2.334,592,2.334,593,3.39,594,2.334,595,3.39,596,2.334,597,2.334,598,2.334,599,2.334,600,2.334,601,3.39,602,2.334,603,2.334,604,2.334,605,2.334,606,3.39,607,2.334,608,2.334,609,2.334,610,2.334,611,2.334,612,3.39,613,3.39,614,3.39,615,3.39,616,3.39]],["title/components/LoginComponent.html",[0,0.208,187,0.814]],["body/components/LoginComponent.html",[0,0.313,1,0.781,2,1.198,3,0.418,4,0.418,5,0.973,6,0.973,7,0.973,8,0.359,10,0.475,11,1.426,13,0.514,14,0.605,18,2.09,19,0.603,20,3.372,22,0.752,24,1.336,25,1.525,26,0.973,27,1.723,28,1.376,30,1.198,31,0.851,32,1.198,33,1.367,35,3.63,38,1.198,42,0.25,43,0.492,46,0.859,49,0.851,53,1.472,54,0.605,57,1.488,60,1.045,62,0.511,63,0.62,64,0.044,65,0.971,66,0.416,67,0.62,68,0.492,69,0.456,70,0.752,72,1.336,80,1.045,82,0.492,91,2.716,92,0.957,120,0.739,121,0.359,122,1.523,124,1.355,125,0.418,129,0.418,130,0.418,131,0.562,143,2.901,146,3.179,148,1.662,149,0.973,151,3.336,164,1.336,173,0.973,174,1.336,175,1.336,176,0.973,177,1.642,178,0.973,180,0.973,181,0.697,182,0.973,183,0.781,184,0.973,185,0.781,186,0.973,187,1.317,188,0.973,189,0.781,190,0.973,191,0.973,192,0.781,193,0.973,194,0.781,195,0.973,196,0.973,197,0.781,198,0.973,199,0.973,200,0.973,201,0.028,202,0.028,216,2.367,226,0.574,231,2.265,258,1.355,268,2.387,271,1.978,309,0.973,394,0.973,451,2.307,452,2.123,457,2.285,461,2.474,467,1.489,468,1.489,470,1.86,471,1.86,472,2.123,483,1.355,486,1.86,488,1.523,500,1.86,506,3.149,507,3.226,509,1.336,617,1.523,618,2.316,619,2.09,620,4.435,621,3.884,622,4.435,623,1.523,624,3.884,625,2.387,626,2.09,627,2.714,628,2.83,629,2.83,630,2.83,631,1.523,632,2.83,633,2.83,634,2.83,635,2.83,636,2.83,637,2.83,638,2.83,639,1.978,640,1.978,641,2.83,642,2.316,643,2.83,644,1.725,645,1.725,646,2.367,647,2.09,648,2.09,649,3.884,650,3.884,651,3.884,652,3.179]],["title/components/ManagerUsersComponent.html",[0,0.208,189,0.814]],["body/components/ManagerUsersComponent.html",[0,0.265,1,0.582,2,0.97,3,0.311,4,0.311,5,0.725,6,0.725,7,0.725,8,0.267,10,0.478,11,1.292,13,0.498,14,0.632,19,0.618,22,0.609,24,1.082,25,1.294,26,0.725,27,1.623,28,1.297,30,0.97,31,0.914,32,0.97,33,1.16,38,0.97,42,0.186,43,0.399,46,0.609,49,0.689,53,1.286,54,0.529,57,1.376,60,1.153,62,0.501,63,0.824,64,0.044,65,0.977,66,0.501,67,0.824,68,0.399,69,0.458,72,1.082,77,1.506,78,1.028,79,1.899,80,1.191,81,1.693,82,0.632,83,0.65,86,0.775,90,2.575,92,1.153,97,0.582,101,1.206,102,1.443,116,2.003,118,2.199,120,0.616,121,0.267,124,1.01,125,0.311,129,0.311,130,0.311,131,0.529,147,2.575,148,2.346,149,0.725,160,2.18,164,1.752,170,0.465,173,0.725,174,1.082,175,1.082,176,0.725,177,1.435,178,0.725,180,0.725,181,0.52,182,0.725,183,0.582,184,0.725,185,0.582,186,0.725,187,0.582,188,0.725,189,1.151,190,1.714,191,0.725,192,0.582,193,0.725,194,0.582,195,0.725,196,0.725,197,0.582,198,0.725,199,0.725,200,0.725,201,0.023,202,0.023,226,0.616,245,1.785,265,2.543,273,2.199,288,1.082,299,1.495,300,2.519,301,2.519,302,1.135,303,2.956,309,1.435,320,2.199,351,0.809,394,0.725,411,2.575,451,2.327,452,1.802,457,1.997,461,2.241,467,1.6,468,1.206,470,1.506,471,1.506,472,1.802,483,1.01,486,2.137,488,1.135,490,1.286,497,1.135,500,2.386,501,2.245,508,1.693,510,1.918,512,1.693,513,1.693,550,1.693,617,1.135,619,1.693,623,1.135,625,2.025,626,1.693,627,2.199,631,1.135,644,1.286,645,1.286,646,1.918,647,1.693,648,1.693,653,4.362,654,4.362,655,1.726,656,3.146,657,3.146,658,3.763,659,3.146,660,3.763,661,3.763,662,4.172,663,2.199,664,3.146,665,4.172,666,4.172,667,3.146,668,2.109,669,3.146,670,4.984,671,2.199,672,2.109,673,1.918,674,1.918,675,3.119,676,2.199,677,2.543,678,2.199,679,2.199,680,1.918,681,1.346,682,2.199,683,3.119,684,3.146,685,2.109,686,3.146,687,5.186,688,2.109,689,2.109,690,2.109,691,2.109,692,2.109,693,2.109,694,3.146,695,2.109,696,2.109,697,2.109,698,1.286,699,1.474,700,2.109,701,2.109,702,3.763,703,2.109,704,2.109,705,2.109,706,2.109,707,2.109,708,2.109,709,2.109,710,2.109,711,2.109,712,2.109,713,1.474,714,1.474,715,1.474,716,1.474,717,1.474,718,1.474,719,2.199,720,1.474,721,1.474,722,3.146,723,3.146,724,3.146,725,3.146,726,1.918,727,1.918,728,2.199,729,2.199,730,2.575,731,2.199]],["title/components/ModificarPerfilComponent.html",[0,0.208,192,0.814]],["body/components/ModificarPerfilComponent.html",[0,0.26,1,0.561,2,0.944,3,0.3,4,0.3,5,0.699,6,0.699,7,0.699,8,0.258,10,0.47,11,1.274,13,0.485,14,0.705,16,1.465,19,0.578,22,0.995,24,1.053,25,1.266,26,0.699,27,1.609,28,1.286,30,0.944,31,0.897,32,0.944,33,1.135,38,0.944,42,0.18,43,0.388,46,0.593,48,2.244,49,0.67,53,1.263,54,0.519,57,1.361,60,1.105,62,0.587,63,0.806,64,0.044,65,0.962,66,0.494,67,0.806,68,0.388,69,0.477,72,1.053,74,1.77,77,1.961,78,1.215,79,1.588,80,1.158,82,0.607,83,0.627,92,0.907,94,1.009,97,1.131,115,1.865,116,2.11,120,0.605,121,0.258,124,0.973,125,0.3,129,0.3,130,0.3,131,0.519,138,1.664,141,0.501,149,1.912,150,3.132,160,2.05,170,0.728,173,0.699,174,1.053,175,1.053,176,0.699,177,1.409,178,0.699,180,0.699,181,0.501,182,0.699,183,0.561,184,0.699,185,0.561,186,0.699,187,0.561,188,0.699,189,0.561,190,0.699,191,0.699,192,1.131,193,0.699,194,0.561,195,0.699,196,0.699,197,0.561,198,0.699,199,0.699,200,0.699,201,0.022,202,0.022,226,0.682,231,2.433,232,1.865,233,2.21,239,1.421,245,1.31,288,1.053,299,1.355,300,2.204,301,2.204,302,1.094,309,1.511,351,1.174,375,1.423,394,0.699,451,2.199,452,1.762,461,2.21,464,2.862,465,2.139,467,1.174,468,1.174,470,1.961,471,1.961,472,2.46,483,1.465,486,2.103,490,1.239,497,1.647,500,1.961,501,2.484,502,1.865,503,1.865,505,1.865,508,1.647,509,1.409,510,1.865,511,1.647,512,1.647,513,1.647,550,2.484,617,1.094,619,1.647,623,1.094,625,1.981,626,1.647,631,1.647,648,2.204,652,2.505,663,2.139,671,2.139,673,2.496,674,2.496,675,3.07,676,2.139,677,2.496,678,2.139,679,1.421,680,2.496,681,1.753,682,2.139,683,3.07,698,1.239,699,1.421,713,1.421,714,1.421,715,1.421,716,1.421,717,1.421,718,1.421,719,2.139,720,1.421,721,1.421,726,2.496,727,1.865,728,2.139,729,2.139,730,2.505,731,2.139,732,4.206,733,4.206,734,1.664,735,3.778,736,3.681,737,3.061,738,3.013,739,3.681,740,4.096,741,4.096,742,2.139,743,3.061,744,2.862,745,2.033,746,2.572,747,2.033,748,2.033,749,3.061,750,2.033,751,3.061,752,2.033,753,3.226,754,2.139,755,3.061,756,2.139,757,2.139,758,2.862,759,2.139,760,2.139,761,2.033,762,2.033,763,2.033,764,2.033,765,2.033,766,2.033,767,2.033,768,1.664,769,1.421,770,1.421,771,1.421,772,1.664,773,1.421,774,2.033,775,2.033,776,2.033,777,2.033,778,2.033,779,2.033,780,3.681,781,2.505,782,3.061,783,3.681,784,1.664,785,1.664,786,2.033,787,2.033,788,2.033,789,2.505,790,2.139,791,2.139,792,2.139,793,2.862,794,2.139,795,2.139,796,2.139,797,2.139,798,2.862]],["title/injectables/ProductosService.html",[203,0.814,572,1.796]],["body/injectables/ProductosService.html",[3,0.568,4,0.568,8,0.487,10,0.55,13,0.474,22,0.918,29,1.645,42,0.34,49,1.039,54,0.652,60,1.039,62,0.508,63,0.842,64,0.044,65,0.842,66,0.411,67,0.842,68,0.681,69,0.474,70,0.918,74,2.059,82,0.601,114,2.641,120,0.76,121,0.487,128,1.645,129,0.568,130,0.568,131,0.487,141,0.947,148,2.03,170,0.83,201,0.034,202,0.034,203,1.309,204,2.069,226,0.7,246,2.03,261,2.552,304,1.841,375,1.462,376,2.271,398,2.343,519,3.882,520,3.882,522,3.146,523,4.395,525,3.855,526,3.314,527,3.882,528,3.882,535,3.146,558,4.598,559,3.882,572,2.891,681,2.298,799,3.146,800,4.743,801,5.37,802,3.844,803,3.844,804,3.844]],["title/components/RecuperarPasswordComponent.html",[0,0.208,194,0.814]],["body/components/RecuperarPasswordComponent.html",[0,0.269,1,0.594,2,0.984,3,0.318,4,0.318,5,0.74,6,0.74,7,0.74,8,0.273,10,0.451,11,1.301,13,0.492,14,0.661,16,1.528,18,1.718,19,0.597,20,3.176,22,1.036,24,1.098,25,1.309,26,0.74,27,1.63,28,1.303,30,0.984,31,0.923,32,0.984,33,1.174,38,0.984,42,0.19,43,0.405,46,0.737,49,0.699,53,1.299,54,0.534,57,1.384,60,1.069,62,0.451,63,0.699,64,0.044,65,0.923,66,0.451,67,0.699,68,0.405,69,0.473,70,0.618,72,1.098,77,1.528,78,1.038,80,1.069,82,0.57,92,0.938,94,1.038,97,1.301,116,1.926,120,0.665,121,0.273,122,1.158,124,1.03,125,0.318,129,0.318,130,0.318,131,0.534,141,0.786,149,0.74,164,1.309,170,0.696,173,0.74,174,1.098,175,1.098,176,0.74,177,1.449,178,0.74,180,0.74,181,0.53,182,0.74,183,0.594,184,0.74,185,0.594,186,0.74,187,0.594,188,0.74,189,0.594,190,0.74,191,0.74,192,0.594,193,0.74,194,1.163,195,1.792,196,0.74,197,0.594,198,0.74,199,0.74,200,0.74,201,0.023,202,0.023,226,0.74,231,2.449,232,2.743,233,2.257,250,1.311,253,2.231,254,3.449,255,3.411,258,1.03,268,1.718,286,0.92,309,1.678,375,1.454,394,0.74,451,2.017,452,1.823,457,2.017,461,2.257,464,2.944,465,2.231,467,1.224,468,1.224,470,1.528,471,1.528,472,2.154,474,1.76,475,1.76,476,2.613,483,1.528,486,2.017,488,1.158,497,1.158,500,2.017,501,2.537,502,1.946,503,1.946,505,1.946,506,3.262,507,3.176,508,1.718,509,1.449,511,1.718,513,1.718,550,1.718,617,1.158,619,1.718,623,1.158,625,2.049,626,1.718,631,1.718,639,1.503,640,1.503,642,1.76,644,1.311,645,1.311,646,1.946,647,1.718,648,1.718,673,1.946,674,1.946,677,1.946,680,1.946,681,1.366,698,1.311,726,1.946,727,1.946,735,2.613,738,3.116,742,2.231,744,3.294,746,2.66,753,3.294,754,2.231,756,2.231,757,2.231,758,2.944,759,2.66,760,2.231,768,1.76,769,1.503,770,1.503,771,1.503,772,3.116,773,1.503,781,1.76,784,1.76,785,1.76,790,2.231,791,2.944,792,2.231,793,2.944,794,2.231,795,2.231,796,2.231,797,2.231,798,2.944,805,4.103,806,4.103,807,1.76,808,3.192,809,3.807,810,3.192,811,3.807,812,4.212,813,3.192,814,2.151,815,3.192,816,3.192,817,2.151,818,2.151,819,2.613,820,2.151,821,2.151,822,4.714,823,2.151,824,2.151,825,2.151,826,2.151,827,2.151,828,2.151,829,2.151,830,2.151,831,2.151,832,3.192,833,2.151,834,2.151,835,2.613,836,2.151,837,1.76,838,2.151,839,2.151,840,2.151,841,2.151,842,1.76,843,2.151,844,2.151,845,2.151,846,2.613]],["title/components/RegistrarmeComponent.html",[0,0.208,197,0.814]],["body/components/RegistrarmeComponent.html",[0,0.267,1,0.589,2,0.978,3,0.315,4,0.315,5,0.734,6,0.734,7,0.734,8,0.27,10,0.48,11,1.297,13,0.503,14,0.691,16,1.519,18,1.708,19,0.599,20,3.17,22,0.968,24,1.091,25,1.303,26,0.734,27,1.627,28,1.3,30,0.978,31,0.982,32,0.978,33,1.168,38,0.978,42,0.188,43,0.402,46,0.734,49,0.695,53,1.294,54,0.532,57,1.38,60,1.029,62,0.503,63,0.83,64,0.044,65,0.982,66,0.449,67,0.83,68,0.402,69,0.472,70,0.614,72,1.091,77,2.009,78,1.232,79,1.616,80,1.194,82,0.596,83,0.658,91,1.021,92,0.782,94,1.034,97,0.876,116,2.14,120,0.662,121,0.27,122,1.148,124,1.021,125,0.315,129,0.315,130,0.315,131,0.569,141,0.782,148,1.358,149,0.734,160,2.083,164,0.734,170,0.469,173,0.734,174,1.091,175,1.091,176,0.734,177,1.443,178,0.734,180,0.734,181,0.526,182,0.734,183,0.589,184,0.734,185,0.589,186,0.734,187,0.589,188,0.734,189,0.589,190,0.734,191,0.734,192,0.589,193,0.734,194,0.589,195,0.734,196,0.734,197,1.158,198,1.542,199,0.734,200,0.734,201,0.023,202,0.023,226,0.694,231,2.286,240,2.217,254,1.3,258,1.021,268,2.039,281,1.491,282,3.634,283,1.491,286,0.913,288,1.091,299,1.383,300,2.258,301,2.258,302,1.148,303,1.3,309,1.616,375,1.449,394,0.734,451,2.226,452,1.814,457,2.009,461,2.25,467,1.217,468,1.217,470,1.519,471,1.519,472,1.814,483,1.519,486,2.25,488,1.148,490,1.3,497,1.148,500,2.25,501,2.53,502,1.934,503,1.934,505,1.934,506,2.967,507,2.967,508,1.708,509,1.443,510,1.934,511,1.708,512,1.708,513,1.708,550,2.258,617,1.148,619,1.708,623,1.148,625,2.039,626,1.708,627,2.217,631,1.148,639,1.491,640,1.491,644,1.3,645,1.3,646,1.934,647,1.708,648,2.258,663,2.217,671,2.217,673,2.557,674,2.557,675,3.134,676,2.217,677,2.865,678,2.217,679,2.217,680,2.557,681,1.795,682,2.217,683,3.134,698,1.3,699,1.491,713,1.491,714,1.491,715,1.491,716,1.491,717,1.491,718,1.491,719,2.217,720,1.491,721,1.491,726,2.557,727,1.934,728,2.217,729,2.217,742,2.217,744,3.285,746,2.648,753,3.285,754,2.217,756,2.217,757,2.217,758,2.932,759,2.217,760,2.217,769,1.491,770,1.491,771,1.491,773,1.491,789,2.597,790,2.217,791,2.217,792,2.217,793,2.932,794,2.217,795,2.217,796,2.217,797,2.217,798,2.932,819,2.597,835,1.746,837,2.597,842,1.746,847,1.746,848,3.788,849,3.173,850,3.788,851,3.173,852,2.133,853,2.133,854,2.133,855,2.133,856,2.133,857,3.788,858,2.133,859,2.133,860,2.133,861,2.133,862,2.133,863,2.133,864,2.133,865,2.133,866,2.133,867,2.133,868,1.746,869,1.491,870,1.746,871,2.133,872,3.173,873,3.173]],["title/interfaces/Usuario.html",[79,1.014,298,0.909]],["body/interfaces/Usuario.html",[3,0.289,4,0.289,8,0.248,10,0.318,13,0.482,14,0.686,19,0.595,22,0.379,29,0.838,31,1.162,42,0.318,43,0.377,46,0.576,48,1.194,50,1.369,51,1.369,54,0.248,57,0.541,62,0.612,64,0.044,66,0.463,68,0.377,69,0.355,70,0.576,72,0.674,74,1.541,78,1.308,79,2.042,80,1.093,81,1.937,82,0.656,83,1.503,86,1.23,87,2.774,88,2.774,91,2.069,94,0.733,95,0.838,107,2.421,114,1.924,115,3.042,116,2.024,120,0.531,121,0.248,125,0.289,128,0.838,129,0.289,130,0.289,131,0.656,141,1.404,143,1.054,148,2.295,150,1.814,160,2.024,164,1.901,169,1.194,170,0.439,201,0.021,202,0.021,203,0.821,205,1.369,206,1.603,207,1.054,211,1.603,213,1.603,214,1.603,215,1.603,216,1.194,220,1.054,222,1.601,223,0.751,224,1.054,225,1.054,226,0.764,227,1.425,228,1.603,230,1.54,231,1.948,232,2.634,233,1.425,234,2.515,235,3.289,236,3.747,237,1.603,239,2.515,240,1.369,241,1.603,243,1.603,245,0.838,246,0.838,247,1.603,248,1.603,250,1.194,251,1.603,253,1.369,254,2.883,255,2.515,256,1.603,257,1.603,258,1.425,259,2.435,261,1.937,262,1.603,265,1.194,266,1.723,267,1.603,268,2.163,270,1.603,271,2.079,273,1.369,274,1.603,276,1.603,277,1.603,279,1.603,280,2.435,281,1.369,282,1.369,283,1.369,284,0.938,285,1.054,286,0.838,287,1.054,288,0.674,289,1.603,291,1.814,292,1.054,293,1.054,294,1.054,295,1.425,296,1.425,297,1.425,298,0.604,299,1.458,300,1.601,301,1.601,302,2.326,303,2.883,304,0.938,305,1.194,306,2.823,307,1.054,308,1.603,309,1.901,310,3.725,311,1.603,312,1.603,313,2.435,314,1.603,315,1.603,316,1.603,317,3.289,318,2.435,319,1.603,320,2.809,321,2.435,322,1.603,323,1.603,324,1.603,325,1.603,326,1.603,327,1.603,328,2.435,329,1.603,330,1.603,331,1.603,332,1.603,333,1.603,334,2.435,335,2.945,336,3.289,337,1.603,338,1.603,339,3.18,340,3.725,341,1.603,342,1.603,343,1.603,344,2.435,345,2.435,346,1.603,347,3.725,348,2.515,349,2.945,350,2.435,351,1.657,352,2.435,353,2.435,354,2.435,355,1.603,356,1.603,357,1.603,358,1.603,359,1.054,360,1.603,413,1.194]],["title/coverage.html",[874,3.268]],["body/coverage.html",[0,0.409,1,1.066,8,0.49,9,3.162,28,0.952,56,1.329,57,1.066,59,2.355,64,0.043,66,0.413,79,1.329,181,0.952,183,1.066,185,1.066,187,1.066,189,1.066,192,1.066,194,1.066,197,1.066,201,0.034,202,0.034,203,1.485,205,3.324,288,1.329,298,1.589,361,3.324,388,2.036,414,3.324,450,3.162,516,3.162,517,3.162,555,3.162,572,2.355,618,3.162,653,3.162,654,3.162,655,3.162,732,3.162,733,3.162,734,3.162,799,3.162,805,3.162,806,3.162,807,3.162,847,3.162,874,3.162,875,3.863,876,3.863,877,3.863,878,3.893,879,4.757,880,6.025,881,5.625,882,3.162,883,5.155,884,3.893,885,5.38,886,3.162,887,3.162,888,3.162,889,3.162,890,3.863,891,5.155,892,4.757,893,4.757,894,3.863,895,3.863,896,3.863,897,3.863,898,3.863,899,3.162,900,2.7,901,3.863,902,3.863]],["title/dependencies.html",[903,2.026,904,2.895]],["body/dependencies.html",[64,0.043,121,0.551,122,2.34,125,0.642,128,1.861,201,0.037,202,0.037,394,1.495,900,3.569,904,3.558,905,4.348,906,5.911,907,4.348,908,5.424,909,5.108,910,4.348,911,4.348,912,4.348,913,4.348,914,4.348,915,4.348,916,4.348,917,4.348,918,4.348,919,3.558,920,4.348,921,4.348,922,4.348,923,4.348,924,3.558,925,4.348]],["title/miscellaneous/functions.html",[926,1.509,927,2.895]],["body/miscellaneous/functions.html",[13,0.395,14,0.567,15,2.725,19,0.556,22,0.866,28,1.352,42,0.395,64,0.041,69,0.395,82,0.658,92,1.102,201,0.037,202,0.037,468,1.714,509,1.538,868,3.659,878,4.49,882,4.49,919,4.249,926,2.725,927,3.659,928,4.471,929,3.628,930,4.471,931,4.471,932,4.471,933,4.471,934,4.471]],["title/index.html",[42,0.219,935,2.476,936,2.476]],["body/index.html",[10,0.519,11,1.34,13,0.518,14,0.615,18,1.824,19,0.62,22,0.848,54,0.43,56,1.166,57,0.936,58,2.774,62,0.593,64,0.042,68,0.673,69,0.495,70,0.656,71,1.451,72,1.507,73,2.066,74,1.861,76,3.127,77,1.623,78,1.079,79,1.507,80,0.959,81,2.358,82,0.43,83,1.045,84,2.774,85,2.774,86,1.079,87,2.066,88,2.066,91,1.623,94,1.264,95,2.369,97,1.34,131,0.65,141,0.835,151,2.369,164,1.166,170,0.501,201,0.031,202,0.031,216,2.066,226,0.501,227,1.623,231,1.875,250,3.127,258,2.324,375,1.045,451,1.875,457,1.623,492,2.774,509,1.871,532,2.774,647,1.824,681,2.195,846,2.774,869,3.392,870,2.774,929,2.369,937,3.39,938,3.39,939,3.39,940,2.774,941,5.13,942,3.39,943,4.381,944,4.381,945,3.39,946,3.39,947,3.39,948,3.39,949,3.39,950,3.39,951,4.853,952,3.39,953,3.39,954,3.39,955,3.39,956,3.39,957,3.39,958,3.972,959,3.585,960,4.381,961,4.381,962,4.381,963,3.39,964,4.381,965,3.39,966,3.39,967,3.39,968,3.39,969,4.381,970,3.39,971,3.39,972,3.39,973,4.381,974,3.39,975,4.381,976,3.39,977,3.39,978,3.39,979,3.39,980,3.39,981,3.39,982,3.39,983,3.39,984,3.39,985,3.39,986,3.39,987,3.39,988,3.39,989,3.39,990,4.381,991,3.39,992,4.381,993,3.39,994,3.39,995,4.381,996,3.39,997,3.39,998,4.381,999,3.39,1000,3.39,1001,3.39,1002,3.39,1003,3.39,1004,3.39,1005,3.39,1006,3.39,1007,4.853,1008,4.381,1009,3.39,1010,3.39,1011,3.39,1012,3.39]],["title/modules.html",[1013,3.268]],["body/modules.html",[64,0.038,201,0.038,202,0.038,1013,3.856]],["title/overview.html",[1014,3.268]],["body/overview.html",[2,1.44,64,0.038,201,0.038,202,0.038,204,2.513,413,2.846,512,2.513,1014,3.822,1015,4.67,1016,4.67]],["title/properties.html",[43,0.448,903,2.026]],["body/properties.html",[43,0.595,64,0.04,201,0.038,202,0.038,1017,4.69,1018,4.69]],["title/miscellaneous/variables.html",[926,1.509,1019,2.895]],["body/miscellaneous/variables.html",[10,0.566,12,2.577,13,0.512,14,0.715,15,3.322,19,0.595,22,0.714,31,0.808,42,0.326,62,0.583,64,0.044,66,0.495,69,0.481,86,1.244,97,1.018,101,2.029,102,2.029,201,0.033,202,0.033,234,2.577,375,1.425,468,1.772,509,1.589,525,3.229,526,3.527,681,1.578,731,3.229,869,2.577,884,3.018,886,4.131,887,4.131,888,3.018,889,3.782,899,3.018,900,3.229,924,3.018,926,2.247,929,3.698,940,4.131,958,3.018,959,3.782,1019,3.018,1020,3.687,1021,3.687,1022,4.621,1023,4.621,1024,4.621,1025,3.687,1026,3.687,1027,3.687,1028,3.687,1029,3.687,1030,3.687,1031,3.687,1032,3.687,1033,3.687,1034,3.687,1035,3.687,1036,3.687,1037,3.687,1038,3.687,1039,3.687,1040,3.687,1041,3.687,1042,3.687,1043,3.687,1044,3.687,1045,3.687,1046,3.687,1047,4.621,1048,3.687,1049,3.687,1050,3.687,1051,3.687,1052,3.687,1053,3.687,1054,3.687,1055,3.687,1056,3.687,1057,5.048,1058,3.687,1059,3.687,1060,4.621,1061,3.687,1062,3.687,1063,3.687,1064,3.687]]],"invertedIndex":[["",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["0.0.0",{"_index":1018,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":359,"title":{"interfaces/CartItem-1.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["1.11.3",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":514,"title":{},"body":{"components/ContactoComponent.html":{}}}],["10/10",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["100000",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["12/12",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":683,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["15",{"_index":792,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["17/17",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["18.0.0",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":504,"title":{},"body":{"components/ContactoComponent.html":{}}}],["2.11.8",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1016,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1015,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["5.3.3",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["569",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":791,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["6/6",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["6412",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.0",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":512,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"overview.html":{}}}],["9/9",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["900000",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["9876",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["9]{6",{"_index":824,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["9]{9",{"_index":490,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["abstractcontrol",{"_index":744,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["acceder",{"_index":480,"title":{},"body":{"components/ContactoComponent.html":{}}}],["accessors",{"_index":458,"title":{},"body":{"components/ContactoComponent.html":{}}}],["acciones",{"_index":411,"title":{},"body":{"components/CartComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["actual",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["actual_component",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["actualiza",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["actualización",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["actualizada",{"_index":781,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["actualizado",{"_index":709,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["actualizados",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizar",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["actualizarcontraseña",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarcontraseña(newpassword",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizarperfil",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarperfil(datosactualizados",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizarusuario",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarusuario(usuario",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualmente",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["addtocart",{"_index":441,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["addtocart(product",{"_index":430,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["administrador",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["administrar",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["agregado",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["agregar",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{}}}],["agrupando",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["albavets",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["alert",{"_index":1005,"title":{},"body":{"index.html":{}}}],["alert(\"contraseña",{"_index":787,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"correo",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"el",{"_index":835,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["alert(\"hubo",{"_index":782,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"información",{"_index":779,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"la",{"_index":841,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["alert(\"¡inicio",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"¡usuario",{"_index":867,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["alert('error",{"_index":711,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('producto",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["alert('usuario",{"_index":708,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('¡mensaje",{"_index":496,"title":{},"body":{"components/ContactoComponent.html":{}}}],["alert(`tu",{"_index":834,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["alerta",{"_index":1012,"title":{},"body":{"index.html":{}}}],["almacenamiento",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["angular",{"_index":940,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":535,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["angular/compiler",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":394,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataInitializationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["archivo",{"_index":519,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["arranque",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["asociada",{"_index":966,"title":{},"body":{"index.html":{}}}],["asunto",{"_index":491,"title":{},"body":{"components/ContactoComponent.html":{}}}],["autenticación",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["authservice",{"_index":57,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"index.html":{}}}],["añade",{"_index":427,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["añadir",{"_index":429,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["años",{"_index":729,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["barra",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["basada",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["behaviorsubject(0",{"_index":415,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["behaviorsubject(null",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["boolean",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["bootstrap",{"_index":900,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["calle",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["cambiar",{"_index":735,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["cambio",{"_index":749,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["cambios",{"_index":731,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["campos",{"_index":756,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["cantidad",{"_index":390,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["caracteres",{"_index":505,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["carga",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["cargando",{"_index":586,"title":{},"body":{"components/HomeComponent.html":{}}}],["cargarsesion",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["carrito",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["cart",{"_index":364,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["cart'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["cart.component.html",{"_index":366,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cart.component.scss",{"_index":367,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cart.filter(item",{"_index":426,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.find((item",{"_index":432,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.find(item",{"_index":422,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.push",{"_index":435,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.reduce((total",{"_index":437,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cartcomponent",{"_index":181,"title":{"components/CartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["cartitem",{"_index":388,"title":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{}},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cartitemcount",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["cartitems",{"_index":368,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cartservice",{"_index":56,"title":{"injectables/CartService.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["carácter",{"_index":796,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["caso",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["categoria.nombre",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorias",{"_index":565,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoriaseleccionada",{"_index":566,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoryid",{"_index":582,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoría",{"_index":580,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorías",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ProductosService.html":{}}}],["celular",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["cerrar",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["cierra",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["class",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["cliente",{"_index":526,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"miscellaneous/variables.html":{}}}],["closemodal",{"_index":662,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["coalescencia",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coincidan",{"_index":754,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["coinciden",{"_index":758,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["comando",{"_index":943,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":942,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["completa",{"_index":593,"title":{},"body":{"components/HomeComponent.html":{}}}],["completo",{"_index":872,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["compodoc",{"_index":941,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["componentes",{"_index":979,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"overview.html":{}}}],["compras",{"_index":363,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["comprueba",{"_index":1010,"title":{},"body":{"index.html":{}}}],["con",{"_index":681,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configura",{"_index":468,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configuración",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurada",{"_index":933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["confirmpassword",{"_index":772,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword.seterrors",{"_index":829,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword.value",{"_index":828,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword?.seterrors(null",{"_index":830,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["console.error('error",{"_index":552,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["const",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["constructor",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["constructor(@inject(platform_id",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["constructor(cartservice",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{}}}],["constructor(fb",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["constructor(formbuilder",{"_index":460,"title":{},"body":{"components/ContactoComponent.html":{}}}],["constructor(http",{"_index":522,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["constructor(platformid",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{}}}],["constructor(private",{"_index":398,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"injectables/ProductosService.html":{}}}],["constructor(productosservice",{"_index":571,"title":{},"body":{"components/HomeComponent.html":{}}}],["construir",{"_index":463,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contactform",{"_index":455,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ContactoComponent.html":{}}}],["contacto&#64;albavets.cl",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["contacto'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["contacto.component.html",{"_index":453,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto.component.scss",{"_index":454,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto@albavets.cl",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["contactocomponent",{"_index":183,"title":{"components/ContactoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["contador",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["contener",{"_index":726,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["contiene",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["contrario",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["contraseña",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["contraseñas",{"_index":753,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control",{"_index":677,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control.get('confirmpassword",{"_index":826,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["control.get('newpassword",{"_index":825,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["control.get('password",{"_index":858,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["control.get('repetirpassword",{"_index":859,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["control.invalid",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control.markastouched",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["controles",{"_index":482,"title":{},"body":{"components/ContactoComponent.html":{}}}],["copy",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["correctamente",{"_index":497,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["correcto",{"_index":998,"title":{},"body":{"index.html":{}}}],["correo",{"_index":506,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["count",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":874,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["crear",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["credenciales",{"_index":995,"title":{},"body":{"index.html":{}}}],["cualquier",{"_index":964,"title":{},"body":{"index.html":{}}}],["cuando",{"_index":532,"title":{},"body":{"injectables/DataInitializationService.html":{},"index.html":{}}}],["cuenta",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["código",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["dado",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["data",{"_index":541,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["data.categorias",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.productos",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{}}}],["datainitializationservice",{"_index":59,"title":{"injectables/DataInitializationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["datainitservice",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["date",{"_index":714,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["date(control.value",{"_index":716,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["datos",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["datosactualizados",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":501,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["debería",{"_index":991,"title":{},"body":{"index.html":{}}}],["debes",{"_index":789,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["declaraciones",{"_index":950,"title":{},"body":{"index.html":{}}}],["default",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["defined",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["definidas",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":904,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derechos",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["describe",{"_index":968,"title":{},"body":{"index.html":{}}}],["describir",{"_index":956,"title":{},"body":{"index.html":{}}}],["descripcion",{"_index":955,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":952,"title":{},"body":{"index.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desde",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["destruir",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["detalles",{"_index":960,"title":{},"body":{"index.html":{}}}],["detección",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determinar",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["devuelto",{"_index":972,"title":{},"body":{"index.html":{}}}],["dirección",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/ContactoComponent.html":{}}}],["directivas",{"_index":980,"title":{},"body":{"index.html":{}}}],["directive",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["directives",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["disabled",{"_index":697,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["documentacion",{"_index":944,"title":{},"body":{"index.html":{}}}],["documentas",{"_index":977,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["dynamic",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["dígitos",{"_index":513,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edad",{"_index":675,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminima",{"_index":679,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminimavalidator",{"_index":663,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminimavalidator(control",{"_index":671,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edición",{"_index":670,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editar",{"_index":687,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editform",{"_index":660,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editinguser",{"_index":661,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["edituser",{"_index":664,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["edituser(usuario",{"_index":684,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["eficiente",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ejecuta",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["ejecutando",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["ejemplos",{"_index":974,"title":{},"body":{"index.html":{}}}],["el",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electrónico",{"_index":507,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["element",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["elemento",{"_index":982,"title":{},"body":{"index.html":{}}}],["elimina",{"_index":382,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["eliminar",{"_index":386,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["email",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["emailform",{"_index":811,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["en",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["enlaces",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["enrutador",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entorno",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entre",{"_index":790,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["enviado",{"_index":476,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["enviar",{"_index":515,"title":{},"body":{"components/ContactoComponent.html":{}}}],["envía",{"_index":815,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["envío",{"_index":471,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["err",{"_index":551,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["error",{"_index":550,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["es",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["esadministrador",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["especial",{"_index":797,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["específica",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["espía",{"_index":1004,"title":{},"body":{"index.html":{}}}],["est",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["esta",{"_index":993,"title":{},"body":{"index.html":{}}}],["estructura",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["eventcoalescing",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventos",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["existingproduct",{"_index":431,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["existingproduct.cantidad",{"_index":434,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["exitosa",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["exitoso",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{}}}],["export",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["express",{"_index":919,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["express.express",{"_index":931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["f",{"_index":459,"title":{},"body":{"components/ContactoComponent.html":{}}}],["fallida",{"_index":1003,"title":{},"body":{"index.html":{}}}],["false",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"interfaces/Usuario.html":{}}}],["falso",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["favor",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fb",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fecha",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["fechanac",{"_index":715,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanac.getfullyear",{"_index":718,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanac.getmonth",{"_index":721,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanacimiento",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["felipe",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["fetch",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["filterproducts",{"_index":568,"title":{},"body":{"components/HomeComponent.html":{}}}],["filterproducts(categoryid",{"_index":576,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtra",{"_index":578,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtrados",{"_index":595,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtrar",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{}}}],["final",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["footer",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["formbuilder",{"_index":461,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["formgroup",{"_index":472,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["formsmodule",{"_index":365,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["formulario",{"_index":451,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["formularios",{"_index":464,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["francisco",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["fsii",{"_index":938,"title":{},"body":{"index.html":{}}}],["fsii_sumativa_angular",{"_index":937,"title":{},"body":{"index.html":{}}}],["funcionalidad",{"_index":362,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["función",{"_index":958,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":927,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fácilmente",{"_index":481,"title":{},"body":{"components/ContactoComponent.html":{}}}],["g",{"_index":755,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["g.get('confirmpassword')?.value",{"_index":775,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["g.get('newpassword')?.value",{"_index":774,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["genera",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["generado",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["general",{"_index":953,"title":{},"body":{"index.html":{}}}],["generar",{"_index":846,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"index.html":{}}}],["generartoken",{"_index":812,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["generartokenrecuperacion",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["generartokenrecuperacion(email",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["gestionar",{"_index":656,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["gestión",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getcartitemcount",{"_index":439,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["getcartitems",{"_index":417,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["getdata",{"_index":801,"title":{},"body":{"injectables/ProductosService.html":{}}}],["getf",{"_index":477,"title":{},"body":{"components/ContactoComponent.html":{}}}],["getter",{"_index":479,"title":{},"body":{"components/ContactoComponent.html":{}}}],["getting",{"_index":935,"title":{"index.html":{}},"body":{}}],["getusuarioactual",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getusuarioactualobservable",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getusuarios",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["guardar",{"_index":730,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{}}}],["ha",{"_index":474,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["habilita",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["han",{"_index":533,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["hay",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["haya",{"_index":1007,"title":{},"body":{"index.html":{}}}],["hidratación",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":562,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["home.component.html",{"_index":563,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":564,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":185,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["hoy",{"_index":713,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["hoy.getfullyear",{"_index":717,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["hoy.getmonth",{"_index":720,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["html",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["http",{"_index":525,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":523,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["icons",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["identifier",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["iguales",{"_index":760,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["implementación",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["incluir",{"_index":986,"title":{},"body":{"index.html":{}}}],["incorrecta",{"_index":992,"title":{},"body":{"index.html":{}}}],["incorrectos",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["información",{"_index":783,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["ingresa",{"_index":954,"title":{},"body":{"index.html":{}}}],["ingresado",{"_index":836,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingresados",{"_index":843,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingresar",{"_index":822,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingrese",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inicia",{"_index":868,"title":{},"body":{"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{}}}],["inicializa",{"_index":467,"title":{},"body":{"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inicialización",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"index.html":{}}}],["inicializado",{"_index":534,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["inicializar",{"_index":518,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["iniciar",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["inicio",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{}}}],["initform",{"_index":665,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["initialization.service",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["initialization.service.ts",{"_index":517,"title":{},"body":{"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["initialization.service.ts:14",{"_index":524,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initialization.service.ts:32",{"_index":529,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initializedata",{"_index":521,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initializing",{"_index":553,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["inject",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["inject(platform_id",{"_index":536,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["injectable",{"_index":203,"title":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"overview.html":{}}}],["instancia",{"_index":932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intenta",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["interface",{"_index":298,"title":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"interfaces/Usuario.html":{}},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["interfaces",{"_index":413,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"interfaces/Usuario.html":{},"overview.html":{}}}],["interfaz",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["inválidas",{"_index":996,"title":{},"body":{"index.html":{}}}],["isbrowser",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["isplatformbrowser",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["isplatformbrowser(platformid",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["item",{"_index":391,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["item.cantidad",{"_index":404,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["item.id",{"_index":423,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["item.nombre",{"_index":412,"title":{},"body":{"components/CartComponent.html":{}}}],["item.precio",{"_index":409,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["items",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["javier",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["jsdoc",{"_index":984,"title":{},"body":{"index.html":{}}}],["json",{"_index":520,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["json.parse(localstorage.getitem('cart",{"_index":418,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["json.parse(localstorage.getitem('sesionusuario",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.parse(localstorage.getitem('usuarios",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.parse(sesionusuariojson",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.parse(usuariosjson",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.stringify(cart",{"_index":425,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["json.stringify(data.categorias",{"_index":545,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(data.productos",{"_index":548,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(data.usuarios",{"_index":542,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(usuarioactualizado",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.stringify(usuarios",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.stringify(usuariosincontraseña",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lado",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["las",{"_index":375,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["letra",{"_index":793,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["levantar",{"_index":948,"title":{},"body":{"index.html":{}}}],["lista",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["llama",{"_index":1006,"title":{},"body":{"index.html":{}}}],["llamado",{"_index":1008,"title":{},"body":{"index.html":{}}}],["loadcartitems",{"_index":370,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["loaddata",{"_index":569,"title":{},"body":{"components/HomeComponent.html":{}}}],["loadusers",{"_index":666,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["local",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.getitem('categorias",{"_index":543,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.getitem('productos",{"_index":546,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.getitem('sesionusuario",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.getitem('usuarios",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.removeitem('sesionusuario",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.setitem('cart",{"_index":424,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["localstorage.setitem('categorias",{"_index":544,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.setitem('productos",{"_index":547,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.setitem('sesionusuario",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.setitem('usuarios",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["login",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["login'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["login(email",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["login.component.html",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":187,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["logueado",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["los",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["m",{"_index":719,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manager",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manageruserscomponent",{"_index":189,"title":{"components/ManagerUsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["maneja",{"_index":470,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manejar",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["manejo",{"_index":994,"title":{},"body":{"index.html":{}}}],["matching",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["mayor",{"_index":728,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mayúscula",{"_index":795,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mejora",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menor",{"_index":682,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["menos",{"_index":503,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mensaje",{"_index":492,"title":{},"body":{"components/ContactoComponent.html":{},"index.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["methods",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mi",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["minúscula",{"_index":794,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["miscellaneous",{"_index":926,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":757,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["modal",{"_index":669,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["moderna",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modificar",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["modificarperfilcomponent",{"_index":192,"title":{"components/ModificarPerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["modules",{"_index":1013,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostrado",{"_index":1011,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":583,"title":{},"body":{"components/HomeComponent.html":{}}}],["muestra",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["método",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"index.html":{}}}],["mínima",{"_index":676,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["módulo",{"_index":976,"title":{},"body":{"index.html":{}}}],["múltiples",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nacimiento",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["navegación",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["navegador",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["new",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["newpassword",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["newpassword.value",{"_index":827,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["next",{"_index":540,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["ngondestroy",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["nico",{"_index":395,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["node",{"_index":934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nombre",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["notas",{"_index":989,"title":{},"body":{"index.html":{}}}],["npx",{"_index":945,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevamente",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["nuevo",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevos",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.email",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["null",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["number",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["numéricos",{"_index":727,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["número",{"_index":511,"title":{},"body":{"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["o",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["object",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["object.values(this.editform.controls).foreach(control",{"_index":712,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["object.values(this.loginform.controls).foreach(control",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(this.passwordform.controls).foreach(control",{"_index":845,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["object.values(this.registroform.controls).foreach(control",{"_index":871,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["objeto",{"_index":680,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["observable",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["obtener",{"_index":574,"title":{},"body":{"components/HomeComponent.html":{}}}],["obtiene",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["olvidaste",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["onsubmit",{"_index":457,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["onsubmitpassword",{"_index":740,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["onsubmitperfil",{"_index":741,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["operaciones",{"_index":376,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"injectables/ProductosService.html":{}}}],["optional",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["otro",{"_index":870,"title":{},"body":{"components/RegistrarmeComponent.html":{},"index.html":{}}}],["outlet",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1014,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":946,"title":{},"body":{"index.html":{}}}],["package",{"_index":903,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["parámetro",{"_index":967,"title":{},"body":{"index.html":{}}}],["parámetros",{"_index":957,"title":{},"body":{"index.html":{}}}],["password",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["password'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["password.component.html",{"_index":810,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.scss",{"_index":809,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts",{"_index":807,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:20",{"_index":821,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":813,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":817,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":820,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:71",{"_index":814,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":818,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.value",{"_index":860,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["password/recuperar",{"_index":806,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["passwordform",{"_index":738,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["passwordmatchvalidator",{"_index":742,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["passwordmatchvalidator(control",{"_index":819,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["passwordmatchvalidator(g",{"_index":751,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["perfil'},{'name",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["perfil.component.html",{"_index":737,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.scss",{"_index":736,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts",{"_index":734,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["perfil.component.ts:19",{"_index":762,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:21",{"_index":761,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:23",{"_index":743,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:38",{"_index":747,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:58",{"_index":745,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:74",{"_index":752,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:82",{"_index":750,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:96",{"_index":748,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil/modificar",{"_index":733,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["perfilform",{"_index":739,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["permite",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permitiendo",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{}}}],["pero",{"_index":999,"title":{},"body":{"index.html":{}}}],["personal",{"_index":780,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["personalizadas",{"_index":988,"title":{},"body":{"index.html":{}}}],["personalizado",{"_index":674,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["peticiones",{"_index":528,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["plataforma",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["platform_id",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["platformid",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["popperjs/core",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["precio",{"_index":396,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["prepara",{"_index":686,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["principal",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["proceso",{"_index":808,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["product",{"_index":428,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["product.id",{"_index":433,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["productid",{"_index":384,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["producto",{"_index":385,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["producto.categoria",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.descripcion",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.nombre",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.precio",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["productos",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ProductosService.html":{}}}],["productosfiltrados",{"_index":567,"title":{},"body":{"components/HomeComponent.html":{}}}],["productosservice",{"_index":572,"title":{"injectables/ProductosService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/ProductosService.html":{},"coverage.html":{}}}],["promesa",{"_index":530,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["promise((resolve",{"_index":537,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["properties",{"_index":43,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"properties.html":{}}}],["proporciona",{"_index":959,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["proporcionadas",{"_index":1009,"title":{},"body":{"index.html":{}}}],["proporcionado",{"_index":816,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["proporcionar",{"_index":951,"title":{},"body":{"index.html":{}}}],["propósito",{"_index":963,"title":{},"body":{"index.html":{}}}],["provideclienthydration",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["providehttpclient(withfetch",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":990,"title":{},"body":{"index.html":{}}}],["puedes",{"_index":985,"title":{},"body":{"index.html":{}}}],["página",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{}}}],["quantity",{"_index":419,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["que",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["reactiveformsmodule",{"_index":452,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reactivo",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reactivos",{"_index":465,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["realiza",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["realizar",{"_index":527,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["recupera",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["recuperación",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["recuperar",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["recuperarpassword",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["recuperarpassword(email",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["recuperarpasswordcomponent",{"_index":194,"title":{"components/RecuperarPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["registra",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["registrado",{"_index":837,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["registrarme",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["registrarme.component.html",{"_index":849,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarme.component.scss",{"_index":848,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarmecomponent",{"_index":197,"title":{"components/RegistrarmeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["registrarse",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["registrarte",{"_index":873,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarusuario",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrarusuario(nuevousuario",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["registro",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["registroform",{"_index":850,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["regístrate",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{}}}],["reject",{"_index":538,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["reject(err",{"_index":554,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["relacionadas",{"_index":800,"title":{},"body":{"injectables/ProductosService.html":{}}}],["rellena",{"_index":997,"title":{},"body":{"index.html":{}}}],["removecartitem",{"_index":371,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{}}}],["removecartitem(productid",{"_index":380,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["renderizado",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendimiento",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repetir",{"_index":798,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["repetirpassword",{"_index":857,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["repetirpassword.seterrors",{"_index":862,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["repetirpassword.value",{"_index":861,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["repetirpassword?.seterrors(null",{"_index":863,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["requerida",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["requerido",{"_index":500,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reservados",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve",{"_index":549,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["respuesta",{"_index":1002,"title":{},"body":{"index.html":{}}}],["restricción",{"_index":965,"title":{},"body":{"index.html":{}}}],["resuelve",{"_index":531,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["results",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorno",{"_index":970,"title":{},"body":{"index.html":{}}}],["return",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["returns",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rol",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["root",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["root'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["router",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["routerlink",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["routerlinkactive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rutas",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["s",{"_index":949,"title":{},"body":{"index.html":{}}}],["san",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["se",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["sea",{"_index":1000,"title":{},"body":{"index.html":{}}}],["secciones",{"_index":987,"title":{},"body":{"index.html":{}}}],["según",{"_index":579,"title":{},"body":{"components/HomeComponent.html":{}}}],["seleccionada",{"_index":581,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["ser",{"_index":508,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["server",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["server.ts",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/auth.service",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["services/cart.service",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{}}}],["services/data",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["services/productos.service",{"_index":596,"title":{},"body":{"components/HomeComponent.html":{}}}],["servicio",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["servicios",{"_index":981,"title":{},"body":{"index.html":{}}}],["servidor",{"_index":929,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sesionusuario",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sesionusuario.email",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sesionusuariojson",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sesión",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["si",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["sido",{"_index":475,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["significado",{"_index":971,"title":{},"body":{"index.html":{}}}],["simula",{"_index":1001,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":961,"title":{},"body":{"index.html":{}}}],["sola",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solicitudes",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["son",{"_index":759,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["src/.../app.config.server.ts",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:29",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/cart/cart.component.ts",{"_index":361,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"coverage.html":{}}}],["src/app/components/cart/cart.component.ts:35",{"_index":393,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:37",{"_index":374,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:46",{"_index":379,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:51",{"_index":377,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:60",{"_index":389,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:69",{"_index":381,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:75",{"_index":392,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts",{"_index":450,"title":{},"body":{"components/ContactoComponent.html":{},"coverage.html":{}}}],["src/app/components/contacto/contacto.component.ts:18",{"_index":473,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:20",{"_index":462,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:31",{"_index":466,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:44",{"_index":469,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:58",{"_index":478,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":590,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":592,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":594,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":591,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":573,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:43",{"_index":585,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:53",{"_index":584,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:65",{"_index":589,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:74",{"_index":577,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:86",{"_index":575,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/manager",{"_index":653,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["src/app/components/modificar",{"_index":732,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/recuperar",{"_index":805,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/registrarme/registrarme.component.ts",{"_index":847,"title":{},"body":{"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:20",{"_index":851,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:37",{"_index":853,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:53",{"_index":855,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:71",{"_index":852,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:85",{"_index":854,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:106",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:117",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:127",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:146",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:167",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:186",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:221",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:251",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:264",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:30",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:46",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:57",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:69",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:79",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/cart.service.ts",{"_index":414,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/services/cart.service.ts:109",{"_index":447,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:121",{"_index":444,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:28",{"_index":449,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:30",{"_index":442,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:47",{"_index":445,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:59",{"_index":448,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:75",{"_index":446,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:88",{"_index":443,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/data",{"_index":516,"title":{},"body":{"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["src/app/services/productos.service.ts",{"_index":799,"title":{},"body":{"injectables/ProductosService.html":{},"coverage.html":{}}}],["src/app/services/productos.service.ts:12",{"_index":802,"title":{},"body":{"injectables/ProductosService.html":{}}}],["src/app/services/productos.service.ts:24",{"_index":803,"title":{},"body":{"injectables/ProductosService.html":{}}}],["src/main.server.ts",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["started",{"_index":936,"title":{"index.html":{}},"body":{}}],["statements",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["styles",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["styleurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["suave",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["submitted",{"_index":456,"title":{},"body":{"components/ContactoComponent.html":{}}}],["subscription",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["subtotal",{"_index":410,"title":{},"body":{"components/CartComponent.html":{}}}],["sum",{"_index":408,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["sumativa",{"_index":939,"title":{},"body":{"index.html":{}}}],["suscribiéndose",{"_index":587,"title":{},"body":{"components/HomeComponent.html":{}}}],["suscripción",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["tem",{"_index":383,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["tems",{"_index":378,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["tener",{"_index":502,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.authservice.actualizarcontraseña(newpassword",{"_index":786,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.actualizarperfil(datosactualizados",{"_index":778,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.actualizarusuario(updateduser",{"_index":707,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.esadministrador",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.generartokenrecuperacion(email",{"_index":833,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.authservice.getusuarioactual",{"_index":763,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.getusuarioactualobservable().subscribe(usuario",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getusuarios",{"_index":701,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.login(email",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.recuperarpassword(email",{"_index":840,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.authservice.registrarusuario(nuevousuario",{"_index":866,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.cargarsesion",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.cartitemcount",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.cartitemcount.asobservable",{"_index":440,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.cartitemcount.next(count",{"_index":438,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.cartitems",{"_index":400,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartitems.reduce((sum",{"_index":407,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.addtocart(product",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cartservice.getcartitemcount().subscribe(count",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.cartservice.getcartitems",{"_index":401,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.removecartitem(productid",{"_index":405,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.updatecartitemquantity(item.id",{"_index":403,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.categorias",{"_index":599,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoriaseleccionada",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.closemodal",{"_index":710,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.contactform",{"_index":484,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.controls",{"_index":499,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.reset",{"_index":498,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.valid",{"_index":495,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.datainitservice.initializedata().then",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.edadminimavalidator",{"_index":699,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.editform",{"_index":696,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.patchvalue(usuario",{"_index":703,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.valid",{"_index":704,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.value",{"_index":706,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editinguser",{"_index":702,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.emailform",{"_index":823,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.get('email')?.value",{"_index":832,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.markallastouched",{"_index":838,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.valid",{"_index":831,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.fb.group",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.filterproducts(0",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterproducts(categoryid",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formbuilder.group",{"_index":485,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.getcartitems",{"_index":421,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.getusuarioactual",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.getusuarios",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.http.get('/assets/db/albavetsdb.json",{"_index":804,"title":{},"body":{"injectables/ProductosService.html":{}}}],["this.http.get('assets/db/albavetsdb.json').subscribe",{"_index":539,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["this.initform",{"_index":695,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.isbrowser",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["this.loadcartitems",{"_index":399,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.loaddata",{"_index":597,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.loadusers",{"_index":694,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.loginform",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordform",{"_index":768,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.get('newpassword')?.value",{"_index":785,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.get('token')?.value",{"_index":839,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.reset",{"_index":788,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.passwordform.valid",{"_index":784,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":773,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.perfilform",{"_index":764,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.perfilform.valid",{"_index":776,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.perfilform.value",{"_index":777,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.productos",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productos.filter(producto",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productosfiltrados",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productosservice.getdata().subscribe(data",{"_index":598,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.registroform",{"_index":856,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.registroform.valid",{"_index":864,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.registroform.value",{"_index":865,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.router.navigate",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":842,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.submitted",{"_index":494,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.total",{"_index":406,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.updatecartitemcount",{"_index":416,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.updatetotal",{"_index":402,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.usersubscription",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usersubscription.unsubscribe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usuarioactual",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual.asobservable",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(null",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(sesionusuario",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(usuariosincontraseña",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.value?.rol",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual?.celular",{"_index":766,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual?.fechanacimiento",{"_index":767,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual?.nombre",{"_index":765,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarios",{"_index":700,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["tienes",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{}}}],["tipo",{"_index":962,"title":{},"body":{"index.html":{}}}],["title",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["todos",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["token",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["token.tostring",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["total",{"_index":369,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["transición",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":947,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{}}}],["tus",{"_index":978,"title":{},"body":{"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":983,"title":{},"body":{"index.html":{}}}],["título",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["u.email",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["u.token",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["un",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["una",{"_index":509,"title":{},"body":{"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["unitario",{"_index":397,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updatecartitemcount",{"_index":436,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["updatecartitemquantity",{"_index":372,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{}}}],["updatecartitemquantity(item",{"_index":387,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updatecartitemquantity(productid",{"_index":420,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["updateduser",{"_index":705,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["updateselectedcategory",{"_index":570,"title":{},"body":{"components/HomeComponent.html":{}}}],["updateselectedcategory(categoryid",{"_index":588,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatetotal",{"_index":373,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["usagenotes",{"_index":973,"title":{},"body":{"index.html":{}}}],["usar",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":657,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["users.component.html",{"_index":659,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.scss",{"_index":658,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts",{"_index":655,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:100",{"_index":668,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:109",{"_index":672,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:19",{"_index":693,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:21",{"_index":692,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:23",{"_index":667,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:38",{"_index":690,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:46",{"_index":688,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:59",{"_index":689,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:67",{"_index":685,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:75",{"_index":691,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users/manager",{"_index":654,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["usersubscription",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["uso",{"_index":975,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":79,"title":{"interfaces/Usuario.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"index.html":{}}}],["usuario.celular",{"_index":723,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.email",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["usuario.fechanacimiento",{"_index":724,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.nombre",{"_index":722,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.password",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuario.rol",{"_index":725,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.token",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioactual",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["usuarioactualizado",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.celular",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.email",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.fechanacimiento",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.nombre",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.rol",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioexistente",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"injectables/ProductosService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["usuarios.find",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.find((u",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.findindex(u",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.map((usuario",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.push(nuevousuario",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios[index",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuariosincontraseña",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuariosjson",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["utiliza",{"_index":869,"title":{},"body":{"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["validador",{"_index":673,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validar",{"_index":678,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validationerrors",{"_index":746,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators",{"_index":483,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.email",{"_index":488,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.minlength(10",{"_index":493,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.minlength(2",{"_index":487,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.pattern('^[0",{"_index":698,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.pattern(/^(?=.*\\d)(?=.*[a",{"_index":769,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.pattern(/^[0",{"_index":489,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.required",{"_index":486,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["valor",{"_index":969,"title":{},"body":{"index.html":{}}}],["value",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["variable",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1019,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdadero",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["verifica",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["verificar",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["version",{"_index":1017,"title":{},"body":{"properties.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{}}}],["válida",{"_index":510,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["válido",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["válidos",{"_index":844,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["y",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["z])(?=.*[!@#$%^&*]).{6,15",{"_index":771,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["z])(?=.*[a",{"_index":770,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["zone.js",{"_index":924,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\nContiene la barra de navegación, el router outlet y el footer.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            RouterModule\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItemCount\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                userSubscription\n                            \n                            \n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                esAdministrador\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService, authService: AuthService, dataInitService: DataInitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar el carrito\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        dataInitService\n                                                  \n                                                        \n                                                                        DataInitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de inicialización de datos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        esAdministrador\n                        \n                    \n                \n            \n            \n                \nesAdministrador()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Método para verificar si el usuario es administrador\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el usuario es administrador, falso en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Método para cerrar sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Contador de items en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'albavets'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Título de la aplicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    Suscripción al observable del usuario actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:35\n                        \n                    \n\n            \n                \n                    Usuario actualmente logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterLink, RouterModule, RouterOutlet, RouterLinkActive } from '@angular/router';\nimport { CartService } from './services/cart.service';\nimport { AuthService } from './services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { DataInitializationService } from './services/data-initialization.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * @description \n * Componente principal de la aplicación.\n * Contiene la barra de navegación, el router outlet y el footer.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    RouterLink,\n    RouterModule,\n    RouterLinkActive\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  /** Título de la aplicación */\n  title = 'albavets';\n\n  /** Contador de items en el carrito */\n  cartItemCount: number = 0;\n\n  /** Usuario actualmente logueado */\n  usuarioActual: any = null;\n\n  /** Suscripción al observable del usuario actual */\n  private userSubscription: Subscription | undefined;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar el carrito\n   * @param authService Servicio de autenticación\n   * @param dataInitService Servicio de inicialización de datos\n   */\n  constructor(\n    private cartService: CartService,\n    private authService: AuthService,\n    private dataInitService: DataInitializationService\n  ) {}\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.dataInitService.initializeData().then(() => {\n      this.cartService.getCartItemCount().subscribe(count => {\n        this.cartItemCount = count;\n      });\n      \n      this.userSubscription = this.authService.getUsuarioActualObservable().subscribe(usuario => {\n        this.usuarioActual = usuario;\n      });\n    });\n  }\n\n  /** Método que se ejecuta al destruir el componente */\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n\n  /** Método para cerrar sesión */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Método para verificar si el usuario es administrador\n   * @returns {boolean} Verdadero si el usuario es administrador, falso en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.authService.esAdministrador();\n  }\n}\n\n    \n\n    \n        \n\n    \n        AlbaVets\n        \n            \n        \n        \n            \n                \n                    Inicio\n                \n                \n                    Contacto\n                \n            \n            \n                \n                    \n                         {{ cartItemCount\n                            }}\n                    \n                \n                \n                    \n                         Mi cuenta\n                    \n                    \n                        \n                            \n                                Administrar usuarios\n                            \n                            \n                                Modificar mi perfil\n                            \n                            \n                                Cerrar sesión\n                            \n                        \n                        \n                            Iniciar sesión\n                            Registrarse\n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n        \n            \n                AlbaVets\n                Dirección: Calle san francisco javier #6412, San Felipe\n                Celular: +569 9876 5432\n                Email: contacto&#64;albavets.cl\n            \n            \n                Enlaces\n                \n                    Inicio\n                    Contacto\n                \n            \n        \n        \n        \n            &copy; 2024 AlbaVets. Todos los derechos reservados.\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            AlbaVets                                                                                    Inicio                                                    Contacto                                                                                                     {{ cartItemCount                            }}                                                                                                 Mi cuenta                                                                                                                            Administrar usuarios                                                                                        Modificar mi perfil                                                                                        Cerrar sesión                                                                                                        Iniciar sesión                            Registrarse                                                                                                                            AlbaVets                Dirección: Calle san francisco javier #6412, San Felipe                Celular: +569 9876 5432                Email: contacto@albavets.cl                                        Enlaces                                    Inicio                    Contacto                                                                © 2024 AlbaVets. Todos los derechos reservados.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar la autenticación y gestión de usuarios\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                    Private\n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarContraseña\n                            \n                            \n                                actualizarPerfil\n                            \n                            \n                                actualizarUsuario\n                            \n                            \n                                cargarSesion\n                            \n                            \n                                esAdministrador\n                            \n                            \n                                generarTokenRecuperacion\n                            \n                            \n                                getUsuarioActual\n                            \n                            \n                                getUsuarioActualObservable\n                            \n                            \n                                getUsuarios\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                recuperarPassword\n                            \n                            \n                                registrarUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID de la plataforma para determinar si es un navegador\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarContraseña\n                        \n                    \n                \n            \n            \n                \nactualizarContraseña(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:221\n                        \n                    \n\n\n            \n                \n                        Actualiza la contraseña del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarPerfil\n                        \n                    \n                \n            \n            \n                \nactualizarPerfil(datosActualizados: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Actualiza el perfil del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datosActualizados\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevos datos del perfil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarUsuario\n                        \n                    \n                \n            \n            \n                \nactualizarUsuario(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:264\n                        \n                    \n\n\n            \n                \n                        Actualiza los datos de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos actualizados del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarSesion\n                        \n                    \n                \n            \n            \n                \ncargarSesion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Carga la sesión del usuario desde el almacenamiento local\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esAdministrador\n                        \n                    \n                \n            \n            \n                \nesAdministrador()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario actual es administrador\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario es administrador, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generarTokenRecuperacion\n                        \n                    \n                \n            \n            \n                \ngenerarTokenRecuperacion(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Genera un token de recuperación para un email dado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                El token generado o null si el email no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarioActual\n                        \n                    \n                \n            \n            \n                \ngetUsuarioActual()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                El usuario actual o null si no hay sesión\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarioActualObservable\n                        \n                    \n                \n            \n            \n                \ngetUsuarioActualObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Obtiene un Observable del usuario actual\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable del usuario actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarios\n                        \n                    \n                \n            \n            \n                \ngetUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de todos los usuarios\n\n\n                        \n                            Returns :     any[]\n\n                        \n                            \n                                Array de usuarios\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Realiza el inicio de sesión de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contraseña del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el login es exitoso, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recuperarPassword\n                        \n                    \n                \n            \n            \n                \nrecuperarPassword(email: string, token: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Recupera la contraseña de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperación\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si la recuperación es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrarUsuario\n                        \n                    \n                \n            \n            \n                \nregistrarUsuario(nuevoUsuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nuevoUsuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos del nuevo usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el registro es exitoso, false si el usuario ya existe\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n            \n                \n                    Indica si el código se está ejecutando en un navegador\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:30\n                        \n                    \n\n            \n                \n                    BehaviorSubject para manejar el usuario actual\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un usuario\n */\ninterface Usuario {\n  /** Email del usuario */\n  email: string;\n  /** Nombre del usuario */\n  nombre: string;\n  /** Celular del usuario */\n  celular: string;\n  /** Fecha de nacimiento del usuario */\n  fechaNacimiento: string;\n  /** Rol del usuario */\n  rol: string;\n}\n\n/**\n * @description\n * Servicio para manejar la autenticación y gestión de usuarios\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /** BehaviorSubject para manejar el usuario actual */\n  private usuarioActual = new BehaviorSubject(null);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.cargarSesion();\n  }\n\n  /**\n   * Carga la sesión del usuario desde el almacenamiento local\n   */\n  cargarSesion() {\n    if (this.isBrowser) {\n      const sesionUsuario = JSON.parse(localStorage.getItem('sesionUsuario') || 'null');\n      this.usuarioActual.next(sesionUsuario);\n    }\n  }\n\n  /**\n   * Obtiene el usuario actual\n   * @returns El usuario actual o null si no hay sesión\n   */\n  getUsuarioActual(): any {\n    if (this.isBrowser) {\n      const sesionUsuarioJSON = localStorage.getItem('sesionUsuario');\n      return sesionUsuarioJSON ? JSON.parse(sesionUsuarioJSON) : null;\n    }\n    return null;\n  }\n\n  /**\n   * Obtiene un Observable del usuario actual\n   * @returns Observable del usuario actual\n   */\n  getUsuarioActualObservable(): Observable {\n    return this.usuarioActual.asObservable();\n  }\n\n  /**\n   * Realiza el inicio de sesión de un usuario\n   * @param email Email del usuario\n   * @param password Contraseña del usuario\n   * @returns true si el login es exitoso, false en caso contrario\n   */\n  login(email: string, password: string): boolean {\n    if (this.isBrowser) {\n      const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuarioEncontrado = usuarios.find(\n        (usuario: any) => usuario.email === email && usuario.password === password\n      );\n\n      if (usuarioEncontrado) {\n        const usuarioSinContraseña: Usuario = {\n          email: usuarioEncontrado.email,\n          nombre: usuarioEncontrado.nombre,\n          celular: usuarioEncontrado.celular,\n          fechaNacimiento: usuarioEncontrado.fechaNacimiento,\n          rol: usuarioEncontrado.rol,\n        };\n\n        localStorage.setItem('sesionUsuario', JSON.stringify(usuarioSinContraseña));\n        this.usuarioActual.next(usuarioSinContraseña);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout() {\n    if (this.isBrowser) {\n      localStorage.removeItem('sesionUsuario');\n    }\n    this.usuarioActual.next(null);\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   * @returns true si el usuario es administrador, false en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.usuarioActual.value?.rol === 'administrador';\n  }\n\n\n  /**\n   * Registra un nuevo usuario\n   * @param nuevoUsuario Datos del nuevo usuario\n   * @returns true si el registro es exitoso, false si el usuario ya existe\n   */\n  registrarUsuario(nuevoUsuario: any): boolean {\n    if (this.isBrowser) {\n      let usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuarioExistente = usuarios.find((u: any) => u.email === nuevoUsuario.email);\n      if (usuarioExistente) {\n        return false;\n      }\n      usuarios.push(nuevoUsuario);\n      localStorage.setItem('usuarios', JSON.stringify(usuarios));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Genera un token de recuperación para un email dado\n   * @param email Email del usuario\n   * @returns El token generado o null si el email no existe\n   */\n  generarTokenRecuperacion(email: string): string | null {\n    if (this.isBrowser) {\n      const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuario = usuarios.find((u: any) => u.email === email);\n      if (usuario) {\n        const token = Math.floor(Math.random() * 900000) + 100000;\n        usuario.token = token.toString();\n        localStorage.setItem('usuarios', JSON.stringify(usuarios));\n        return token.toString();\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Recupera la contraseña de un usuario\n   * @param email Email del usuario\n   * @param token Token de recuperación\n   * @param newPassword Nueva contraseña\n   * @returns true si la recuperación es exitosa, false en caso contrario\n   */\n  recuperarPassword(email: string, token: string, newPassword: string): boolean {\n    if (this.isBrowser) {\n      const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuario = usuarios.find((u: any) => u.email === email && u.token === token);\n      if (usuario) {\n        usuario.password = newPassword;\n        usuario.token = '';\n        localStorage.setItem('usuarios', JSON.stringify(usuarios));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   * @param datosActualizados Nuevos datos del perfil\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarPerfil(datosActualizados: any): boolean {\n    if (this.isBrowser) {\n      const usuariosJSON = localStorage.getItem('usuarios');\n      if (usuariosJSON) {\n        let usuarios = JSON.parse(usuariosJSON);\n        const sesionUsuario = this.getUsuarioActual();\n\n        if (sesionUsuario) {\n          // Actualizar el usuario en el array de usuarios\n          usuarios = usuarios.map((usuario: any) => {\n            if (usuario.email === sesionUsuario.email) {\n              return { ...usuario, ...datosActualizados };\n            }\n            return usuario;\n          });\n\n          // Actualizar el localStorage\n          localStorage.setItem('usuarios', JSON.stringify(usuarios));\n\n          // Actualizar la sesión del usuario\n          const usuarioActualizado = { ...sesionUsuario, ...datosActualizados };\n          localStorage.setItem('sesionUsuario', JSON.stringify(usuarioActualizado));\n\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Actualiza la contraseña del usuario actual\n   * @param newPassword Nueva contraseña\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarContraseña(newPassword: string): boolean {\n    if (this.isBrowser) {\n      const usuariosJSON = localStorage.getItem('usuarios');\n      if (usuariosJSON) {\n        let usuarios = JSON.parse(usuariosJSON);\n        const sesionUsuario = this.getUsuarioActual();\n\n        if (sesionUsuario) {\n          // Actualizar la contraseña del usuario en el array de usuarios\n          usuarios = usuarios.map((usuario: any) => {\n            if (usuario.email === sesionUsuario.email) {\n              return { ...usuario, password: newPassword };\n            }\n            return usuario;\n          });\n\n          // Actualizar el localStorage\n          localStorage.setItem('usuarios', JSON.stringify(usuarios));\n\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Obtiene la lista de todos los usuarios\n   * @returns Array de usuarios\n   */\n  getUsuarios(): any[] {\n    if (this.isBrowser) {\n      const usuariosJSON = localStorage.getItem('usuarios');\n      return usuariosJSON ? JSON.parse(usuariosJSON) : [];\n    }\n    return [];\n  }\n\n  /**\n   * Actualiza los datos de un usuario\n   * @param usuario Datos actualizados del usuario\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarUsuario(usuario: any): boolean {\n    if (this.isBrowser) {\n      let usuarios = this.getUsuarios();\n      const index = usuarios.findIndex(u => u.email === usuario.email);\n      if (index !== -1) {\n        usuarios[index] = usuario;\n        localStorage.setItem('usuarios', JSON.stringify(usuarios));\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart/cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar la funcionalidad del carrito de compras\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCartItems\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeCartItem\n                            \n                            \n                                updateCartItemQuantity\n                            \n                            \n                                    Private\n                                updateTotal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart/cart.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar las operaciones del carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCartItems\n                        \n                    \n                \n            \n            \n                \nloadCartItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Carga los ítems del carrito desde el servicio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCartItem\n                        \n                    \n                \n            \n            \n                \nremoveCartItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Elimina un ítem del carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCartItemQuantity\n                        \n                    \n                \n            \n            \n                \nupdateCartItemQuantity(item: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Actualiza la cantidad de un ítem en el carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ítem del carrito a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateTotal\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Actualiza el total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:35\n                        \n                    \n\n            \n                \n                    Array que contiene los ítems del carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:37\n                        \n                    \n\n            \n                \n                    Total del carrito\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../services/cart.service';\n\n/**  \n * Interfaz que define la estructura de un ítem del carrito \n */\ninterface CartItem {\n  /** ID único del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio unitario del producto */\n  precio: number;\n   /** Cantidad del producto en el carrito */\n  cantidad: number;\n}\n\n\n/**\n * @description \n * Componente para manejar la funcionalidad del carrito de compras\n */\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\n\nexport class CartComponent implements OnInit {\n  /** Array que contiene los ítems del carrito */\n  cartItems: CartItem[] = [];\n  /** Total del carrito */\n  total: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar las operaciones del carrito\n   */\n  constructor(private cartService: CartService) { }\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.loadCartItems();\n  }\n\n  /** Carga los ítems del carrito desde el servicio */\n  loadCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n    this.updateTotal();\n  }\n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param item El ítem del carrito a actualizar\n   */\n  updateCartItemQuantity(item: CartItem) {\n    this.cartService.updateCartItemQuantity(item.id, item.cantidad);\n    this.updateTotal();\n  }\n\n  /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    this.cartService.removeCartItem(productId);\n    this.loadCartItems();\n  }\n\n  /** Actualiza el total del carrito */\n  private updateTotal() {\n    this.total = this.cartItems.reduce((sum, item) => sum + item.precio * item.cantidad, 0);\n  }\n}\n\n    \n\n    \n        \n    Carrito de compras\n    \n        \n            \n                Producto\n                Precio\n                Cantidad\n                Subtotal\n                Acciones\n            \n        \n        \n            \n                {{ item.nombre }}\n                ${{ item.precio }}\n                \n                    \n                \n                ${{ item.precio * item.cantidad }}\n                \n                    Eliminar\n                \n            \n        \n    \n    \n        Total: ${{ total }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                        Producto                Precio                Cantidad                Subtotal                Acciones                                                        {{ item.nombre }}                ${{ item.precio }}                                                                    ${{ item.precio * item.cantidad }}                                    Eliminar                                                    Total: ${{ total }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un ítem del carrito\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            precio\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidad:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cantidad de producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio del producto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un ítem del carrito\n */\ninterface CartItem {\n  /** ID del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio del producto */\n  precio: number;\n  /** Cantidad de producto */\n  cantidad: number;\n}\n\n/**\n * @description\n * Servicio para manejar las operaciones del carrito de compras\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  /** BehaviorSubject para manejar el contador de ítems en el carrito */\n  private cartItemCount = new BehaviorSubject(0);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Obtiene los ítems del carrito\n   * @returns Array de ítems del carrito\n   */\n  getCartItems(): CartItem[] {\n    if (this.isBrowser) {\n      return JSON.parse(localStorage.getItem('cart') || '[]');\n    }\n    return [];\n  }  \n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param productId ID del producto a actualizar\n   * @param quantity Nueva cantidad\n   */\n  updateCartItemQuantity(productId: number, quantity: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      const item = cart.find(item => item.id === productId);\n      if (item) {\n        item.cantidad = quantity;\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.updateCartItemCount();\n      }\n    }\n  }\n\n /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      cart = cart.filter(item => item.id !== productId);\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir\n   */\n  addToCart(product: any) {\n    if (this.isBrowser) {\n      let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n\n      const existingProduct = cart.find((item: any) => item.id === product.id);\n\n      if (existingProduct) {\n        existingProduct.cantidad++;\n      } else {\n        cart.push({ ...product, cantidad: 1 });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Actualiza el contador de ítems en el carrito\n   * @private\n   */\n  private updateCartItemCount() {\n    if (this.isBrowser) {\n      const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n      const count = cart.reduce((total: number, item: any) => total + item.cantidad, 0);\n      this.cartItemCount.next(count);\n    }\n  }\n\n  /**\n   * Obtiene un Observable del contador de ítems en el carrito\n   * @returns Observable del contador de ítems\n   */\n  getCartItemCount() {\n    return this.cartItemCount.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem-1.html":{"url":"interfaces/CartItem-1.html","title":"interface - CartItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/cart/cart.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un ítem del carrito\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            precio\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidad:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cantidad del producto en el carrito\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio unitario del producto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../services/cart.service';\n\n/**  \n * Interfaz que define la estructura de un ítem del carrito \n */\ninterface CartItem {\n  /** ID único del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio unitario del producto */\n  precio: number;\n   /** Cantidad del producto en el carrito */\n  cantidad: number;\n}\n\n\n/**\n * @description \n * Componente para manejar la funcionalidad del carrito de compras\n */\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\n\nexport class CartComponent implements OnInit {\n  /** Array que contiene los ítems del carrito */\n  cartItems: CartItem[] = [];\n  /** Total del carrito */\n  total: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar las operaciones del carrito\n   */\n  constructor(private cartService: CartService) { }\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.loadCartItems();\n  }\n\n  /** Carga los ítems del carrito desde el servicio */\n  loadCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n    this.updateTotal();\n  }\n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param item El ítem del carrito a actualizar\n   */\n  updateCartItemQuantity(item: CartItem) {\n    this.cartService.updateCartItemQuantity(item.id, item.cantidad);\n    this.updateTotal();\n  }\n\n  /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    this.cartService.removeCartItem(productId);\n    this.loadCartItems();\n  }\n\n  /** Actualiza el total del carrito */\n  private updateTotal() {\n    this.total = this.cartItems.reduce((sum, item) => sum + item.precio * item.cantidad, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar las operaciones del carrito de compras\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cartItemCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                getCartItemCount\n                            \n                            \n                                getCartItems\n                            \n                            \n                                removeCartItem\n                            \n                            \n                                    Private\n                                updateCartItemCount\n                            \n                            \n                                updateCartItemQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cart.service.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID de la plataforma para determinar si es un navegador\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Añade un producto al carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Producto a añadir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartItemCount\n                        \n                    \n                \n            \n            \n                \ngetCartItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Obtiene un Observable del contador de ítems en el carrito\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable del contador de ítems\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartItems\n                        \n                    \n                \n            \n            \n                \ngetCartItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Obtiene los ítems del carrito\n\n\n                        \n                            Returns :     CartItem[]\n\n                        \n                            \n                                Array de ítems del carrito\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCartItem\n                        \n                    \n                \n            \n            \n                \nremoveCartItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Elimina un ítem del carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCartItemCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCartItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Actualiza el contador de ítems en el carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCartItemQuantity\n                        \n                    \n                \n            \n            \n                \nupdateCartItemQuantity(productId: number, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Actualiza la cantidad de un ítem en el carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a actualizar\n\n                                            \n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva cantidad\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cart.service.ts:28\n                        \n                    \n\n            \n                \n                    BehaviorSubject para manejar el contador de ítems en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cart.service.ts:30\n                        \n                    \n\n            \n                \n                    Indica si el código se está ejecutando en un navegador\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un ítem del carrito\n */\ninterface CartItem {\n  /** ID del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio del producto */\n  precio: number;\n  /** Cantidad de producto */\n  cantidad: number;\n}\n\n/**\n * @description\n * Servicio para manejar las operaciones del carrito de compras\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  /** BehaviorSubject para manejar el contador de ítems en el carrito */\n  private cartItemCount = new BehaviorSubject(0);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Obtiene los ítems del carrito\n   * @returns Array de ítems del carrito\n   */\n  getCartItems(): CartItem[] {\n    if (this.isBrowser) {\n      return JSON.parse(localStorage.getItem('cart') || '[]');\n    }\n    return [];\n  }  \n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param productId ID del producto a actualizar\n   * @param quantity Nueva cantidad\n   */\n  updateCartItemQuantity(productId: number, quantity: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      const item = cart.find(item => item.id === productId);\n      if (item) {\n        item.cantidad = quantity;\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.updateCartItemCount();\n      }\n    }\n  }\n\n /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      cart = cart.filter(item => item.id !== productId);\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir\n   */\n  addToCart(product: any) {\n    if (this.isBrowser) {\n      let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n\n      const existingProduct = cart.find((item: any) => item.id === product.id);\n\n      if (existingProduct) {\n        existingProduct.cantidad++;\n      } else {\n        cart.push({ ...product, cantidad: 1 });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Actualiza el contador de ítems en el carrito\n   * @private\n   */\n  private updateCartItemCount() {\n    if (this.isBrowser) {\n      const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n      const count = cart.reduce((total: number, item: any) => total + item.cantidad, 0);\n      this.cartItemCount.next(count);\n    }\n  }\n\n  /**\n   * Obtiene un Observable del contador de ítems en el carrito\n   * @returns Observable del contador de ítems\n   */\n  getCartItemCount() {\n    return this.cartItemCount.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactoComponent.html":{"url":"components/ContactoComponent.html","title":"component - ContactoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contacto/contacto.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el formulario de contacto\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacto\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./contacto.component.html\n            \n\n\n\n            \n                styleUrl\n                ./contacto.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contacto/contacto.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para construir formularios reactivos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contacto/contacto.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contacto/contacto.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contacto/contacto.component.ts:18\n                        \n                    \n\n            \n                \n                    Formulario de contacto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contacto/contacto.component.ts:20\n                        \n                    \n\n            \n                \n                    Indica si el formulario ha sido enviado\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/contacto/contacto.component.ts:58\n                                \n                            \n                    \n                        \n                                Getter para acceder fácilmente a los controles del formulario\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/**\n * @description\n * Componente para manejar el formulario de contacto\n */\n@Component({\n  selector: 'app-contacto',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './contacto.component.html',\n  styleUrl: './contacto.component.scss'\n})\nexport class ContactoComponent implements OnInit {\n  /** Formulario de contacto */\n  contactForm!: FormGroup;\n  /** Indica si el formulario ha sido enviado */\n  submitted = false;\n\n  /**\n   * Constructor del componente\n   * @param formBuilder Servicio para construir formularios reactivos\n   */\n  constructor(private formBuilder: FormBuilder) { }\n\n  /**\n   * Inicializa el componente y configura el formulario\n   */\n  ngOnInit() {\n    this.contactForm = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      celular: ['', [Validators.required, Validators.pattern(/^[0-9]{9}$/)]],\n      asunto: ['', Validators.required],\n      mensaje: ['', [Validators.required, Validators.minLength(10)]]\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.contactForm.valid) {\n      alert('¡Mensaje enviado correctamente!');\n      this.contactForm.reset();\n      this.submitted = false;\n    }\n  }\n  \n  /**\n   * Getter para acceder fácilmente a los controles del formulario\n   * @returns Los controles del formulario\n   */\n  get f() { return this.contactForm.controls; }\n}\n\n    \n\n    \n        \n    Formulario de contacto\n    \n        \n            Nombre\n            \n            \n                El nombre es requerido\n                El nombre debe tener al menos 2 caracteres\n            \n        \n\n        \n            Correo electrónico\n            \n            \n                El email es requerido\n                Debe ser una dirección de email válida\n            \n        \n\n        \n            Celular\n            \n            \n                El número de celular es requerido\n                Debe ser un número de 9 dígitos\n            \n        \n\n        \n            Asunto\n            \n            \n                El asunto es requerido\n            \n        \n\n        \n            Mensaje\n            \n            \n                El mensaje es requerido\n                El mensaje debe tener al menos 10 caracteres\n            \n        \n\n        Enviar\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Formulario de contacto                        Nombre                                        El nombre es requerido                El nombre debe tener al menos 2 caracteres                                        Correo electrónico                                        El email es requerido                Debe ser una dirección de email válida                                        Celular                                        El número de celular es requerido                Debe ser un número de 9 dígitos                                        Asunto                                        El asunto es requerido                                        Mensaje                                        El mensaje es requerido                El mensaje debe tener al menos 10 caracteres                            Enviar    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataInitializationService.html":{"url":"injectables/DataInitializationService.html","title":"injectable - DataInitializationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataInitializationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data-initialization.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para inicializar datos de la aplicación desde un archivo JSON\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/data-initialization.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cliente HTTP para realizar peticiones\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID de la plataforma para determinar si es un navegador\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/data-initialization.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Inicializa los datos de la aplicación\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Una promesa que se resuelve cuando los datos se han inicializado\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-initialization.service.ts:14\n                        \n                    \n\n            \n                \n                    Indica si el código se está ejecutando en un navegador\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @description\n * Servicio para inicializar datos de la aplicación desde un archivo JSON\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataInitializationService {\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param http Cliente HTTP para realizar peticiones\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(\n    private http: HttpClient,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  /**\n   * Inicializa los datos de la aplicación\n   * @returns Una promesa que se resuelve cuando los datos se han inicializado\n   */\n  initializeData() {\n    return new Promise((resolve, reject) => {\n      this.http.get('assets/db/albavetsDB.json').subscribe({\n        next: (data: any) => {\n          if (this.isBrowser) {\n            if (!localStorage.getItem('usuarios')) {\n              localStorage.setItem('usuarios', JSON.stringify(data.usuarios));\n            }\n            if (!localStorage.getItem('categorias')) {\n              localStorage.setItem('categorias', JSON.stringify(data.categorias));\n            }\n            if (!localStorage.getItem('productos')) {\n              localStorage.setItem('productos', JSON.stringify(data.productos));\n            }\n          }\n          resolve();\n        },\n        error: (err) => {\n          console.error('Error initializing data', err);\n          reject(err);\n        }\n      });\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para la página de inicio.\nMuestra productos y categorías, permitiendo filtrar y añadir al carrito.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItemCount\n                            \n                            \n                                categorias\n                            \n                            \n                                categoriaSeleccionada\n                            \n                            \n                                productos\n                            \n                            \n                                productosFiltrados\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                filterProducts\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productosService: ProductosService, cartService: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        productosService\n                                                  \n                                                        \n                                                                        ProductosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para obtener datos de productos\n\n                                                        \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar operaciones del carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Añade un producto al carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Producto a añadir al carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProducts\n                        \n                    \n                \n            \n            \n                \nfilterProducts(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Filtra los productos según la categoría seleccionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría para filtrar (0 para mostrar todos)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Carga los datos de productos y categorías desde el servicio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente cargando los datos y suscribiéndose al contador del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSelectedCategory\n                        \n                    \n                \n            \n            \n                \nupdateSelectedCategory(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Actualiza la categoría seleccionada y filtra los productos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría seleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Número de items en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n            \n                \n                    Lista de categorías de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n            \n                \n                    ID de la categoría actualmente seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n            \n                \n                    Lista completa de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productosFiltrados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n            \n                \n                    Lista de productos filtrados según la categoría seleccionada\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ProductosService } from '../../services/productos.service';\nimport { CartService } from '../../services/cart.service';\n\n/**\n * @description\n * Componente principal para la página de inicio.\n * Muestra productos y categorías, permitiendo filtrar y añadir al carrito.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent {\n  /** Lista de categorías de productos */\n  categorias: any[] = [];\n  /** Lista completa de productos */\n  productos: any[] = [];\n  /** Lista de productos filtrados según la categoría seleccionada */\n  productosFiltrados: any[] = [];\n  /** ID de la categoría actualmente seleccionada */\n  categoriaSeleccionada: number = 0;\n  /** Número de items en el carrito */\n  cartItemCount: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param productosService Servicio para obtener datos de productos\n   * @param cartService Servicio para manejar operaciones del carrito\n   */\n  constructor(\n    private productosService: ProductosService,\n    private cartService: CartService\n  ) { }\n\n  /**\n   * Inicializa el componente cargando los datos y suscribiéndose al contador del carrito\n   */\n  ngOnInit() {\n    this.loadData();\n    this.cartService.getCartItemCount().subscribe(count => {\n      this.cartItemCount = count || 0;\n    });\n  }\n\n  /**\n   * Carga los datos de productos y categorías desde el servicio\n   */\n  loadData() {\n    this.productosService.getData().subscribe(data => {\n      this.categorias = [...data.categorias];\n      this.productos = data.productos;\n      this.filterProducts(0);\n    });\n  }\n\n  /**\n   * Actualiza la categoría seleccionada y filtra los productos\n   * @param categoryId ID de la categoría seleccionada\n   */\n  updateSelectedCategory(categoryId: number) {\n    this.categoriaSeleccionada = categoryId;\n    this.filterProducts(categoryId);\n  }\n\n  /**\n   * Filtra los productos según la categoría seleccionada\n   * @param categoryId ID de la categoría para filtrar (0 para mostrar todos)\n   */\n  filterProducts(categoryId: number) {\n    if (categoryId === 0) {\n      this.productosFiltrados = this.productos;\n    } else {\n      this.productosFiltrados = this.productos.filter(producto => producto.categoria === categoryId);\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir al carrito\n   */\n  addToCart(product: any) {\n    this.cartService.addToCart(product);\n    alert('Producto agregado al carrito');\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            Categorías\n            \n                \n                    {{ categoria.nombre }}\n                \n            \n        \n        \n        \n            Productos\n            \n                \n                    \n                        \n                        \n                            {{ producto.nombre }}\n                            {{ producto.descripcion }}\n                            Precio: ${{ producto.precio }}\n                            \n                                Agregar al\n                                    carrito\n                            \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Categorías                                                {{ categoria.nombre }}                                                                Productos                                                                                                                            {{ producto.nombre }}                            {{ producto.descripcion }}                            Precio: ${{ producto.precio }}                                                            Agregar al                                    carrito                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el inicio de sesión de usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario de inicio de sesión\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para manejar el inicio de sesión de usuarios.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /** Formulario de inicio de sesión */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura el formulario de inicio de sesión\n   */\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario de inicio de sesión\n   */\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const { email, password } = this.loginForm.value;\n\n      if (this.authService.login(email, password)) {\n        alert(\"¡Inicio de sesión exitoso!\");\n        this.router.navigate(['/']);\n      } else {\n        alert(\"Correo electrónico o contraseña incorrectos. Por favor, intenta nuevamente.\");\n      }\n    } else {\n      Object.values(this.loginForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Iniciar sesión\n            \n                \n                    Correo electrónico\n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es requerida.\n                    \n                \n                Iniciar sesión\n            \n            \n                ¿No tienes una cuenta? Regístrate\n                ¿Olvidaste tu contraseña?\n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Iniciar sesión                                                Correo electrónico                                                                El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                                        Contraseña                                                                La contraseña es requerida.                                                    Iniciar sesión                                        ¿No tienes una cuenta? Regístrate                ¿Olvidaste tu contraseña?                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagerUsersComponent.html":{"url":"components/ManagerUsersComponent.html","title":"component - ManagerUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManagerUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/manager-users/manager-users.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para gestionar usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manager-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./manager-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manager-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                editingUser\n                            \n                            \n                                usuarios\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                edadMinimaValidator\n                            \n                            \n                                editUser\n                            \n                            \n                                initForm\n                            \n                            \n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/manager-users/manager-users.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { edadMinima: boolean; }\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Prepara el formulario para editar un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario a editar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n            \n                \nloadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Carga la lista de usuarios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, carga los usuarios y configura el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:21\n                        \n                    \n\n            \n                \n                    Formulario para editar usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:23\n                        \n                    \n\n            \n                \n                    Usuario actualmente en edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:19\n                        \n                    \n\n            \n                \n                    Lista de usuarios\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para gestionar usuarios.\n */\n@Component({\n  selector: 'app-manager-users',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './manager-users.component.html',\n  styleUrls: ['./manager-users.component.scss']\n})\nexport class ManagerUsersComponent implements OnInit {\n  /** Lista de usuarios */\n  usuarios: any[] = [];\n  /** Formulario para editar usuarios */\n  editForm!: FormGroup;\n  /** Usuario actualmente en edición */\n  editingUser: any = null;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) { }\n\n  /**\n   * Inicializa el componente, carga los usuarios y configura el formulario\n   */\n  ngOnInit() {\n    this.loadUsers();\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario de edición\n   */\n  initForm() {\n    this.editForm = this.fb.group({\n      email: [{ value: '', disabled: true }, [Validators.required, Validators.email]],\n      nombre: ['', Validators.required],\n      celular: ['', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: ['', [Validators.required, this.edadMinimaValidator]],\n      rol: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Carga la lista de usuarios\n   */\n  loadUsers() {\n    this.usuarios = this.authService.getUsuarios();\n  }\n\n  /**\n   * Prepara el formulario para editar un usuario\n   * @param usuario Usuario a editar\n   */\n  editUser(usuario: any) {\n    this.editingUser = usuario;\n    this.editForm.patchValue(usuario);\n  }\n\n  /**\n   * Maneja el envío del formulario de edición\n   */\n  onSubmit() {\n    if (this.editForm.valid) {\n      const updatedUser = {\n        ...this.editingUser,\n        ...this.editForm.value\n      };\n      if (this.authService.actualizarUsuario(updatedUser)) {\n        alert('Usuario actualizado correctamente');\n        this.loadUsers();\n        this.closeModal();\n      } else {\n        alert('Error al actualizar el usuario');\n      }\n    } else {\n      Object.values(this.editForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n\n  /**\n   * Cierra el modal de edición\n   */\n  closeModal() {\n    this.editingUser = null;\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: any) {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n}\n    \n\n    \n        \n    Administrar usuarios\n    \n      \n        \n          Email\n          Nombre\n          Celular\n          Fecha de nacimiento\n          Rol\n          Acciones\n        \n      \n      \n        \n          {{ usuario.email }}\n          {{ usuario.nombre }}\n          {{ usuario.celular }}\n          {{ usuario.fechaNacimiento }}\n          {{ usuario.rol }}\n          \n            Editar\n          \n        \n      \n    \n  \n    \n    \n      \n        \n          \n            Editar usuario\n            \n          \n          \n            \n              \n                Email\n                \n                \n                  El email es requerido.\n                \n                \n                  Ingrese un email válido.\n                \n              \n              \n                Nombre\n                \n                \n                  El nombre es requerido.\n                \n              \n              \n                Celular\n                \n                \n                  El celular es requerido.\n                \n                \n                  El celular debe contener 9 dígitos numéricos.\n                \n              \n              \n                Fecha de nacimiento\n                \n                \n                  La fecha de nacimiento es requerida.\n                \n                \n                  El usuario debe ser mayor de 14 años.\n                \n              \n              \n                Rol\n                \n                  Usuario\n                  Administrador\n                \n                \n                  El rol es requerido.\n                \n              \n            \n          \n          \n            Cerrar\n            Guardar cambios\n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./manager-users.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Administrar usuarios                            Email          Nombre          Celular          Fecha de nacimiento          Rol          Acciones                                      {{ usuario.email }}          {{ usuario.nombre }}          {{ usuario.celular }}          {{ usuario.fechaNacimiento }}          {{ usuario.rol }}                      Editar                                                                          Editar usuario                                                                          Email                                                  El email es requerido.                                                  Ingrese un email válido.                                                            Nombre                                                  El nombre es requerido.                                                            Celular                                                  El celular es requerido.                                                  El celular debe contener 9 dígitos numéricos.                                                            Fecha de nacimiento                                                  La fecha de nacimiento es requerida.                                                  El usuario debe ser mayor de 14 años.                                                            Rol                                  Usuario                  Administrador                                                  El rol es requerido.                                                                          Cerrar            Guardar cambios                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagerUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModificarPerfilComponent.html":{"url":"components/ModificarPerfilComponent.html","title":"component - ModificarPerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModificarPerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modificar-perfil/modificar-perfil.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para modificar el perfil del usuario y cambiar la contraseña\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modificar-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./modificar-perfil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modificar-perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordForm\n                            \n                            \n                                perfilForm\n                            \n                            \n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edadMinimaValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitPassword\n                            \n                            \n                                onSubmitPerfil\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear los formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, carga los datos del usuario y configura los formularios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitPassword\n                        \n                    \n                \n            \n            \n                \nonSubmitPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de cambio de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitPerfil\n                        \n                    \n                \n            \n            \n                \nonSubmitPerfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de perfil\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(g: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    FormGroup que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:21\n                        \n                    \n\n            \n                \n                    Formulario para cambiar la contraseña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perfilForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:19\n                        \n                    \n\n            \n                \n                    Formulario para modificar datos del perfil\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:23\n                        \n                    \n\n            \n                \n                    Datos del usuario actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para modificar el perfil del usuario y cambiar la contraseña\n */\n@Component({\n  selector: 'app-modificar-perfil',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './modificar-perfil.component.html',\n  styleUrls: ['./modificar-perfil.component.scss']\n})\nexport class ModificarPerfilComponent implements OnInit {\n  /** Formulario para modificar datos del perfil */\n  perfilForm!: FormGroup;\n  /** Formulario para cambiar la contraseña */\n  passwordForm!: FormGroup;\n  /** Datos del usuario actual */\n  usuarioActual: any;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear los formularios reactivos\n   * @param authService Servicio de autenticación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Inicializa el componente, carga los datos del usuario y configura los formularios\n   */\n  ngOnInit() {\n    this.usuarioActual = this.authService.getUsuarioActual();\n\n    this.perfilForm = this.fb.group({\n      nombre: [this.usuarioActual?.nombre || '', Validators.required],\n      celular: [this.usuarioActual?.celular || '', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: [this.usuarioActual?.fechaNacimiento || '', [Validators.required, this.edadMinimaValidator]]\n    });\n\n    this.passwordForm = this.fb.group({\n      newPassword: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: AbstractControl): ValidationErrors | null {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param g FormGroup que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('newPassword')?.value === g.get('confirmPassword')?.value\n      ? null : { 'mismatch': true };\n  }\n\n  /**\n   * Maneja el envío del formulario de perfil\n   */\n  onSubmitPerfil() {\n    if (this.perfilForm.valid) {\n      const datosActualizados = this.perfilForm.value;\n      if (this.authService.actualizarPerfil(datosActualizados)) {\n        alert(\"Información personal actualizada correctamente.\");\n      } else {\n        alert(\"Hubo un error al actualizar la información.\");\n      }\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de cambio de contraseña\n   */\n  onSubmitPassword() {\n    if (this.passwordForm.valid) {\n      const newPassword = this.passwordForm.get('newPassword')?.value;\n      if (this.authService.actualizarContraseña(newPassword)) {\n        alert(\"Contraseña actualizada correctamente.\");\n        this.passwordForm.reset();\n      } else {\n        alert(\"Hubo un error al actualizar la contraseña.\");\n      }\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Modificar información personal\n            \n                \n                    Nombre\n                    \n                    \n                        El nombre es requerido.\n                    \n                \n                \n                    Celular\n                    \n                    \n                        El celular es requerido.\n                    \n                    \n                        El celular debe contener 9 dígitos numéricos.\n                    \n                \n                \n                    Fecha de nacimiento\n                    \n                    \n                        La fecha de nacimiento es requerida.\n                    \n                    \n                        Debes ser mayor de 14 años para modificar tu perfil.\n                    \n                \n                Guardar cambios\n            \n        \n        \n            Modificar contraseña\n            \n                \n                    Nueva contraseña\n                    \n                    \n                        La nueva contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir nueva contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Cambiar\n                    contraseña\n            \n        \n    \n\n    \n\n    \n                \n                    ./modificar-perfil.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Modificar información personal                                                Nombre                                                                El nombre es requerido.                                                                        Celular                                                                El celular es requerido.                                                                El celular debe contener 9 dígitos numéricos.                                                                        Fecha de nacimiento                                                                La fecha de nacimiento es requerida.                                                                Debes ser mayor de 14 años para modificar tu perfil.                                                    Guardar cambios                                        Modificar contraseña                                                Nueva contraseña                                                                La nueva contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir nueva contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Cambiar                    contraseña                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModificarPerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductosService.html":{"url":"injectables/ProductosService.html","title":"injectable - ProductosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/productos.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar las operaciones relacionadas con los productos\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/productos.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cliente HTTP para realizar peticiones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/productos.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Obtiene los datos de productos desde un archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con los datos de productos, categorías y usuarios\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * @description\n * Servicio para manejar las operaciones relacionadas con los productos\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n\n  /**\n   * Constructor del servicio\n   * @param http Cliente HTTP para realizar peticiones\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Obtiene los datos de productos desde un archivo JSON\n   * @returns Observable con los datos de productos, categorías y usuarios\n   */\n  getData(): Observable {\n    return this.http.get('/assets/db/albavetsDB.json');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecuperarPasswordComponent.html":{"url":"components/RecuperarPasswordComponent.html","title":"component - RecuperarPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecuperarPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recuperar-password/recuperar-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el proceso de recuperación de contraseña\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recuperar-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./recuperar-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recuperar-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailForm\n                            \n                            \n                                passwordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generarToken\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear los formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generarToken\n                        \n                    \n                \n            \n            \n                \ngenerarToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Genera y envía un token de recuperación al correo electrónico proporcionado\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura los formularios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de recuperación de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    AbstractControl que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario para ingresar el correo electrónico\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:22\n                        \n                    \n\n            \n                \n                    Formulario para ingresar el token y la nueva contraseña\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para manejar el proceso de recuperación de contraseña\n */\n@Component({\n  selector: 'app-recuperar-password',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './recuperar-password.component.html',\n  styleUrls: ['./recuperar-password.component.scss']\n})\nexport class RecuperarPasswordComponent implements OnInit {\n  /** Formulario para ingresar el correo electrónico */\n  emailForm!: FormGroup;\n  /** Formulario para ingresar el token y la nueva contraseña */\n  passwordForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear los formularios reactivos\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura los formularios\n   */\n  ngOnInit() {\n    this.emailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.passwordForm = this.fb.group({\n      token: ['', [Validators.required, Validators.pattern('^[0-9]{6}$')]],\n      newPassword: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param control AbstractControl que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const newPassword = control.get('newPassword');\n    const confirmPassword = control.get('confirmPassword');\n\n    if (newPassword && confirmPassword && newPassword.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ mismatch: true });\n      return { mismatch: true };\n    } else {\n      confirmPassword?.setErrors(null);\n      return null;\n    }\n  }\n  /**\n   * Genera y envía un token de recuperación al correo electrónico proporcionado\n   */\n  generarToken() {\n    if (this.emailForm.valid) {\n      const email = this.emailForm.get('email')?.value;\n      const token = this.authService.generarTokenRecuperacion(email);\n      if (token) {\n        alert(`Tu token de recuperación es: ${token}`);\n      } else {\n        alert(\"El correo electrónico ingresado no está registrado.\");\n      }\n    } else {\n      this.emailForm.markAllAsTouched();\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de recuperación de contraseña\n   */\n  onSubmit() {\n    if (this.passwordForm.valid) {\n      const email = this.emailForm.get('email')?.value;\n      const token = this.passwordForm.get('token')?.value;\n      const newPassword = this.passwordForm.get('newPassword')?.value;\n\n      if (this.authService.recuperarPassword(email, token, newPassword)) {\n        alert(\"La contraseña ha sido actualizada correctamente.\");\n        this.router.navigate(['/login']);\n      } else {\n        alert(\"El correo electrónico o el token ingresados no son válidos. Por favor, verifica nuevamente.\");\n      }\n    } else {\n      Object.values(this.passwordForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Recuperar contraseña\n\n            \n                \n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                Generar token\n            \n\n            \n\n            \n                \n                    Ingresar token enviado al correo\n                    \n                    \n                        El token es requerido.\n                    \n                    \n                        El token debe ser de 6 dígitos numéricos.\n                    \n                \n                \n                    Nueva contraseña\n                    \n                    \n                        La nueva contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Cambiar\n                    contraseña\n            \n        \n    \n\n    \n\n    \n                \n                    ./recuperar-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Recuperar contraseña                                                                                            El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                    Generar token                                                                        Ingresar token enviado al correo                                                                El token es requerido.                                                                El token debe ser de 6 dígitos numéricos.                                                                        Nueva contraseña                                                                La nueva contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Cambiar                    contraseña                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecuperarPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrarmeComponent.html":{"url":"components/RegistrarmeComponent.html","title":"component - RegistrarmeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrarmeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registrarme/registrarme.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el registro de nuevos usuarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registrarme\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./registrarme.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registrarme.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registroForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edadMinimaValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registrarme/registrarme.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { edadMinima: boolean; }\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    AbstractControl que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registroForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registrarme/registrarme.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario de registro de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para manejar el registro de nuevos usuarios\n */\n@Component({\n  selector: 'app-registrarme',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './registrarme.component.html',\n  styleUrls: ['./registrarme.component.scss']\n})\nexport class RegistrarmeComponent implements OnInit {\n  /** Formulario de registro de usuario */\n  registroForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura el formulario de registro\n   */\n  ngOnInit() {\n    this.registroForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      nombre: ['', Validators.required],\n      celular: ['', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: ['', [Validators.required, this.edadMinimaValidator]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      repetirPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param control AbstractControl que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password');\n    const repetirPassword = control.get('repetirPassword');\n\n    if (password && repetirPassword && password.value !== repetirPassword.value) {\n      repetirPassword.setErrors({ mismatch: true });\n      return { mismatch: true };\n    } else {\n      repetirPassword?.setErrors(null);\n      return null;\n    }\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: any) {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n\n  /**\n   * Maneja el envío del formulario de registro\n   */\n  onSubmit() {\n    if (this.registroForm.valid) {\n      const nuevoUsuario = {\n        ...this.registroForm.value,\n        rol: 'usuario',\n        token: ''\n      };\n\n      if (this.authService.registrarUsuario(nuevoUsuario)) {\n        alert(\"¡Usuario registrado correctamente!\");\n        this.router.navigate(['/login']);\n      } else {\n        alert(\"El usuario ya está registrado. Por favor, inicia sesión o utiliza otro correo electrónico.\");\n      }\n    } else {\n      Object.values(this.registroForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Registro de usuario\n            \n                \n                    Correo electrónico\n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                \n                    Nombre completo\n                    \n                    \n                        El nombre es requerido.\n                    \n                \n                \n                    Celular\n                    \n                    \n                        El celular es requerido.\n                    \n                    \n                        El celular debe contener 9 dígitos numéricos.\n                    \n                \n                \n                    Fecha de nacimiento\n                    \n                    \n                        La fecha de nacimiento es requerida.\n                    \n                    \n                        Debes ser mayor de 14 años para registrarte.\n                    \n                \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Registrarme\n            \n        \n    \n\n    \n\n    \n                \n                    ./registrarme.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Registro de usuario                                                Correo electrónico                                                                El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                                        Nombre completo                                                                El nombre es requerido.                                                                        Celular                                                                El celular es requerido.                                                                El celular debe contener 9 dígitos numéricos.                                                                        Fecha de nacimiento                                                                La fecha de nacimiento es requerida.                                                                Debes ser mayor de 14 años para registrarte.                                                                        Contraseña                                                                La contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Registrarme                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrarmeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Usuario.html":{"url":"interfaces/Usuario.html","title":"interface - Usuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Usuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un usuario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            celular\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fechaNacimiento\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            rol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celular\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celular:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Celular del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaNacimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaNacimiento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de nacimiento del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un usuario\n */\ninterface Usuario {\n  /** Email del usuario */\n  email: string;\n  /** Nombre del usuario */\n  nombre: string;\n  /** Celular del usuario */\n  celular: string;\n  /** Fecha de nacimiento del usuario */\n  fechaNacimiento: string;\n  /** Rol del usuario */\n  rol: string;\n}\n\n/**\n * @description\n * Servicio para manejar la autenticación y gestión de usuarios\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /** BehaviorSubject para manejar el usuario actual */\n  private usuarioActual = new BehaviorSubject(null);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.cargarSesion();\n  }\n\n  /**\n   * Carga la sesión del usuario desde el almacenamiento local\n   */\n  cargarSesion() {\n    if (this.isBrowser) {\n      const sesionUsuario = JSON.parse(localStorage.getItem('sesionUsuario') || 'null');\n      this.usuarioActual.next(sesionUsuario);\n    }\n  }\n\n  /**\n   * Obtiene el usuario actual\n   * @returns El usuario actual o null si no hay sesión\n   */\n  getUsuarioActual(): any {\n    if (this.isBrowser) {\n      const sesionUsuarioJSON = localStorage.getItem('sesionUsuario');\n      return sesionUsuarioJSON ? JSON.parse(sesionUsuarioJSON) : null;\n    }\n    return null;\n  }\n\n  /**\n   * Obtiene un Observable del usuario actual\n   * @returns Observable del usuario actual\n   */\n  getUsuarioActualObservable(): Observable {\n    return this.usuarioActual.asObservable();\n  }\n\n  /**\n   * Realiza el inicio de sesión de un usuario\n   * @param email Email del usuario\n   * @param password Contraseña del usuario\n   * @returns true si el login es exitoso, false en caso contrario\n   */\n  login(email: string, password: string): boolean {\n    if (this.isBrowser) {\n      const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuarioEncontrado = usuarios.find(\n        (usuario: any) => usuario.email === email && usuario.password === password\n      );\n\n      if (usuarioEncontrado) {\n        const usuarioSinContraseña: Usuario = {\n          email: usuarioEncontrado.email,\n          nombre: usuarioEncontrado.nombre,\n          celular: usuarioEncontrado.celular,\n          fechaNacimiento: usuarioEncontrado.fechaNacimiento,\n          rol: usuarioEncontrado.rol,\n        };\n\n        localStorage.setItem('sesionUsuario', JSON.stringify(usuarioSinContraseña));\n        this.usuarioActual.next(usuarioSinContraseña);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout() {\n    if (this.isBrowser) {\n      localStorage.removeItem('sesionUsuario');\n    }\n    this.usuarioActual.next(null);\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   * @returns true si el usuario es administrador, false en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.usuarioActual.value?.rol === 'administrador';\n  }\n\n\n  /**\n   * Registra un nuevo usuario\n   * @param nuevoUsuario Datos del nuevo usuario\n   * @returns true si el registro es exitoso, false si el usuario ya existe\n   */\n  registrarUsuario(nuevoUsuario: any): boolean {\n    if (this.isBrowser) {\n      let usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuarioExistente = usuarios.find((u: any) => u.email === nuevoUsuario.email);\n      if (usuarioExistente) {\n        return false;\n      }\n      usuarios.push(nuevoUsuario);\n      localStorage.setItem('usuarios', JSON.stringify(usuarios));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Genera un token de recuperación para un email dado\n   * @param email Email del usuario\n   * @returns El token generado o null si el email no existe\n   */\n  generarTokenRecuperacion(email: string): string | null {\n    if (this.isBrowser) {\n      const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuario = usuarios.find((u: any) => u.email === email);\n      if (usuario) {\n        const token = Math.floor(Math.random() * 900000) + 100000;\n        usuario.token = token.toString();\n        localStorage.setItem('usuarios', JSON.stringify(usuarios));\n        return token.toString();\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Recupera la contraseña de un usuario\n   * @param email Email del usuario\n   * @param token Token de recuperación\n   * @param newPassword Nueva contraseña\n   * @returns true si la recuperación es exitosa, false en caso contrario\n   */\n  recuperarPassword(email: string, token: string, newPassword: string): boolean {\n    if (this.isBrowser) {\n      const usuarios = JSON.parse(localStorage.getItem('usuarios') || '[]');\n      const usuario = usuarios.find((u: any) => u.email === email && u.token === token);\n      if (usuario) {\n        usuario.password = newPassword;\n        usuario.token = '';\n        localStorage.setItem('usuarios', JSON.stringify(usuarios));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   * @param datosActualizados Nuevos datos del perfil\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarPerfil(datosActualizados: any): boolean {\n    if (this.isBrowser) {\n      const usuariosJSON = localStorage.getItem('usuarios');\n      if (usuariosJSON) {\n        let usuarios = JSON.parse(usuariosJSON);\n        const sesionUsuario = this.getUsuarioActual();\n\n        if (sesionUsuario) {\n          // Actualizar el usuario en el array de usuarios\n          usuarios = usuarios.map((usuario: any) => {\n            if (usuario.email === sesionUsuario.email) {\n              return { ...usuario, ...datosActualizados };\n            }\n            return usuario;\n          });\n\n          // Actualizar el localStorage\n          localStorage.setItem('usuarios', JSON.stringify(usuarios));\n\n          // Actualizar la sesión del usuario\n          const usuarioActualizado = { ...sesionUsuario, ...datosActualizados };\n          localStorage.setItem('sesionUsuario', JSON.stringify(usuarioActualizado));\n\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Actualiza la contraseña del usuario actual\n   * @param newPassword Nueva contraseña\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarContraseña(newPassword: string): boolean {\n    if (this.isBrowser) {\n      const usuariosJSON = localStorage.getItem('usuarios');\n      if (usuariosJSON) {\n        let usuarios = JSON.parse(usuariosJSON);\n        const sesionUsuario = this.getUsuarioActual();\n\n        if (sesionUsuario) {\n          // Actualizar la contraseña del usuario en el array de usuarios\n          usuarios = usuarios.map((usuario: any) => {\n            if (usuario.email === sesionUsuario.email) {\n              return { ...usuario, password: newPassword };\n            }\n            return usuario;\n          });\n\n          // Actualizar el localStorage\n          localStorage.setItem('usuarios', JSON.stringify(usuarios));\n\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Obtiene la lista de todos los usuarios\n   * @returns Array de usuarios\n   */\n  getUsuarios(): any[] {\n    if (this.isBrowser) {\n      const usuariosJSON = localStorage.getItem('usuarios');\n      return usuariosJSON ? JSON.parse(usuariosJSON) : [];\n    }\n    return [];\n  }\n\n  /**\n   * Actualiza los datos de un usuario\n   * @param usuario Datos actualizados del usuario\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarUsuario(usuario: any): boolean {\n    if (this.isBrowser) {\n      let usuarios = this.getUsuarios();\n      const index = usuarios.findIndex(u => u.email === usuario.email);\n      if (index !== -1) {\n        usuarios[index] = usuario;\n        localStorage.setItem('usuarios', JSON.stringify(usuarios));\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            interface\n            CartItem\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/contacto/contacto.component.ts\n            \n            component\n            ContactoComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/manager-users/manager-users.component.ts\n            \n            component\n            ManagerUsersComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/modificar-perfil/modificar-perfil.component.ts\n            \n            component\n            ModificarPerfilComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/recuperar-password/recuperar-password.component.ts\n            \n            component\n            RecuperarPasswordComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/registrarme/registrarme.component.ts\n            \n            component\n            RegistrarmeComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            Usuario\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/cart.service.ts\n            \n            injectable\n            CartService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/cart.service.ts\n            \n            interface\n            CartItem\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/data-initialization.service.ts\n            \n            injectable\n            DataInitializationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/productos.service.ts\n            \n            injectable\n            ProductosService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.3\n        \n            @popperjs/core : ^2.11.8\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n                        Crea y configura la aplicación Express para el servidor SSR\n\n\n                        \n                            Returns :     express.Express\n\n                        \n                            \n                                Una instancia configurada de Express\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n                        Inicia el servidor Node\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFSII_SUMATIVA_ANGULAR\nFSII - SUMATIVA - ANGULAR\nCOMPODOC COMANDOS\n\nComando para generar documentacion: npx compodoc -p tsconfig.json\nComando para levantar servidor de documentacion: compodoc -s\n\nCOMPODOC DECLARACIONES\n\n@description | Se utiliza para proporcionar una descripción general del componente.\n  /**\n\n@description Se ingresa la descripcion del componente\n  */\n\n\n@param | Se utiliza para describir los parámetros de una función o método. Proporciona detalles sobre el tipo de datos, el propósito y cualquier restricción asociada al parámetro.\n  /**\n\nConstructor del componente\n@param cartService Servicio para manejar el carrito\n@param authService Servicio de autenticación\n@param dataInitService Servicio de inicialización de datos\n */\n\n\n@return | Describe el valor de retorno de una función o método. Proporciona detalles sobre el tipo de datos y el significado del valor devuelto.\n/**\n\nMétodo para verificar si el usuario es administrador\n@returns {boolean} Verdadero si el usuario es administrador, falso en caso contrario\n */\n\n\n@usageNotes | Se utiliza para proporcionar ejemplos de uso del módulo. Cuando documentas tus componentes, directivas, servicios o cualquier otro elemento en TypeScript con JSDoc, puedes incluir secciones personalizadas para proporcionar notas de uso.\n/**\n\n@description Prueba: No debería iniciar sesión con una contraseña incorrecta\n@usageNotes \nEsta prueba verifica el manejo de credenciales inválidas\n\n\nRellena el formulario con un email correcto pero una contraseña incorrecta.\n\n\n\nVerifica que el formulario sea válido.\n\n\n\nSimula una respuesta fallida del servicio de autenticación.\n\n\n\nEspía la función alert del navegador.\n\n\n\nLlama al método onSubmit().\n\n\n\nVerifica que se haya llamado al servicio de login con las credenciales proporcionadas.\n\n\n\nComprueba que no se haya llamado a la navegación.\n\n\n\nVerifica que se haya mostrado el mensaje de alerta correcto.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Proporciona detección de cambios basada en Zone.js con coalescencia de eventos\n     * @description Mejora el rendimiento agrupando múltiples cambios en una sola actualización\n     */\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    /**\n     * Configura el enrutador de la aplicación\n     * @description Utiliza las rutas definidas en app.routes\n     */\n    provideRouter(routes),\n    /**\n     * Habilita la hidratación del cliente\n     * @description Permite la transición suave del renderizado del lado del servidor al lado del cliente\n     */\n    provideClientHydration(),\n    /**\n     * Configura el cliente HTTP para usar Fetch API\n     * @description Proporciona una implementación moderna y eficiente para las solicitudes HTTP\n     */\n    provideHttpClient(withFetch())\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración principal de la aplicación Angular\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Función de arranque de la aplicación Angular para el entorno de servidor\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Configuración final de la aplicación para el entorno de servidor\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración específica para el servidor de la aplicación Angular\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
