var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.19,1,0.804]],["body/components/AppComponent.html",[0,0.275,1,1.26,2,1.112,3,0.35,4,0.35,5,0.874,6,0.874,7,0.874,8,0.301,9,2.202,10,0.743,11,1.602,12,2.662,13,0.558,14,0.582,15,3.344,16,1.855,17,3.766,18,2.073,19,0.757,20,1.669,21,3.766,22,0.903,23,3.766,24,1.23,25,1.424,26,0.874,27,1.684,28,1.368,29,1.506,30,1.112,31,0.81,32,1.112,33,1.287,34,4.358,35,3.588,36,4.358,37,4.358,38,1.112,39,3.766,40,2.073,41,3.766,42,0.211,43,0.424,44,3.091,45,4.358,46,0.881,47,4.358,48,1.931,49,0.723,50,3.344,51,3.344,52,4.73,53,1.397,54,0.533,55,2.202,56,1.92,57,1.167,58,3.894,59,2.932,60,1.059,61,3.766,62,0.676,63,0.514,64,0.041,65,0.837,66,0.475,67,0.514,68,0.993,69,0.582,70,0.903,71,2.096,72,1.361,73,2.932,74,1.855,75,2.675,76,3.363,77,1.855,78,1.397,79,1.469,80,1.26,81,2.604,82,0.561,83,1.287,84,3.1,85,3.1,86,1.26,87,2.334,88,2.334,89,2.675,90,3.894,91,1.869,92,0.937,93,2.675,94,0.903,95,1.669,96,3.766,97,0.71,98,3.766,99,2.675,100,1.855,101,1.424,102,1.424,103,1.361,104,2.675,105,2.334,106,2.662,107,1.07,108,4.466,109,2.675,110,3.766,111,4.358,112,3.766,113,3.766,114,1.669,115,2.073,116,1.506,117,2.675,118,2.662,119,3.766,120,0.695,121,0.301,122,1.07,123,1.658,124,0.967,125,0.401,126,2.675,127,2.675,128,0.967,129,0.35,130,0.35,131,0.837,132,2.675,133,2.202,134,2.202,135,1.658,136,3.766,137,2.675,138,1.891,139,2.675,140,2.675,141,0.456,142,2.675,143,2.33,144,3.894,145,4.73,146,3.1,147,3.1,148,1.506,149,2.073,150,1.424,151,2.334,152,1.855,153,3.766,154,3.1,155,3.766,156,4.73,157,3.766,158,3.766,159,3.766,160,3.766,161,1.669,162,3.766,163,3.766,164,3.766,165,1.361,166,2.675,167,3.766,168,2.675,169,3.766,170,2.073,171,0.642,172,3.766,173,3.766,174,0.874,175,1.23,176,1.23,177,0.874,178,1.546,179,0.874,180,2.675,181,0.874,182,0.641,183,0.874,184,0.713,185,0.874,186,0.713,187,0.874,188,0.713,189,0.874,190,0.713,191,0.874,192,0.874,193,0.713,194,0.874,195,0.713,196,0.874,197,0.713,198,0.713,199,0.874,200,0.713,201,0.874,202,0.874,203,0.874,204,0.024,205,0.024]],["title/injectables/AuthService.html",[57,0.649,206,0.724]],["body/injectables/AuthService.html",[3,0.196,4,0.196,8,0.169,10,0.837,13,0.541,14,0.648,19,0.76,22,0.583,29,0.601,31,1.199,42,0.304,43,0.274,46,0.741,48,1.356,49,0.467,50,2.486,51,2.486,54,0.396,57,0.523,60,1.026,62,0.761,63,0.898,64,0.041,65,0.898,66,0.458,67,0.898,68,0.675,69,0.51,70,0.843,72,0.878,74,2.231,78,1.689,79,1.622,80,1.458,81,2.126,82,0.637,83,1.038,86,1.477,87,3.202,88,3.202,91,1.637,92,0.523,94,0.36,95,1.077,97,0.752,101,0.491,102,0.491,107,2.288,114,2.495,115,2.967,116,1.544,120,0.505,121,0.169,125,0.225,128,0.543,129,0.196,130,0.196,131,0.962,141,1.012,143,1.197,148,2.036,151,2.18,161,1.558,165,2.074,170,1.338,171,0.658,198,0.4,204,0.016,205,0.016,206,0.583,207,0.74,208,1.062,209,2.001,210,1.685,211,2.43,212,2.43,213,2.43,214,2.895,215,2.43,216,2.43,217,2.895,218,2.895,219,2.895,220,2.394,221,2.43,222,2.43,223,1.237,224,1.356,225,1.421,226,2.43,227,1.685,228,1.077,229,1.507,230,1.507,231,1.065,232,1.936,233,2.001,234,1.502,235,1.831,236,2.257,237,2.807,238,1.903,239,2.921,240,3.956,241,2.632,242,2.001,243,1.502,244,2.486,245,1.718,246,2.001,247,1.502,248,2.001,249,1.502,250,0.972,251,1.338,252,2.001,253,2.001,254,2.001,255,1.502,256,1.197,257,1.356,258,2.001,259,1.502,260,1.507,261,2.001,262,1.502,263,1.718,264,3.279,265,3.075,266,2.001,267,2.001,268,1.733,269,3.402,270,1.502,271,2.562,272,2.001,273,1.502,274,1.502,275,2.126,276,1.197,277,2.001,278,2.493,279,1.502,280,2.001,281,2.486,282,1.502,283,1.718,284,2.001,285,1.502,286,2.001,287,2.001,288,1.502,289,2.001,290,1.493,291,2.163,292,2.163,293,2.163,294,1.338,295,1.507,296,1.197,297,1.507,298,0.648,299,2.001,300,1.502,301,1.897,302,0.827,303,0.827,304,1.237,305,0.827,306,0.931,307,3.201,308,1.237,309,1.237,310,2.001,311,1.237,312,0.74,313,0.74,314,0.74,315,0.491,316,1.149,317,0.601,318,0.827,319,1.685,320,2.18,321,0.666,322,1.062,323,2.126,324,0.827,325,1.237,326,1.592,327,3.402,328,1.237,329,1.237,330,1.237,331,1.237,332,3.728,333,1.237,334,2.001,335,1.237,336,1.718,337,1.237,338,1.237,339,1.237,340,1.237,341,1.237,342,1.237,343,1.237,344,2.001,345,1.237,346,1.237,347,4.253,348,1.239,349,1.237,350,1.239,351,4.438,352,1.237,353,1.237,354,1.237,355,1.237,356,3.581,357,1.237,358,1.237,359,2.001,360,2.52,361,3.852,362,2.52,363,3.402,364,1.237,365,1.237,366,0.74,367,1.237,368,2.001,369,1.718,370,1.237,371,1.237,372,1.237,373,1.237,374,1.237,375,1.237,376,1.237,377,1.237,378,3.179,379,0.931,380,1.237,381,1.897,382,2.921,383,1.936,384,1.237,385,1.237,386,1.237,387,1.237,388,2.001,389,1.897,390,2.52,391,2.001,392,2.001,393,2.001,394,2.001,395,2.001,396,1.718,397,1.718,398,2.001,399,2.52,400,0.931,401,1.237,402,1.237,403,0.827,404,1.237,405,2.895,406,1.237,407,1.237,408,1.237,409,2.001,410,2.895,411,2.895,412,2.001,413,1.711,414,2.895,415,1.237,416,1.237,417,1.062,418,1.237,419,1.062,420,0.931,421,1.106,422,0.878,423,1.062,424,2.001,425,1.237,426,1.062]],["title/components/CartComponent.html",[0,0.19,182,0.724]],["body/components/CartComponent.html",[0,0.265,1,0.665,2,1.058,3,0.326,4,0.326,5,0.815,6,0.815,7,0.815,8,0.281,10,0.827,11,1.492,13,0.531,14,0.547,16,1.766,19,0.749,20,2.307,24,1.171,25,1.37,26,0.815,27,1.663,28,1.351,30,1.058,31,0.771,32,1.058,33,1.238,38,1.058,40,1.973,42,0.197,43,0.403,46,0.887,48,1.588,49,0.688,53,1.354,54,0.516,55,2.054,56,1.882,57,1.12,60,1.042,62,0.79,63,0.805,64,0.041,65,0.932,66,0.463,67,0.805,68,0.88,69,0.547,70,1.099,71,2.647,73,2.221,76,2.221,79,0.665,82,0.569,86,1.117,91,0.902,92,1.087,94,1.006,97,0.688,100,2.625,101,1.171,102,1.171,103,1.657,107,0.998,120,0.681,121,0.281,122,0.998,123,1.546,124,0.902,125,0.374,129,0.326,130,0.326,131,0.805,141,0.425,149,1.973,150,0.815,152,1.229,171,0.827,174,0.815,175,1.171,176,1.171,177,0.815,178,1.498,179,0.815,181,0.815,182,1.099,183,0.815,184,0.665,185,0.815,186,0.665,187,0.815,188,0.665,189,0.815,190,0.665,191,0.815,192,0.815,193,0.665,194,0.815,195,0.665,196,0.815,197,0.665,198,0.665,199,0.815,200,0.665,201,0.815,202,0.815,203,0.815,204,0.023,205,0.023,225,1.701,228,2.152,231,1.023,235,2.031,250,1.433,251,1.973,256,1.766,257,2.031,276,1.766,290,1.295,298,0.665,312,1.229,313,1.229,314,1.229,315,0.815,316,1.171,317,0.998,326,1.238,348,0.859,350,1.212,383,1.373,413,1.588,421,0.902,422,1.295,427,1.763,428,2.95,429,2.842,430,2.221,431,3.452,432,2.95,433,2.95,434,3.452,435,3.1,436,3.774,437,3.774,438,2.95,439,2.95,440,3.774,441,3.584,442,1.171,443,1.973,444,2.495,445,2.842,446,2.495,447,2.495,448,2.95,449,3.997,450,2.221,451,2.495,452,3.228,453,2.221,454,2.933,455,2.95,456,2.24,457,2.495,458,2.782,459,2.308,460,2.495,461,2.495,462,0.902,463,1.763,464,2.054,465,2.523,466,2.054,467,2.95,468,2.95,469,2.054,470,2.95,471,2.054,472,2.842,473,2.054,474,2.95,475,2.054,476,2.054,477,3.997,478,1.546,479,2.054,480,2.054,481,1.763,482,1.763,483,2.95,484,2.054,485,2.054,486,2.054,487,2.054,488,2.054,489,2.054,490,1.106,491,2.054,492,2.054,493,2.054,494,2.054,495,2.054,496,2.054,497,3.452,498,2.95,499,1.433,500,1.433,501,1.973,502,3.584,503,2.95,504,3.584,505,3.584]],["title/interfaces/CartItem.html",[315,0.986,456,1.338]],["body/interfaces/CartItem.html",[3,0.402,4,0.402,8,0.346,10,0.706,13,0.556,14,0.565,19,0.734,29,1.229,42,0.242,43,0.466,44,1.905,46,0.855,54,0.346,56,1.11,62,0.783,64,0.041,66,0.478,68,0.796,69,0.528,70,0.994,71,2.587,78,1.223,80,0.819,82,0.466,83,0.907,86,1.396,94,0.994,95,1.362,97,0.461,100,2.895,103,1.11,105,3.11,107,1.874,114,1.836,120,0.613,121,0.346,125,0.461,128,1.11,129,0.402,130,0.402,131,1.006,135,1.905,141,0.799,171,0.523,204,0.027,205,0.027,206,0.994,210,1.691,224,1.362,227,2.281,228,2.519,229,1.905,230,1.905,231,1.077,232,2.281,235,1.836,238,1.514,256,1.514,257,1.362,271,2.568,276,1.514,294,1.691,295,1.905,296,1.514,297,1.905,298,0.819,301,2.568,302,1.691,303,1.691,305,1.691,312,2.041,313,2.041,314,2.041,315,1.004,316,1.763,321,1.362,323,3.088,324,1.691,326,1.481,413,1.362,422,1.11,429,1.905,430,3.247,435,1.691,442,1.004,443,1.691,445,3.345,450,1.905,452,3.11,453,3.11,454,3.214,456,2.077,458,3.129,459,2.58,465,2.971,472,2.568,506,1.905,507,2.172,508,2.529,509,2.529,510,4.13,511,2.529,512,3.859,513,3.859,514,2.529,515,3.411,516,2.529,517,3.859,518,3.859,519,3.859,520,2.529,521,2.172,522,2.928,523,2.172,524,2.172,525,3.411,526,2.529,527,2.529,528,2.529,529,2.529,530,2.529,531,2.529,532,2.529,533,2.529,534,2.529,535,2.529,536,2.529,537,2.529,538,2.529]],["title/interfaces/CartItem-1.html",[315,0.828,413,1.123,456,1.123]],["body/interfaces/CartItem-1.html",[0,0.26,3,0.399,4,0.399,8,0.343,10,0.702,11,1.379,13,0.525,14,0.563,16,1.503,19,0.75,20,2.07,24,0.997,25,1.347,27,0.901,28,0.731,30,0.901,31,0.656,32,0.901,33,1.217,38,0.901,40,1.679,42,0.24,43,0.464,46,0.89,48,1.827,53,0.901,54,0.464,56,1.808,57,1.004,62,0.793,64,0.041,66,0.477,68,0.792,69,0.526,70,0.989,71,2.615,73,1.891,76,1.891,79,0.813,86,1.244,91,1.102,94,1.12,97,0.75,100,2.852,103,1.688,107,1.867,120,0.72,121,0.343,122,1.219,123,1.891,124,1.102,125,0.458,129,0.399,130,0.399,131,0.897,141,0.52,149,2.269,152,1.503,171,0.796,182,0.731,204,0.027,205,0.027,225,1.526,228,2.481,231,1.057,235,1.827,250,1.219,251,1.679,256,1.503,257,1.352,276,1.503,290,1.49,298,0.813,312,2.031,313,2.031,314,2.031,315,0.997,316,1.76,317,1.219,326,1.379,348,0.989,350,1.291,383,1.679,413,1.827,421,1.102,422,1.102,427,2.156,428,2.511,429,1.891,430,1.891,431,3.394,432,2.511,433,2.511,434,2.511,435,2.753,436,2.511,437,2.511,440,2.511,442,0.997,443,1.679,445,2.555,448,2.511,449,4.118,450,1.891,452,3.239,453,1.891,454,3.124,455,2.511,456,2.217,458,3.031,459,2.269,462,1.102,463,2.156,464,3.394,465,2.964,466,3.394,467,3.394,468,3.394,469,2.511,470,3.394,471,2.511,472,2.555,473,2.511,474,3.394,475,2.511,476,2.511,477,2.511,478,1.891,479,2.511,480,2.511,481,2.156,482,2.156,483,3.394,484,2.511,485,2.511,486,2.511,487,2.511,488,2.511,489,2.511,490,1.352,491,2.511,492,2.511,493,2.511,494,2.511,495,2.511,496,2.511,497,3.845,498,3.394,499,1.648,500,1.648,501,2.269,506,1.891]],["title/injectables/CartService.html",[56,1.091,206,0.724]],["body/injectables/CartService.html",[3,0.35,4,0.35,8,0.301,10,0.881,13,0.563,14,0.561,19,0.766,29,1.07,42,0.211,43,0.424,44,2.703,46,0.952,49,0.723,54,0.491,56,1.362,60,1.073,62,0.783,63,0.909,64,0.041,65,0.909,66,0.475,67,0.909,68,0.909,69,0.582,70,1.135,71,2.645,78,1.397,80,1.004,82,0.621,83,1.112,86,1.489,92,1.073,94,0.642,95,1.67,97,0.565,100,2.833,101,0.875,102,0.875,103,0.967,105,3.364,107,1.07,114,2.097,120,0.57,121,0.301,125,0.402,128,0.967,129,0.35,130,0.35,131,0.958,135,1.659,141,0.743,171,0.642,204,0.024,205,0.024,206,0.903,207,1.319,210,2.4,223,2.204,224,1.932,227,2.4,228,2.405,229,2.336,230,2.336,231,1.104,232,2.605,235,2.097,238,1.856,256,1.856,257,1.67,271,2.933,276,1.856,294,2.074,295,2.336,296,1.856,297,2.336,298,1.004,301,2.703,302,1.473,303,1.473,305,1.473,312,1.319,313,1.319,314,1.319,315,0.875,316,1.231,321,1.186,323,2.987,324,1.473,326,1.397,413,1.186,422,1.362,429,2.336,430,3.091,435,1.473,438,3.102,439,3.102,442,1.231,443,2.074,445,3.536,450,2.336,452,3.091,453,3.207,454,3.14,456,1.932,458,2.925,459,2.4,465,2.074,472,2.336,507,1.892,508,3.102,509,2.204,510,3.895,511,3.895,512,3.589,513,4.105,514,3.102,515,3.102,516,2.204,517,3.589,518,3.589,519,3.589,520,2.204,521,2.663,522,3.082,523,2.663,524,2.663,525,3.102,526,2.204,527,2.204,528,2.204,529,2.204,530,3.895,531,2.204,532,2.204,533,3.895,534,2.204,535,3.102,536,3.895,537,2.204,538,2.204,539,3.102,540,3.768,541,2.677,542,2.677,543,2.677,544,2.677,545,2.677,546,2.677,547,2.677,548,2.677]],["title/components/ContactoComponent.html",[0,0.19,184,0.804]],["body/components/ContactoComponent.html",[0,0.29,1,0.79,2,1.194,3,0.388,4,0.388,5,0.969,6,0.969,7,0.969,8,0.334,10,0.784,11,1.577,13,0.553,19,0.794,22,0.97,24,1.322,25,1.504,26,0.969,27,1.714,28,1.392,30,1.194,31,0.99,32,1.194,33,1.359,38,1.194,40,2.226,42,0.234,43,0.455,49,0.777,53,1.46,54,0.518,60,1.025,62,0.715,63,0.569,64,0.04,65,0.884,66,0.385,67,0.569,68,0.777,69,0.601,70,0.97,78,1.194,80,1.52,82,0.518,92,0.87,97,0.742,101,0.969,102,0.969,120,0.602,121,0.334,125,0.445,129,0.388,130,0.388,131,0.569,141,0.505,144,4.58,150,0.969,154,3.33,161,2.293,165,1.87,171,0.784,174,0.969,175,1.322,176,1.322,177,0.969,178,1.616,179,0.969,181,0.969,182,0.711,183,0.969,184,1.317,185,0.969,186,0.79,187,0.969,188,0.79,189,0.969,190,0.79,191,0.969,192,0.969,193,0.79,194,0.969,195,0.79,196,0.969,197,0.79,198,0.79,199,0.969,200,0.79,201,0.969,202,0.969,203,0.969,204,0.026,205,0.026,231,0.777,241,2.268,294,2.226,316,1.786,421,1.072,462,1.072,549,2.441,550,2.618,551,2.268,552,4.044,553,4.044,554,4.603,555,4.603,556,2.436,557,4.044,558,4.603,559,2.965,560,2.693,561,4.044,562,4.044,563,2.859,564,2.859,565,2.965,566,1.792,567,1.617,568,2.965,569,1.993,570,1.993,571,2.268,572,2.965,573,3.33,574,3.33,575,3.789,576,2.965,577,2.965,578,4.044,579,4.044,580,4.044,581,4.603,582,1.461,583,2.096,584,2.965,585,2.965,586,2.549,587,2.965,588,1.632,589,2.965,590,1.838,591,5.174,592,4.499,593,2.965,594,4.044,595,2.965,596,2.965,597,2.965,598,2.965,599,2.811,600,3.062,601,3.065,602,3.065,603,4.044,604,3.065,605,2.507,606,2.507,607,2.722,608,1.617,609,2.507,610,2.722,611,2.507,612,2.226,613,3.33,614,4.044]],["title/injectables/DataInitializationService.html",[59,1.871,206,0.724]],["body/injectables/DataInitializationService.html",[3,0.531,4,0.531,8,0.457,29,1.625,42,0.32,43,0.558,46,0.949,49,0.952,54,0.558,59,3.073,60,1.027,63,0.78,64,0.041,65,0.78,66,0.472,67,0.78,82,0.457,83,1.464,120,0.729,121,0.457,125,0.61,128,1.468,129,0.531,130,0.531,141,0.692,148,1.625,204,0.032,205,0.032,206,1.189,207,2.002,210,2.946,224,2.371,225,1.899,227,2.946,298,1.083,302,2.237,303,2.237,305,2.237,306,2.519,321,1.801,322,2.872,323,2.729,324,2.237,348,0.974,350,0.974,423,2.872,490,1.801,615,4.587,616,3.345,617,5.572,618,2.872,619,4.958,620,4.063,621,4.082,622,4.063,623,4.063,624,2.519,625,3.345,626,3.345,627,4.063,628,3.345,629,3.505,630,4.063,631,4.063,632,4.063,633,4.063,634,4.063,635,4.063,636,4.063,637,4.063,638,4.063,639,4.063,640,4.958,641,4.063,642,4.063]],["title/components/HomeComponent.html",[0,0.19,186,0.804]],["body/components/HomeComponent.html",[0,0.266,1,0.672,2,1.067,3,0.33,4,0.33,5,0.825,6,0.825,7,0.825,8,0.284,10,0.864,11,1.498,12,2.554,13,0.567,14,0.646,19,0.664,22,1.324,26,0.825,27,1.667,28,1.353,30,1.067,31,0.777,32,1.067,33,1.246,38,1.067,40,1.989,42,0.199,43,0.407,44,2.616,46,0.616,49,0.694,53,1.361,54,0.519,56,1.931,60,1.073,62,0.664,63,0.885,64,0.041,65,0.974,66,0.518,67,0.885,68,0.974,69,0.621,70,0.866,71,2.559,74,2.5,82,0.549,86,0.963,92,1.049,97,0.838,100,2.72,101,1.593,102,1.593,103,1.931,105,2.24,106,2.554,118,2.554,120,0.603,121,0.284,123,1.564,125,0.379,129,0.33,130,0.33,131,0.936,133,2.077,134,2.077,135,1.564,143,1.78,150,0.825,170,1.989,171,0.91,174,0.825,175,1.181,176,1.181,177,0.825,178,1.506,179,0.825,181,0.825,182,0.605,183,0.825,184,0.672,185,0.825,186,1.228,187,0.825,188,0.672,189,0.825,190,0.672,191,0.825,192,0.825,193,0.672,194,0.825,195,0.672,196,0.825,197,0.672,198,0.672,199,0.825,200,0.672,201,0.825,202,0.825,203,0.825,204,0.023,205,0.023,228,2.248,231,0.694,235,1.601,250,1.445,251,1.989,275,2.793,348,0.605,350,1.012,383,1.989,443,1.989,454,2.536,465,1.989,490,2.628,521,2.554,522,2.554,523,3.257,524,2.554,539,2.974,566,1.601,610,1.989,624,2.616,628,2.077,629,3.257,643,2.077,644,2.974,645,3.613,646,5.344,647,3.613,648,4.608,649,3.613,650,3.613,651,3.613,652,4.22,653,4.22,654,3.613,655,4.608,656,3.613,657,2.523,658,3.239,659,3.613,660,2.523,661,3.613,662,2.523,663,4.608,664,4.608,665,5.644,666,5.52,667,5.224,668,3.613,669,2.523,670,2.523,671,2.974,672,3.613,673,3.613,674,2.523,675,2.523,676,2.523,677,2.523,678,3.613,679,2.523,680,3.613,681,2.523,682,2.523,683,2.523,684,2.523,685,2.523,686,2.523,687,2.523,688,3.613,689,2.523,690,2.523,691,2.523,692,2.523,693,2.523,694,2.077,695,2.523,696,2.523,697,3.613,698,2.523,699,2.523,700,2.523,701,2.523,702,2.523,703,3.613,704,2.974,705,3.613,706,3.613,707,3.613]],["title/injectables/JsonService.html",[206,0.724,225,0.986]],["body/injectables/JsonService.html",[3,0.3,4,0.3,8,0.258,13,0.583,14,0.663,19,0.707,29,0.917,42,0.181,43,0.38,46,0.969,49,0.647,54,0.258,60,1.112,62,0.681,63,0.902,64,0.041,65,0.902,66,0.549,67,0.902,69,0.586,82,0.586,92,0.725,97,0.506,101,1.736,102,1.736,114,2.48,120,0.576,121,0.258,128,0.829,129,0.3,130,0.3,141,0.836,148,2.16,149,2.866,170,2.702,171,0.836,204,0.022,205,0.022,206,0.809,207,1.13,224,1.953,225,1.102,275,2.702,298,1.387,321,1.017,348,0.809,350,1.057,396,4.092,397,4.129,442,1.765,490,2.394,583,1.622,624,3.349,708,1.889,709,3.291,710,3.998,711,3.998,712,3.998,713,3.998,714,3.998,715,3.998,716,3.998,717,3.998,718,4.407,719,4.407,720,4.407,721,4.407,722,3.372,723,3.372,724,3.372,725,3.372,726,2.294,727,4.407,728,3.372,729,4.447,730,2.294,731,5.206,732,3.372,733,2.294,734,2.294,735,2.294,736,2.294,737,2.294,738,5.206,739,2.307,740,4.909,741,3.372,742,3.372,743,2.294,744,3.372,745,2.294,746,2.294,747,3.372,748,3.372,749,2.294,750,3.372,751,3.372,752,2.294,753,5.206,754,5.313,755,4.286,756,5.206,757,5.206,758,5.206,759,3.372,760,4.407,761,4.407,762,4.407,763,4.407,764,2.294,765,5.206,766,5.206,767,5.206,768,4.713,769,3.372,770,4.407,771,4.407,772,4.407,773,4.407,774,2.294,775,3.372,776,4.407,777,4.407,778,4.407,779,4.407,780,2.294,781,3.372,782,4.407,783,4.407,784,4.407,785,4.407,786,2.294,787,5.206,788,4.286,789,3.372,790,2.294,791,5.206,792,3.372,793,3.372,794,2.294,795,3.372,796,2.294,797,2.294,798,1.622,799,2.294,800,2.294,801,2.294,802,2.294,803,2.294,804,2.294,805,4.407,806,3.372,807,3.372,808,3.372,809,3.372,810,2.294,811,2.294,812,2.294,813,2.294,814,2.294,815,2.294,816,2.294,817,2.294,818,2.294,819,2.294,820,2.294]],["title/components/LoginComponent.html",[0,0.19,188,0.804]],["body/components/LoginComponent.html",[0,0.292,1,0.797,2,1.201,3,0.391,4,0.391,5,0.977,6,0.977,7,0.977,8,0.337,10,0.788,11,1.581,13,0.576,14,0.559,18,2.24,19,0.77,20,2.533,22,0.976,24,1.329,25,1.511,26,0.977,27,1.717,28,1.394,30,1.201,31,0.875,32,1.201,33,1.365,35,3.807,38,1.201,42,0.236,43,0.458,46,0.788,49,0.781,53,1.465,54,0.559,57,1.199,60,0.953,62,0.649,63,0.574,64,0.041,65,0.888,66,0.388,67,0.574,68,0.781,69,0.603,70,0.976,72,1.47,80,1.322,82,0.458,91,2.138,92,0.875,120,0.679,121,0.337,122,1.196,124,1.081,125,0.449,129,0.391,130,0.391,131,0.888,143,2.816,146,3.35,148,1.627,150,0.977,152,2.445,165,1.47,174,0.977,175,1.329,176,1.329,177,0.977,178,1.621,179,0.977,181,0.977,182,0.717,183,0.977,184,0.797,185,0.977,186,0.797,187,0.977,188,1.322,189,0.977,190,0.797,191,0.977,192,0.977,193,0.797,194,0.977,195,0.797,196,0.977,197,0.797,198,0.797,199,0.977,200,0.797,201,0.977,202,0.977,203,0.977,204,0.026,205,0.026,220,2.522,231,0.888,236,2.428,268,1.474,278,2.24,281,2.114,290,1.081,326,0.883,348,0.717,350,1.109,462,1.081,499,1.627,500,1.627,501,1.647,550,2.47,551,2.278,556,2.445,560,2.638,566,1.803,567,1.627,569,2.005,570,2.005,571,2.278,582,1.474,586,2.005,588,1.647,599,2.005,605,3.319,606,3.396,608,1.627,821,1.474,822,2.463,823,2.005,824,4.624,825,4.069,826,4.624,827,1.647,828,4.069,829,2.545,830,2.24,831,2.876,832,2.991,833,2.991,834,2.991,835,1.647,836,2.991,837,2.991,838,2.991,839,2.991,840,2.24,841,2.991,842,2.991,843,2.991,844,2.991,845,2.114,846,3.35,847,1.854,848,1.854,849,2.991,850,1.854,851,1.854,852,2.522,853,2.24,854,2.24,855,3.35,856,4.069,857,4.069,858,3.35]],["title/components/ManagerUsersComponent.html",[0,0.19,190,0.804]],["body/components/ManagerUsersComponent.html",[0,0.238,1,0.555,2,0.927,3,0.273,4,0.273,5,0.681,6,0.681,7,0.681,8,0.235,10,0.768,11,1.399,13,0.556,14,0.594,19,0.779,22,0.753,24,1.026,25,1.234,26,0.681,27,1.604,28,1.302,30,0.927,31,0.97,32,0.927,33,1.115,38,0.927,42,0.164,43,0.354,46,0.535,49,0.603,53,1.241,54,0.473,57,1.089,60,1.055,62,0.662,63,0.807,64,0.041,65,0.91,66,0.482,67,0.807,68,0.603,69,0.594,72,1.135,77,1.547,78,1.241,79,1.561,80,1.478,81,2.314,82,0.583,83,1.115,86,0.837,90,2.585,92,1.058,94,0.5,95,0.924,97,0.711,101,1.234,102,1.374,103,1.135,116,1.895,118,2.22,120,0.55,121,0.235,124,0.753,125,0.313,129,0.273,130,0.273,131,0.807,141,0.355,147,2.585,148,2.254,150,0.681,161,2.295,165,1.872,171,0.644,174,0.681,175,1.026,176,1.026,177,0.681,178,1.374,179,0.681,181,0.681,182,0.5,183,0.681,184,0.555,185,0.681,186,0.555,187,0.681,188,0.555,189,0.681,190,1.12,191,1.654,192,0.681,193,0.555,194,0.681,195,0.555,196,0.681,197,0.555,198,0.555,199,0.681,200,0.555,201,0.681,202,0.681,203,0.681,204,0.02,205,0.02,231,0.944,241,1.861,250,1.681,257,2.1,275,2.314,283,2.22,298,0.837,316,1.607,317,1.895,318,2.609,319,1.148,320,3.049,326,1.241,336,2.22,348,0.906,350,1.214,366,1.547,381,1.947,389,1.292,417,1.474,421,1.135,422,1.135,426,1.474,462,0.753,499,1.51,500,1.51,501,2.079,503,2.585,550,2.458,551,1.861,556,2.071,560,2.335,566,1.863,567,1.256,569,2.071,570,1.547,571,1.861,582,1.027,586,2.222,588,1.148,590,1.292,599,2.494,600,2.314,607,1.729,609,1.947,611,1.947,612,1.729,694,1.716,739,1.392,821,1.027,823,1.547,827,1.148,829,2.079,830,1.729,831,2.22,835,1.148,840,2.314,845,2.67,850,1.292,851,1.292,852,1.947,853,1.729,854,1.729,859,4.566,860,4.566,861,1.716,862,3.14,863,4.51,864,3.777,865,3.14,866,3.777,867,3.777,868,3.777,869,4.204,870,3.14,871,2.22,872,3.14,873,4.204,874,4.204,875,3.14,876,2.085,877,4.739,878,5.062,879,3.14,880,2.085,881,3.14,882,2.22,883,2.085,884,1.947,885,1.947,886,3.188,887,2.22,888,2.938,889,2.22,890,2.22,891,2.22,892,3.188,893,3.14,894,2.085,895,3.14,896,5.277,897,2.085,898,2.085,899,2.085,900,2.085,901,2.085,902,2.085,903,3.14,904,2.085,905,3.777,906,2.085,907,2.085,908,2.085,909,1.292,910,1.474,911,2.085,912,2.085,913,4.51,914,1.716,915,3.777,916,2.085,917,3.14,918,2.085,919,2.085,920,2.085,921,2.085,922,3.14,923,2.085,924,3.14,925,2.085,926,3.777,927,2.085,928,2.085,929,2.085,930,2.085,931,2.085,932,3.777,933,2.085,934,2.085,935,2.085,936,1.474,937,1.474,938,1.474,939,1.474,940,1.474,941,1.474,942,2.22,943,1.474,944,1.474,945,3.14,946,3.14,947,1.947,948,1.947,949,2.22,950,2.22,951,2.22,952,1.716,953,1.716,954,1.716,955,2.085,956,2.085,957,2.085,958,2.085,959,2.085]],["title/components/ModificarPerfilComponent.html",[0,0.19,193,0.804]],["body/components/ModificarPerfilComponent.html",[0,0.243,1,0.572,2,0.948,3,0.281,4,0.281,5,0.702,6,0.702,7,0.702,8,0.242,10,0.778,11,1.467,13,0.546,14,0.657,16,1.582,19,0.75,22,1.275,24,1.049,25,1.257,26,0.702,27,1.614,28,1.311,30,0.948,31,0.918,32,0.948,33,1.136,38,0.948,42,0.169,43,0.362,46,0.547,48,1.891,49,0.617,53,1.26,54,0.48,57,1.099,60,1.003,62,0.741,63,0.738,64,0.041,65,0.877,66,0.457,67,0.738,68,0.617,69,0.628,72,1.161,74,2.361,77,2.103,78,1.508,79,1.277,80,1.456,82,0.559,83,0.634,86,0.572,92,0.827,94,1.023,97,0.798,115,1.768,116,2.042,120,0.558,121,0.242,124,0.776,125,0.322,129,0.281,130,0.281,131,0.819,138,2.27,141,0.366,150,1.874,151,3.388,161,2.202,171,0.87,174,0.702,175,1.049,176,1.049,177,0.702,178,1.394,179,0.702,181,0.702,182,0.515,183,0.702,184,0.572,185,0.702,186,0.572,187,0.702,188,0.572,189,0.702,190,0.572,191,0.702,192,0.702,193,1.137,194,0.702,195,0.572,196,0.702,197,0.572,198,0.572,199,0.702,200,0.572,201,0.702,202,0.702,203,0.702,204,0.021,205,0.021,231,0.981,236,2.62,237,1.991,238,2.361,244,1.518,250,1.284,290,1.161,298,0.856,316,1.493,317,1.706,318,2.349,319,1.183,326,1.349,348,0.77,350,1.311,366,2.103,381,1.991,389,1.332,403,1.768,419,1.518,420,2.384,421,1.161,422,1.887,442,1.566,462,0.776,478,1.991,499,1.284,500,1.284,550,2.356,551,1.895,560,2.361,563,3.017,564,2.27,566,1.423,567,1.284,569,2.103,570,2.103,571,2.619,582,1.582,586,2.251,590,1.332,599,2.103,600,2.638,601,1.991,602,1.991,604,1.991,607,1.768,608,1.706,609,1.991,610,1.768,611,1.991,612,1.768,739,2.124,821,1.058,823,1.582,827,1.183,829,2.117,830,1.768,835,1.768,840,2.349,847,1.991,848,1.991,854,2.349,858,2.644,871,2.27,882,2.27,884,2.645,885,2.645,886,3.229,887,2.27,888,2.645,889,2.27,890,1.518,891,2.27,892,3.229,909,1.332,910,1.518,936,1.518,937,1.518,938,1.518,939,1.518,940,1.518,941,1.518,942,2.27,943,1.518,944,1.518,947,2.645,948,1.991,949,2.27,950,2.27,951,2.27,960,4.377,961,4.377,962,1.768,963,3.946,964,3.846,965,3.211,966,3.166,967,3.846,968,4.268,969,4.268,970,2.27,971,3.211,972,3.017,973,2.148,974,2.719,975,2.148,976,2.148,977,3.211,978,2.148,979,3.211,980,2.148,981,3.388,982,2.27,983,3.211,984,2.27,985,3.017,986,2.27,987,2.27,988,2.148,989,2.148,990,2.148,991,2.148,992,2.148,993,2.148,994,1.768,995,1.518,996,1.518,997,1.518,998,1.768,999,1.518,1000,2.148,1001,2.148,1002,2.148,1003,2.148,1004,2.148,1005,2.148,1006,3.211,1007,2.148,1008,3.846,1009,3.211,1010,3.211,1011,4.268,1012,1.768,1013,1.768,1014,2.148,1015,2.148,1016,2.148,1017,2.27,1018,2.27,1019,2.27,1020,2.27,1021,3.017,1022,2.27,1023,2.27,1024,2.27,1025,2.27,1026,3.017]],["title/components/PedidosComponent.html",[0,0.19,195,0.804]],["body/components/PedidosComponent.html",[0,0.292,1,0.801,2,1.206,3,0.393,4,0.393,5,0.983,6,0.983,7,0.983,8,0.339,13,0.442,14,0.339,20,2.431,24,1.335,25,1.515,26,0.983,27,1.718,28,1.395,30,1.206,31,1.07,32,1.206,33,1.369,38,1.206,42,0.237,43,0.46,46,0.79,48,2.055,49,0.784,53,1.469,54,0.46,57,1.18,60,1.053,62,0.534,63,0.578,64,0.041,65,0.89,66,0.496,67,0.578,69,0.339,79,1.235,82,0.46,83,1.206,91,1.476,92,1.07,97,0.696,101,1.515,102,1.515,103,1.879,106,2.126,107,1.633,115,2.248,116,1.989,120,0.68,121,0.339,122,1.203,124,1.087,125,0.451,129,0.393,130,0.393,138,2.887,143,1.482,149,3.273,150,0.983,152,1.482,171,0.847,174,0.983,175,1.335,176,1.335,177,0.983,178,1.625,179,0.983,181,0.983,182,0.721,183,0.983,184,0.801,185,0.983,186,0.801,187,0.983,188,0.801,189,0.983,190,0.801,191,0.983,192,0.983,193,0.801,194,0.983,195,1.325,196,0.983,197,0.801,198,0.801,199,0.983,200,0.801,201,0.983,202,0.983,203,0.983,204,0.026,205,0.026,225,1.752,231,0.578,241,2.285,250,1.633,290,1.087,317,1.633,348,0.721,350,1.339,435,2.248,458,2.248,459,1.656,463,2.126,478,1.865,481,2.887,482,2.126,490,1.81,499,1.203,500,1.203,501,1.656,618,2.126,629,2.126,644,2.476,671,4.516,704,3.362,755,2.476,821,1.482,823,2.012,855,3.362,914,3.362,952,2.476,953,2.476,954,2.476,1017,2.126,1027,2.476,1028,4.637,1029,4.084,1030,4.974,1031,4.084,1032,3.008,1033,3.008,1034,3.008,1035,3.008,1036,3.008,1037,3.008,1038,4.084,1039,3.008,1040,2.476,1041,4.637,1042,3.008,1043,3.008,1044,2.126,1045,3.008,1046,3.008,1047,3.008,1048,3.008,1049,3.008,1050,3.008,1051,3.008,1052,4.084,1053,4.084,1054,4.084,1055,4.084,1056,3.008,1057,4.084,1058,3.008,1059,3.008,1060,4.084,1061,4.637,1062,3.008,1063,4.084,1064,3.008,1065,3.008,1066,3.008,1067,3.008,1068,3.008,1069,3.008,1070,3.008,1071,3.008,1072,3.008,1073,3.008,1074,3.008,1075,3.008,1076,3.008,1077,3.008,1078,3.008,1079,3.008,1080,3.008,1081,3.008,1082,3.008,1083,3.008,1084,3.008,1085,3.008,1086,3.008,1087,3.008,1088,3.008,1089,3.008,1090,3.008,1091,3.008]],["title/injectables/ProductosService.html",[206,0.724,658,1.871]],["body/injectables/ProductosService.html",[3,0.568,4,0.568,8,0.489,13,0.492,14,0.489,29,1.738,42,0.343,49,0.991,54,0.489,60,0.991,63,0.835,64,0.04,65,0.835,66,0.414,67,0.835,82,0.489,94,1.042,114,2.441,120,0.721,121,0.489,128,1.571,129,0.568,130,0.568,141,0.741,204,0.033,205,0.033,206,1.238,207,2.141,225,1.929,306,2.694,307,3.072,321,1.926,490,2.288,583,3.072,618,3.072,621,4.251,624,3.201,625,3.578,626,3.578,658,3.201,1092,3.578,1093,5.699,1094,4.346,1095,4.346,1096,4.346,1097,4.346,1098,4.346,1099,3.578,1100,4.346,1101,4.346,1102,4.346,1103,4.346,1104,4.346]],["title/components/RecuperarPasswordComponent.html",[0,0.19,197,0.804]],["body/components/RecuperarPasswordComponent.html",[0,0.253,1,0.614,2,0.998,3,0.301,4,0.301,5,0.752,6,0.752,7,0.752,8,0.259,10,0.752,11,1.452,13,0.555,14,0.624,16,1.666,18,1.861,19,0.761,20,2.396,22,1.33,24,1.105,25,1.309,26,0.752,27,1.637,28,1.33,30,0.998,31,0.95,32,0.998,33,1.183,38,0.998,42,0.181,43,0.381,46,0.683,49,0.649,53,1.304,54,0.497,57,1.121,60,0.976,62,0.577,63,0.649,64,0.041,65,0.848,66,0.421,67,0.649,68,0.649,69,0.624,70,0.811,72,1.222,77,1.666,78,1.304,80,1.354,82,0.529,92,0.862,94,1.059,97,0.811,116,1.88,120,0.615,121,0.259,122,0.921,124,0.832,125,0.345,129,0.301,130,0.301,131,0.848,141,0.576,150,0.752,165,1.448,171,0.838,174,0.752,175,1.105,176,1.105,177,0.752,178,1.443,179,0.752,181,0.752,182,0.552,183,0.752,184,0.614,185,0.752,186,0.614,187,0.752,188,0.614,189,0.752,190,0.614,191,0.752,192,0.752,193,0.614,194,0.752,195,0.614,196,0.752,197,1.176,198,1.46,199,0.752,200,0.614,201,0.752,202,0.752,203,0.752,204,0.022,205,0.022,231,1.038,236,2.633,237,2.737,238,2.422,260,1.428,263,2.39,264,3.65,265,3.591,268,1.135,278,1.861,290,1.222,296,1.135,326,1.452,348,0.811,350,1.25,366,1.666,379,1.428,400,2.737,403,1.861,420,1.428,421,0.832,422,0.832,442,1.606,462,0.832,499,1.602,500,1.602,550,2.179,551,1.974,556,2.175,560,2.422,563,3.121,564,2.39,566,1.498,567,1.352,569,1.666,570,1.666,571,2.317,573,1.896,574,1.896,575,2.784,582,1.666,586,2.175,588,1.268,599,2.175,600,2.706,601,2.096,602,2.096,604,2.096,605,3.437,606,3.352,607,1.861,608,1.765,610,1.861,612,1.861,739,1.498,821,1.135,823,1.666,827,1.268,829,2.206,830,1.861,835,1.861,840,1.861,845,1.628,847,2.096,848,2.096,850,1.428,851,1.428,852,2.096,853,1.861,854,1.861,884,2.096,885,2.096,888,2.096,909,1.428,947,2.096,948,2.096,963,2.784,966,3.298,970,2.39,972,3.475,974,2.832,981,3.475,982,2.39,984,2.39,985,3.121,986,2.832,987,2.39,994,1.896,995,1.628,996,1.628,997,1.628,998,3.298,999,1.628,1012,1.896,1013,1.896,1018,2.39,1019,3.121,1020,2.39,1021,3.121,1022,2.39,1023,2.39,1024,2.39,1025,2.39,1026,3.121,1044,1.628,1105,4.29,1106,4.29,1107,1.896,1108,3.381,1109,4.007,1110,3.381,1111,4.007,1112,4.415,1113,3.381,1114,2.303,1115,3.381,1116,3.381,1117,2.303,1118,2.303,1119,2.784,1120,2.303,1121,2.303,1122,4.916,1123,2.303,1124,2.303,1125,2.303,1126,2.303,1127,2.303,1128,2.303,1129,2.303,1130,2.303,1131,2.303,1132,3.381,1133,2.303,1134,2.303,1135,2.784,1136,2.303,1137,2.303,1138,2.303,1139,2.303,1140,2.303,1141,2.303,1142,2.303,1143,2.303,1144,2.303]],["title/components/RegistrarmeComponent.html",[0,0.19,200,0.804]],["body/components/RegistrarmeComponent.html",[0,0.254,1,0.619,2,1.005,3,0.304,4,0.304,5,0.759,6,0.759,7,0.759,8,0.262,10,0.804,11,1.456,13,0.563,14,0.637,16,1.676,18,1.873,19,0.765,20,2.401,22,1.253,24,1.112,25,1.316,26,0.759,27,1.64,28,1.332,30,1.005,31,1.015,32,1.005,33,1.189,38,1.005,42,0.183,43,0.383,46,0.686,49,0.653,53,1.309,54,0.499,57,1.124,60,0.947,62,0.645,63,0.773,64,0.041,65,0.906,66,0.422,67,0.773,68,0.653,69,0.625,70,0.816,72,1.23,77,2.184,78,1.543,79,1.314,80,1.507,82,0.555,83,0.686,91,0.839,92,0.732,94,1.063,97,0.51,116,2.089,120,0.617,121,0.262,122,0.929,124,0.839,125,0.348,129,0.304,130,0.304,131,0.906,141,0.58,148,1.361,150,0.759,161,2.258,165,0.839,171,0.58,174,0.759,175,1.112,176,1.112,177,0.759,178,1.449,179,0.759,181,0.759,182,0.557,183,0.759,184,0.619,185,0.759,186,0.619,187,0.759,188,0.619,189,0.759,190,0.619,191,0.759,192,0.759,193,0.619,194,0.759,195,0.619,196,0.759,197,0.619,198,0.619,199,0.759,200,1.181,201,1.542,202,0.759,203,0.759,204,0.022,205,0.022,231,0.978,236,2.462,245,2.405,264,1.44,268,1.144,278,2.217,290,0.839,291,1.642,292,3.926,293,1.642,296,1.144,298,0.907,316,1.542,317,1.773,318,2.44,319,1.279,320,1.44,326,1.456,348,0.557,350,1.222,366,2.184,369,2.846,379,2.109,403,1.873,421,0.839,442,1.611,462,0.839,499,1.361,500,1.361,550,2.401,551,1.984,556,2.184,560,2.429,566,1.508,567,1.361,569,1.676,570,1.676,571,1.984,582,1.676,586,2.429,588,1.279,590,1.44,599,2.429,600,2.714,601,2.109,602,2.109,604,2.109,605,3.158,606,3.158,607,1.873,608,1.773,609,2.109,610,1.873,611,2.109,612,1.873,739,1.965,821,1.144,823,1.676,827,1.279,829,2.217,830,1.873,831,2.405,835,1.279,840,1.873,846,2.801,847,1.44,848,1.44,850,1.44,851,1.44,852,2.109,853,1.873,854,2.44,871,2.405,882,2.405,884,2.748,885,2.748,886,3.336,887,2.405,888,3.057,889,2.405,890,2.405,891,2.405,892,3.336,909,1.44,910,1.642,936,1.642,937,1.642,938,1.642,939,1.642,940,1.642,941,1.642,942,2.405,943,1.642,944,1.642,947,2.748,948,2.109,949,2.405,950,2.405,970,2.405,972,3.485,974,2.846,981,3.485,982,2.405,984,2.405,985,3.134,986,2.405,987,2.405,995,1.642,996,1.642,997,1.642,999,1.642,1017,2.405,1018,2.405,1019,2.405,1020,2.405,1021,3.134,1022,2.405,1023,2.405,1024,2.405,1025,2.405,1026,3.134,1044,1.642,1119,2.801,1135,1.912,1145,1.912,1146,4.027,1147,3.403,1148,4.027,1149,3.403,1150,2.323,1151,2.323,1152,2.323,1153,2.323,1154,2.323,1155,2.323,1156,2.323,1157,2.323,1158,2.323,1159,2.323,1160,2.323,1161,2.323,1162,2.323,1163,2.323,1164,2.323,1165,1.912,1166,1.642,1167,1.912,1168,2.323,1169,3.403,1170,3.403]],["title/interfaces/Usuario.html",[79,0.804,315,0.986]],["body/interfaces/Usuario.html",[3,0.238,4,0.238,8,0.205,10,0.482,13,0.536,14,0.637,19,0.739,22,0.436,29,0.727,31,1.173,42,0.334,43,0.319,46,0.591,48,0.806,50,1.286,51,1.286,54,0.319,57,0.391,62,0.756,64,0.041,66,0.404,68,0.543,69,0.441,70,0.678,72,0.657,74,1.929,78,1.61,79,1.621,80,1.356,81,1.911,82,0.593,83,0.835,86,1.438,87,2.906,88,2.906,91,1.415,94,0.678,95,0.806,97,0.79,107,2.294,114,2.364,115,2.741,116,1.388,120,0.555,121,0.205,125,0.273,128,0.657,129,0.238,130,0.238,131,1.011,141,1.028,143,0.896,148,2.035,151,1.754,161,2.148,165,2.082,170,1.001,171,0.591,198,0.485,204,0.018,205,0.018,206,0.678,208,1.286,209,1.498,210,1.001,214,1.498,217,1.498,218,1.498,219,1.498,220,1.754,224,0.806,225,1.134,227,1.557,228,0.806,229,1.128,230,1.128,231,1.024,232,1.557,233,1.498,235,1.538,236,2.148,237,2.63,238,1.71,239,2.454,240,3.492,241,2.453,242,1.498,244,2.454,245,1.286,246,1.498,248,1.498,250,0.727,251,1.001,252,1.498,253,1.498,254,1.498,256,0.896,257,1.254,258,1.498,260,1.128,261,1.498,263,1.286,264,3.213,265,2.768,266,1.498,267,1.498,268,1.394,269,3.224,271,2.152,272,1.498,275,2.156,276,0.896,277,1.498,278,2.472,280,1.498,281,2,283,1.286,284,1.498,286,1.498,287,1.498,289,1.498,290,1.415,291,2,292,2,293,2,294,1.001,295,1.128,296,0.896,297,1.128,298,0.485,299,1.498,301,1.754,302,1.001,303,1.001,304,1.498,305,1.001,306,1.128,307,3.426,308,1.498,309,1.498,310,2.329,311,1.498,312,1.394,313,1.394,314,1.394,315,0.594,316,1.584,317,1.131,318,1.557,319,2.472,320,3.005,321,0.806,322,1.286,323,2.335,324,1.001,325,1.498,326,1.649,327,3.697,328,1.498,329,1.498,330,1.498,331,1.498,332,3.99,333,1.498,334,2.329,335,1.498,336,2,337,1.498,338,1.498,339,1.498,340,1.498,341,1.498,342,1.498,343,1.498,344,2.329,345,1.498,346,1.498,347,4.443,348,1.294,349,1.498,350,1.294,351,4.598,352,1.498,353,1.498,354,1.498,355,1.498,356,3.859,357,1.498,358,1.498,359,2.329,360,2.858,361,4.099,362,2.858,363,3.697,364,1.498,365,1.498,366,0.896,367,1.498,368,2.329,369,2,370,1.498,371,1.498,372,1.498,373,1.498,374,1.498,375,1.498,376,1.498,377,1.498,378,3.492,379,1.128,380,1.498,381,2.152,382,3.174,383,2.156,384,1.498,385,1.498,386,1.498,387,1.498,388,2.329,389,2.152,390,2.858,391,2.329,392,2.329,393,2.329,394,2.329,395,2.329,396,2,397,2,398,2.329,399,2.858,400,1.128,401,1.498,402,1.498,403,1.001,404,1.498,405,3.224,406,1.498,407,1.498,408,1.498,409,2.329,410,3.224,411,3.224,412,2.329,413,1.88,414,3.224,415,1.498,416,1.498,417,1.286,418,1.498,419,1.286,420,1.128,421,1.255,422,1.022,423,1.286,424,2.329,425,1.498,426,1.286,506,1.128]],["title/coverage.html",[1171,3.37]],["body/coverage.html",[0,0.378,1,1.057,8,0.447,9,3.267,28,0.952,56,1.434,57,0.854,59,2.46,64,0.04,66,0.378,79,1.057,103,1.997,182,0.952,184,1.057,186,1.057,188,1.057,190,1.057,193,1.057,195,1.057,197,1.057,200,1.057,204,0.032,205,0.032,206,1.361,208,3.454,225,1.297,298,1.057,315,1.73,427,3.454,456,2.166,507,3.454,549,3.267,615,3.267,616,3.267,643,3.267,658,2.46,708,3.267,798,3.454,822,3.267,859,3.267,860,3.267,861,3.267,960,3.267,961,3.267,962,3.267,1027,3.267,1092,3.267,1105,3.267,1106,3.267,1107,3.267,1145,3.267,1171,3.267,1172,3.968,1173,3.968,1174,3.968,1175,4.023,1176,4.887,1177,6.173,1178,5.779,1179,2.805,1180,5.295,1181,4.023,1182,5.779,1183,3.267,1184,3.267,1185,3.267,1186,3.267,1187,5.295,1188,4.887,1189,3.968,1190,3.968,1191,3.968,1192,3.968,1193,3.968,1194,3.968,1195,3.968,1196,3.968,1197,3.968,1198,3.968,1199,3.968,1200,3.968,1201,3.267,1202,4.887,1203,3.267,1204,3.267,1205,2.805,1206,3.968,1207,3.968]],["title/dependencies.html",[1208,2.085,1209,2.983]],["body/dependencies.html",[64,0.04,121,0.505,122,1.794,125,0.673,128,1.621,204,0.034,205,0.034,382,3.171,462,1.621,1205,3.719,1209,3.694,1210,4.487,1211,6.077,1212,4.487,1213,4.487,1214,4.487,1215,5.582,1216,5.261,1217,4.487,1218,4.487,1219,4.487,1220,4.487,1221,4.487,1222,4.487,1223,4.487,1224,4.487,1225,4.487,1226,3.694,1227,4.487,1228,4.487,1229,4.487,1230,4.487,1231,4.487,1232,3.694,1233,4.487]],["title/miscellaneous/functions.html",[1234,1.57,1235,2.983]],["body/miscellaneous/functions.html",[13,0.441,14,0.521,15,3.274,19,0.701,22,1.111,28,1.356,42,0.365,64,0.038,69,0.521,82,0.603,92,0.996,204,0.035,205,0.035,567,1.852,608,1.852,1165,3.813,1175,4.656,1179,3.998,1226,4.412,1234,2.871,1235,3.813,1236,4.631,1237,3.788,1238,4.631,1239,4.631,1240,4.631,1241,4.631,1242,4.631]],["title/index.html",[42,0.2,1243,2.533,1244,2.533]],["body/index.html",[10,0.861,11,1.492,13,0.576,14,0.569,18,1.971,19,0.781,22,1.099,54,0.403,56,1.294,57,0.77,58,2.948,62,0.749,64,0.039,68,1.057,69,0.653,70,0.859,71,1.587,72,1.656,73,2.22,74,2.489,76,3.302,77,1.764,78,1.353,79,1.221,80,1.221,81,2.522,82,0.403,83,1.057,84,2.948,85,2.948,86,1.221,87,2.22,88,2.22,91,1.294,94,1.277,95,2.537,97,0.758,108,3.772,131,1.023,141,0.61,152,1.764,165,1.294,171,0.61,204,0.03,205,0.03,220,2.22,231,0.688,232,1.971,236,2.03,260,3.302,268,2.489,400,2.22,442,1.17,550,2.03,556,1.764,592,2.948,608,2.252,739,2.36,788,2.948,853,1.971,1040,2.948,1099,2.948,1166,3.571,1167,2.948,1179,2.531,1237,2.531,1245,3.581,1246,3.581,1247,2.948,1248,5.052,1249,4.582,1250,3.581,1251,3.581,1252,4.582,1253,3.581,1254,5.326,1255,4.582,1256,4.582,1257,3.581,1258,3.581,1259,3.581,1260,3.581,1261,3.581,1262,5.052,1263,3.581,1264,3.581,1265,3.581,1266,3.581,1267,3.581,1268,3.581,1269,4.159,1270,3.772,1271,4.582,1272,4.582,1273,4.582,1274,3.581,1275,4.582,1276,3.581,1277,3.581,1278,3.581,1279,3.581,1280,4.582,1281,3.581,1282,3.581,1283,3.581,1284,4.582,1285,3.581,1286,4.582,1287,3.581,1288,3.581,1289,3.581,1290,3.581,1291,3.581,1292,3.581,1293,3.581,1294,3.581,1295,3.581,1296,3.581,1297,3.581,1298,3.581,1299,3.581,1300,3.581,1301,4.582,1302,3.581,1303,4.582,1304,3.581,1305,3.581,1306,4.582,1307,3.581,1308,3.581,1309,4.582,1310,3.581,1311,3.581,1312,3.581,1313,3.581,1314,3.581,1315,3.581,1316,3.581,1317,5.052,1318,4.582,1319,3.581,1320,3.581,1321,3.581,1322,3.581]],["title/modules.html",[1323,3.37]],["body/modules.html",[64,0.036,204,0.036,205,0.036,1323,3.99]],["title/overview.html",[1324,3.37]],["body/overview.html",[2,1.42,64,0.035,204,0.035,205,0.035,207,2.37,506,2.982,613,3.96,1324,3.96,1325,4.81,1326,4.81]],["title/properties.html",[43,0.408,1208,2.085]],["body/properties.html",[43,0.544,64,0.037,204,0.035,205,0.035,1327,4.828,1328,4.828]],["title/miscellaneous/variables.html",[1234,1.57,1329,2.983]],["body/miscellaneous/variables.html",[10,0.926,12,2.672,13,0.567,14,0.652,15,3.955,19,0.747,22,0.906,31,1.02,42,0.298,62,0.732,64,0.04,66,0.518,69,0.63,86,1.38,97,0.567,101,1.866,102,1.866,204,0.031,205,0.031,224,2.101,239,2.672,241,1.862,442,1.549,567,1.896,608,1.896,709,3.903,729,3.903,739,1.675,768,4.265,798,3.84,951,3.351,1166,2.672,1181,3.112,1183,4.265,1184,4.265,1185,3.112,1186,3.903,1201,3.112,1203,3.112,1204,3.112,1205,3.351,1232,3.112,1234,2.343,1237,3.84,1247,4.265,1269,3.112,1270,3.903,1329,3.112,1330,3.78,1331,3.78,1332,4.741,1333,3.78,1334,3.78,1335,4.741,1336,4.741,1337,3.78,1338,3.78,1339,3.78,1340,3.78,1341,3.78,1342,3.78,1343,3.78,1344,3.78,1345,3.78,1346,3.78,1347,3.78,1348,3.78,1349,3.78,1350,3.78,1351,3.78,1352,3.78,1353,3.78,1354,3.78,1355,5.181,1356,3.78,1357,3.78,1358,3.78,1359,3.78,1360,4.741,1361,3.78,1362,3.78,1363,3.78,1364,3.78,1365,3.78,1366,3.78,1367,3.78,1368,3.78,1369,5.181,1370,3.78,1371,3.78,1372,4.741,1373,3.78,1374,3.78,1375,3.78,1376,3.78,1377,4.741]]],"invertedIndex":[["",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1328,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1072,"title":{},"body":{"components/PedidosComponent.html":{}}}],["0.14.3",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":1064,"title":{},"body":{"components/PedidosComponent.html":{}}}],["0.5",{"_index":955,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["0/1",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["02cfbe260069",{"_index":785,"title":{},"body":{"injectables/JsonService.html":{}}}],["0d9fee",{"_index":1075,"title":{},"body":{"components/PedidosComponent.html":{}}}],["1",{"_index":413,"title":{"interfaces/CartItem-1.html":{}},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["1.11.3",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["1.75rem",{"_index":958,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["1/1",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":613,"title":{},"body":{"components/ContactoComponent.html":{},"overview.html":{}}}],["10.12.3",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["100000",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["11/11",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":892,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["14/14",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1020,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["16/19",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["18.0.0",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["18/18",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":603,"title":{},"body":{"components/ContactoComponent.html":{}}}],["2.11.8",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1326,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["41f9",{"_index":783,"title":{},"body":{"injectables/JsonService.html":{}}}],["44d2",{"_index":761,"title":{},"body":{"injectables/JsonService.html":{}}}],["46f8",{"_index":771,"title":{},"body":{"injectables/JsonService.html":{}}}],["4ae8",{"_index":777,"title":{},"body":{"injectables/JsonService.html":{}}}],["4px",{"_index":1070,"title":{},"body":{"components/PedidosComponent.html":{}}}],["5",{"_index":1325,"title":{},"body":{"overview.html":{}}}],["5.3.3",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["569",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["58e2",{"_index":760,"title":{},"body":{"injectables/JsonService.html":{}}}],["5px",{"_index":1067,"title":{},"body":{"components/PedidosComponent.html":{}}}],["6",{"_index":1019,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["6/6",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["6412",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.0",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["80759020",{"_index":759,"title":{},"body":{"injectables/JsonService.html":{}}}],["80:80",{"_index":1253,"title":{},"body":{"index.html":{}}}],["84",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1071,"title":{},"body":{"components/PedidosComponent.html":{}}}],["9",{"_index":611,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["900000",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["924e",{"_index":784,"title":{},"body":{"injectables/JsonService.html":{}}}],["9876",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["9]{6",{"_index":1124,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["9]{9",{"_index":590,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["9e5879b90a31",{"_index":773,"title":{},"body":{"injectables/JsonService.html":{}}}],["a7eb",{"_index":778,"title":{},"body":{"injectables/JsonService.html":{}}}],["abstractcontrol",{"_index":972,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["acceder",{"_index":579,"title":{},"body":{"components/ContactoComponent.html":{}}}],["accessors",{"_index":557,"title":{},"body":{"components/ContactoComponent.html":{}}}],["acciones",{"_index":503,"title":{},"body":{"components/CartComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["actual",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"interfaces/Usuario.html":{}}}],["actual_component",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["actualiza",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["actualización",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["actualizada",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["actualizado",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["actualizados",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizamos",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizar",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["actualizarcontraseña",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarcontraseña(newpassword",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizarperfil",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarperfil(datosactualizados",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizarusuario",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarusuario(usuario",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualmente",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["addtocart",{"_index":539,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["addtocart(product",{"_index":524,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["administrador",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["administrar",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["agregado",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{}}}],["agregar",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{}}}],["agrupando",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["albavets",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["alert",{"_index":1315,"title":{},"body":{"index.html":{}}}],["alert(\"contraseña",{"_index":1015,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"correo",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"el",{"_index":1135,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["alert(\"hubo",{"_index":1010,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"información",{"_index":1007,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"la",{"_index":1141,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["alert(\"ocurri",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["alert(\"¡inicio",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"¡usuario",{"_index":1164,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["alert('debes",{"_index":479,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["alert('error",{"_index":913,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('hubo",{"_index":498,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["alert('no",{"_index":927,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('pago",{"_index":493,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["alert('producto",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["alert('usuario",{"_index":922,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('¡mensaje",{"_index":596,"title":{},"body":{"components/ContactoComponent.html":{}}}],["alert(`tu",{"_index":1134,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["alerta",{"_index":1322,"title":{},"body":{"index.html":{}}}],["align",{"_index":1087,"title":{},"body":{"components/PedidosComponent.html":{}}}],["almacenamiento",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["angular",{"_index":1247,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular.appspot.com/o/categorias.json?alt=media&token=80759020",{"_index":789,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular.appspot.com/o/pedidos.json?alt=media&token=f1ea3b95",{"_index":792,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular.appspot.com/o/productos.json?alt=media&token=fd5435c0",{"_index":793,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular.appspot.com/o/usuarios.json?alt=media&token=f11c237d",{"_index":795,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular/animations",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":797,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular/compiler",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":462,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":768,"title":{},"body":{"injectables/JsonService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":709,"title":{},"body":{"injectables/JsonService.html":{},"miscellaneous/variables.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":756,"title":{},"body":{"injectables/JsonService.html":{}}}],["applicationconfig",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["archivo",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["arranque",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["array.isarray(data.categorias",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["array.isarray(data.productos",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["asegúrese",{"_index":1096,"title":{},"body":{"injectables/ProductosService.html":{}}}],["asociada",{"_index":1277,"title":{},"body":{"index.html":{}}}],["asunto",{"_index":591,"title":{},"body":{"components/ContactoComponent.html":{}}}],["autenticación",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["authorization",{"_index":757,"title":{},"body":{"injectables/JsonService.html":{}}}],["authservice",{"_index":57,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"index.html":{}}}],["auto",{"_index":959,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["añade",{"_index":521,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["añadir",{"_index":523,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["años",{"_index":950,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["b31f",{"_index":772,"title":{},"body":{"injectables/JsonService.html":{}}}],["b8b7",{"_index":762,"title":{},"body":{"injectables/JsonService.html":{}}}],["background",{"_index":952,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{}}}],["barra",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["basada",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":758,"title":{},"body":{"injectables/JsonService.html":{}}}],["behaviorsubject",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["behaviorsubject(0",{"_index":508,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["behaviorsubject(null",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["between",{"_index":1086,"title":{},"body":{"components/PedidosComponent.html":{}}}],["bg",{"_index":1073,"title":{},"body":{"components/PedidosComponent.html":{}}}],["bold",{"_index":1079,"title":{},"body":{"components/PedidosComponent.html":{}}}],["boolean",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["bootstrap",{"_index":1205,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["box",{"_index":1068,"title":{},"body":{"components/PedidosComponent.html":{}}}],["browser",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1250,"title":{},"body":{"index.html":{}}}],["c4770cc93d76",{"_index":763,"title":{},"body":{"injectables/JsonService.html":{}}}],["cabecera",{"_index":766,"title":{},"body":{"injectables/JsonService.html":{}}}],["calle",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["cambiar",{"_index":963,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["cambio",{"_index":977,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["cambios",{"_index":951,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["campos",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["cantidad",{"_index":458,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/PedidosComponent.html":{}}}],["caracteres",{"_index":604,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["card",{"_index":1061,"title":{},"body":{"components/PedidosComponent.html":{}}}],["carga",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"interfaces/Usuario.html":{}}}],["cargando",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{},"components/PedidosComponent.html":{}}}],["cargar",{"_index":914,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{}}}],["cargarpedidos",{"_index":1030,"title":{},"body":{"components/PedidosComponent.html":{}}}],["cargarsesion",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["carrito",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["cart",{"_index":430,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["cart'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["cart.component.html",{"_index":432,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cart.component.scss",{"_index":433,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cart.filter(item",{"_index":520,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.find((item",{"_index":526,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.find(item",{"_index":516,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.push",{"_index":529,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.reduce((total",{"_index":531,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cartcomponent",{"_index":182,"title":{"components/CartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["cartitem",{"_index":456,"title":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{}},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cartitemcount",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["cartitems",{"_index":434,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cartservice",{"_index":56,"title":{"injectables/CartService.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["carácter",{"_index":1024,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["caso",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["catcherror",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["catcherror(error",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["categoria.nombre",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorias",{"_index":624,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{}}}],["categoriaseleccionada",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoryid",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoría",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorías",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["cda1",{"_index":782,"title":{},"body":{"injectables/JsonService.html":{}}}],["celular",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["center",{"_index":1088,"title":{},"body":{"components/PedidosComponent.html":{}}}],["cerrar",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["cierra",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["class",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["clearcart",{"_index":536,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cliente",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closemodal",{"_index":869,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["coalescencia",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coincidan",{"_index":982,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["coinciden",{"_index":985,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["color",{"_index":953,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{}}}],["comando",{"_index":1255,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":1249,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["completa",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["completo",{"_index":1169,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["compodoc",{"_index":1254,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["componentes",{"_index":1290,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"overview.html":{}}}],["compras",{"_index":429,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["comprueba",{"_index":1320,"title":{},"body":{"index.html":{}}}],["con",{"_index":739,"title":{},"body":{"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configura",{"_index":567,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configuración",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurada",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["confirm(`¿estás",{"_index":929,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["confirmpassword",{"_index":998,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword.seterrors",{"_index":1129,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword.value",{"_index":1128,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword?.seterrors(null",{"_index":1130,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["console.error('data",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.error('error",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["console.log('archivo",{"_index":806,"title":{},"body":{"injectables/JsonService.html":{}}}],["console.log('añadiendo",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log('contraseña",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["console.log('error",{"_index":1009,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["console.log('iniciando",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log('perfil",{"_index":1005,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["console.log('usuario",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log('usuarios",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log(listacategorias",{"_index":802,"title":{},"body":{"injectables/JsonService.html":{}}}],["console.log(listaproductos",{"_index":812,"title":{},"body":{"injectables/JsonService.html":{}}}],["const",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["constructor",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["constructor(@inject(platform_id",{"_index":509,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["constructor(cartservice",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{}}}],["constructor(fb",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["constructor(formbuilder",{"_index":559,"title":{},"body":{"components/ContactoComponent.html":{}}}],["constructor(http",{"_index":726,"title":{},"body":{"injectables/JsonService.html":{}}}],["constructor(jsonservice",{"_index":618,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{}}}],["constructor(platformid",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{}}}],["constructor(private",{"_index":583,"title":{},"body":{"components/ContactoComponent.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{}}}],["constructor(productosservice",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["construir",{"_index":562,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contactform",{"_index":554,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ContactoComponent.html":{}}}],["contacto&#64;albavets.cl",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["contacto'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["contacto.component.html",{"_index":552,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto.component.scss",{"_index":553,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto@albavets.cl",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["contactocomponent",{"_index":184,"title":{"components/ContactoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["contador",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["contener",{"_index":947,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["content",{"_index":755,"title":{},"body":{"injectables/JsonService.html":{},"components/PedidosComponent.html":{}}}],["contiene",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["contrario",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["contraseña",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["contraseñas",{"_index":981,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control",{"_index":888,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control.get('confirmpassword",{"_index":1126,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["control.get('newpassword",{"_index":1125,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["control.get('password",{"_index":1155,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["control.get('repetirpassword",{"_index":1156,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["control.invalid",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control.markastouched",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["controles",{"_index":581,"title":{},"body":{"components/ContactoComponent.html":{}}}],["copy",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["correcta",{"_index":1100,"title":{},"body":{"injectables/ProductosService.html":{}}}],["correctamente",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["correcto",{"_index":1309,"title":{},"body":{"index.html":{}}}],["correo",{"_index":605,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["count",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":1171,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creamos",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["crear",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["credenciales",{"_index":1306,"title":{},"body":{"index.html":{}}}],["cualquier",{"_index":1275,"title":{},"body":{"index.html":{}}}],["cuando",{"_index":1288,"title":{},"body":{"index.html":{}}}],["cuenta",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["currency:'clp':'symbol",{"_index":1058,"title":{},"body":{"components/PedidosComponent.html":{}}}],["currency:\\'clp\\':\\'symbol",{"_index":1090,"title":{},"body":{"components/PedidosComponent.html":{}}}],["código",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["dado",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["data",{"_index":629,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/PedidosComponent.html":{}}}],["data.categorias",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.filter(pedido",{"_index":1046,"title":{},"body":{"components/PedidosComponent.html":{}}}],["data.productos",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["datainitializationservice",{"_index":59,"title":{"injectables/DataInitializationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["datainitservice",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["date",{"_index":937,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["date().toisostring",{"_index":488,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["date(control.value",{"_index":939,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":1056,"title":{},"body":{"components/PedidosComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":1089,"title":{},"body":{"components/PedidosComponent.html":{}}}],["datos",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["datosactualizados",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":600,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["debería",{"_index":1302,"title":{},"body":{"index.html":{}}}],["debes",{"_index":1017,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["declaraciones",{"_index":1261,"title":{},"body":{"index.html":{}}}],["default",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["defined",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["definidas",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["deleteuser",{"_index":870,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["deleteuser(usuario",{"_index":879,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["deleting",{"_index":934,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["dependencies",{"_index":1209,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derechos",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["describe",{"_index":1279,"title":{},"body":{"index.html":{}}}],["describir",{"_index":1267,"title":{},"body":{"index.html":{}}}],["descripcion",{"_index":1266,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":1263,"title":{},"body":{"index.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desde",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["destruir",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["detalles",{"_index":1271,"title":{},"body":{"index.html":{}}}],["detección",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determinar",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["devuelto",{"_index":1283,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":956,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["dirección",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ContactoComponent.html":{}}}],["directivas",{"_index":1291,"title":{},"body":{"index.html":{}}}],["directive",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["disabled",{"_index":908,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["display",{"_index":1082,"title":{},"body":{"components/PedidosComponent.html":{}}}],["docker",{"_index":1248,"title":{},"body":{"index.html":{}}}],["documentacion",{"_index":1256,"title":{},"body":{"index.html":{}}}],["documentas",{"_index":1289,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["durante",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["during",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["dynamic",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["dígitos",{"_index":612,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["e522",{"_index":776,"title":{},"body":{"injectables/JsonService.html":{}}}],["e90d",{"_index":770,"title":{},"body":{"injectables/JsonService.html":{}}}],["e977e471cce7",{"_index":779,"title":{},"body":{"injectables/JsonService.html":{}}}],["edad",{"_index":886,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminima",{"_index":890,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminimavalidator",{"_index":871,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminimavalidator(control",{"_index":882,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edición",{"_index":878,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editar",{"_index":896,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editform",{"_index":866,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editinguser",{"_index":867,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["edituser",{"_index":872,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["edituser(usuario",{"_index":893,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["eficiente",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ejecuta",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["ejecutando",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["ejemplos",{"_index":1285,"title":{},"body":{"index.html":{}}}],["el",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electrónico",{"_index":606,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["element",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["elemento",{"_index":1293,"title":{},"body":{"index.html":{}}}],["elimina",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["eliminacion",{"_index":881,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["eliminación",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["eliminado",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["eliminamos",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["eliminar",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["eliminarusuario",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminarusuario(email",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["email",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["emailform",{"_index":1111,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["en",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["enlaces",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["enrutador",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entorno",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entre",{"_index":1018,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["enviado",{"_index":575,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["enviar",{"_index":614,"title":{},"body":{"components/ContactoComponent.html":{}}}],["environment",{"_index":798,"title":{},"body":{"injectables/JsonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":751,"title":{},"body":{"injectables/JsonService.html":{}}}],["environments/environment",{"_index":799,"title":{},"body":{"injectables/JsonService.html":{}}}],["envía",{"_index":1115,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["envío",{"_index":570,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["err",{"_index":640,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["error",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["es",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["esadministrador",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["especial",{"_index":1025,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["específica",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["espía",{"_index":1314,"title":{},"body":{"index.html":{}}}],["est",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["esta",{"_index":1304,"title":{},"body":{"index.html":{}}}],["estructura",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["eventcoalescing",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventos",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["existingproduct",{"_index":525,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["existingproduct.cantidad",{"_index":528,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["exito",{"_index":808,"title":{},"body":{"injectables/JsonService.html":{}}}],["exitosa",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["exitosamente",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["exitoso",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{}}}],["expected",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["express",{"_index":1226,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["express.express",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["f",{"_index":558,"title":{},"body":{"components/ContactoComponent.html":{}}}],["f11c237d",{"_index":781,"title":{},"body":{"injectables/JsonService.html":{}}}],["f1ea3b95",{"_index":769,"title":{},"body":{"injectables/JsonService.html":{}}}],["fallida",{"_index":1313,"title":{},"body":{"index.html":{}}}],["false",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["falso",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["favor",{"_index":500,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fb",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fd5435c0",{"_index":775,"title":{},"body":{"injectables/JsonService.html":{}}}],["fecha",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["fechanac",{"_index":938,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanac.getfullyear",{"_index":941,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanac.getmonth",{"_index":944,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanacimiento",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["felipe",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["fetch",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["filterproducts",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["filterproducts(categoryid",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtra",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtrados",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtrar",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["final",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["flex",{"_index":1083,"title":{},"body":{"components/PedidosComponent.html":{}}}],["font",{"_index":1077,"title":{},"body":{"components/PedidosComponent.html":{}}}],["footer",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["forkjoin",{"_index":621,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["formbuilder",{"_index":560,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["formgroup",{"_index":571,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["formsmodule",{"_index":431,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["formulario",{"_index":550,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["formularios",{"_index":563,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["francisco",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["fsii",{"_index":1246,"title":{},"body":{"index.html":{}}}],["fsii_sumativa_angular",{"_index":1245,"title":{},"body":{"index.html":{}}}],["funcionalidad",{"_index":428,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["función",{"_index":1269,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1235,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fácilmente",{"_index":580,"title":{},"body":{"components/ContactoComponent.html":{}}}],["g",{"_index":983,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["g.get('confirmpassword')?.value",{"_index":1001,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["g.get('newpassword')?.value",{"_index":1000,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["genera",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["generado",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["general",{"_index":1264,"title":{},"body":{"index.html":{}}}],["generar",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["generartoken",{"_index":1112,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["generartokenrecuperacion",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["generartokenrecuperacion(email",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["gestionar",{"_index":862,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["gestión",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getcartitemcount",{"_index":533,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["getcartitems",{"_index":511,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["getdata",{"_index":1093,"title":{},"body":{"injectables/ProductosService.html":{}}}],["getf",{"_index":576,"title":{},"body":{"components/ContactoComponent.html":{}}}],["getjsoncategoriasdata",{"_index":718,"title":{},"body":{"injectables/JsonService.html":{}}}],["getjsonpedidosdata",{"_index":719,"title":{},"body":{"injectables/JsonService.html":{}}}],["getjsonproductosdata",{"_index":720,"title":{},"body":{"injectables/JsonService.html":{}}}],["getjsonusuariosdata",{"_index":721,"title":{},"body":{"injectables/JsonService.html":{}}}],["getter",{"_index":578,"title":{},"body":{"components/ContactoComponent.html":{}}}],["getting",{"_index":1243,"title":{"index.html":{}},"body":{}}],["getusuarioactual",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getusuarioactualobservable",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getusuarios",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["group",{"_index":1081,"title":{},"body":{"components/PedidosComponent.html":{}}}],["guardar",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["ha",{"_index":573,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["habilita",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hay",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["haya",{"_index":1317,"title":{},"body":{"index.html":{}}}],["header",{"_index":1076,"title":{},"body":{"components/PedidosComponent.html":{}}}],["headers",{"_index":753,"title":{},"body":{"injectables/JsonService.html":{}}}],["hidratación",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["home.component.html",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":186,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["hover",{"_index":1065,"title":{},"body":{"components/PedidosComponent.html":{}}}],["hoy",{"_index":936,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["hoy.getfullyear",{"_index":940,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["hoy.getmonth",{"_index":943,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["html",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["http",{"_index":729,"title":{},"body":{"injectables/JsonService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":727,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpheaders",{"_index":754,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpoptionscategorias",{"_index":710,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpoptionspedidos",{"_index":711,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpoptionsproductos",{"_index":712,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpoptionsusuarios",{"_index":713,"title":{},"body":{"injectables/JsonService.html":{}}}],["hubo",{"_index":1049,"title":{},"body":{"components/PedidosComponent.html":{}}}],["icons",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["identifier",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["iguales",{"_index":987,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["implementación",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["importación",{"_index":1098,"title":{},"body":{"injectables/ProductosService.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["incluir",{"_index":1297,"title":{},"body":{"index.html":{}}}],["incorrecta",{"_index":1303,"title":{},"body":{"index.html":{}}}],["incorrectos",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"interfaces/Usuario.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["información",{"_index":1011,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["ingresa",{"_index":1265,"title":{},"body":{"index.html":{}}}],["ingresado",{"_index":1136,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingresados",{"_index":1142,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingresar",{"_index":1122,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingrese",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inicia",{"_index":1165,"title":{},"body":{"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{}}}],["inicializa",{"_index":566,"title":{},"body":{"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inicialización",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"index.html":{}}}],["iniciar",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/PedidosComponent.html":{},"index.html":{}}}],["inicio",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PedidosComponent.html":{},"interfaces/Usuario.html":{}}}],["initform",{"_index":873,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["initialization.service",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["initialization.service.ts",{"_index":616,"title":{},"body":{"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["initialization.service.ts:10",{"_index":619,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initialization.service.ts:19",{"_index":620,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initializedata",{"_index":617,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initializing",{"_index":641,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["inject",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["inject(platform_id",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["injectable",{"_index":206,"title":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["injectables",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"overview.html":{}}}],["instancia",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intenta",{"_index":501,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{}}}],["interface",{"_index":315,"title":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"interfaces/Usuario.html":{}},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["interfaces",{"_index":506,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"interfaces/Usuario.html":{},"overview.html":{}}}],["interfaz",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["inténtalo",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inválidas",{"_index":1307,"title":{},"body":{"index.html":{}}}],["isbrowser",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["ismodalopen",{"_index":868,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["isplatformbrowser",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["isplatformbrowser(platformid",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["item",{"_index":459,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/PedidosComponent.html":{}}}],["item.cantidad",{"_index":472,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["item.id",{"_index":517,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["item.nombre",{"_index":504,"title":{},"body":{"components/CartComponent.html":{}}}],["item.precio",{"_index":477,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["items",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PedidosComponent.html":{}}}],["javier",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["jsdoc",{"_index":1295,"title":{},"body":{"index.html":{}}}],["json",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["json.parse(localstorage.getitem('cart",{"_index":512,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["json.parse(localstorage.getitem('sesionusuario",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.service",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["json.stringify(cart",{"_index":519,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["json.stringify(data.categorias",{"_index":635,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(data.productos",{"_index":638,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(data.usuarios",{"_index":632,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(usuarioactualizado",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.stringify(usuariosincontraseña",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["jsoncategoriasurl",{"_index":714,"title":{},"body":{"injectables/JsonService.html":{}}}],["jsonpedidosurl",{"_index":715,"title":{},"body":{"injectables/JsonService.html":{}}}],["jsonproductosurl",{"_index":716,"title":{},"body":{"injectables/JsonService.html":{}}}],["jsonservice",{"_index":225,"title":{"injectables/JsonService.html":{}},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["jsonusuariosurl",{"_index":717,"title":{},"body":{"injectables/JsonService.html":{}}}],["justify",{"_index":1084,"title":{},"body":{"components/PedidosComponent.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lado",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["las",{"_index":442,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/JsonService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["letra",{"_index":1021,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["levantar",{"_index":1259,"title":{},"body":{"index.html":{}}}],["limpia",{"_index":535,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["list",{"_index":1080,"title":{},"body":{"components/PedidosComponent.html":{}}}],["lista",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["listacategorias",{"_index":741,"title":{},"body":{"injectables/JsonService.html":{}}}],["listapedidos",{"_index":744,"title":{},"body":{"injectables/JsonService.html":{}}}],["listaproductos",{"_index":747,"title":{},"body":{"injectables/JsonService.html":{}}}],["listausuarios",{"_index":750,"title":{},"body":{"injectables/JsonService.html":{}}}],["llama",{"_index":1316,"title":{},"body":{"index.html":{}}}],["llamado",{"_index":1318,"title":{},"body":{"index.html":{}}}],["loadcartitems",{"_index":436,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["loaddata",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["loading",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["loadusers",{"_index":874,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["local",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.getitem('categorias",{"_index":633,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.getitem('productos",{"_index":636,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.getitem('usuarios",{"_index":630,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.removeitem('cart",{"_index":537,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["localstorage.removeitem('sesionusuario",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.setitem('cart",{"_index":518,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["localstorage.setitem('categorias",{"_index":634,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.setitem('productos",{"_index":637,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.setitem('sesionusuario",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.setitem('usuarios",{"_index":631,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["login",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["login'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["login(email",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["login.component.html",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":188,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["logueado",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["los",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["m",{"_index":942,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manager",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manageruserscomponent",{"_index":190,"title":{"components/ManagerUsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["maneja",{"_index":569,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manejar",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["manejo",{"_index":1305,"title":{},"body":{"index.html":{}}}],["map",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["map(result",{"_index":1102,"title":{},"body":{"injectables/ProductosService.html":{}}}],["map(usuarios",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["margin",{"_index":957,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["matching",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["math.max(...pedidos.map(p",{"_index":485,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["mayor",{"_index":949,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mayúscula",{"_index":1023,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mejora",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menor",{"_index":891,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["menos",{"_index":602,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mensaje",{"_index":592,"title":{},"body":{"components/ContactoComponent.html":{},"index.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["methods",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["metodocategorias",{"_index":722,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodocategorias(listacategorias",{"_index":736,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodocategorias(listacategorias:any",{"_index":801,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodopedidos",{"_index":723,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodopedidos(listapedidos",{"_index":742,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodoproductos",{"_index":724,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodoproductos(listaproductos",{"_index":745,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodoproductos(listaproductos:any",{"_index":811,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodousuarios",{"_index":725,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodousuarios(listausuarios",{"_index":748,"title":{},"body":{"injectables/JsonService.html":{}}}],["mi",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["minúscula",{"_index":1022,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mis",{"_index":1052,"title":{},"body":{"components/PedidosComponent.html":{}}}],["miscellaneous",{"_index":1234,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":984,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["modal",{"_index":877,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["moderna",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modificar",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["modificarperfilcomponent",{"_index":193,"title":{"components/ModificarPerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["modules",{"_index":1323,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostrado",{"_index":1321,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["muestra",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["más",{"_index":1050,"title":{},"body":{"components/PedidosComponent.html":{}}}],["método",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"index.html":{}}}],["mínima",{"_index":887,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["módulo",{"_index":1287,"title":{},"body":{"index.html":{}}}],["múltiples",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nacimiento",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["narrow':'1.0",{"_index":1059,"title":{},"body":{"components/PedidosComponent.html":{}}}],["narrow\\':\\'1.0",{"_index":1091,"title":{},"body":{"components/PedidosComponent.html":{}}}],["navegación",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["navegador",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["necesarios",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["newpassword",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["newpassword).subscribe",{"_index":1140,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["newpassword.value",{"_index":1127,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["next",{"_index":628,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{}}}],["ngondestroy",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["nico",{"_index":464,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["node",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nombre",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["notas",{"_index":1300,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1257,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevamente",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["nuevo",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevoid",{"_index":483,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["nuevopedido",{"_index":487,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["nuevos",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.celular",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.email",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.fechanacimiento",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.nombre",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.password",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.rol",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.token",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["null",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["number",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["numéricos",{"_index":948,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["número",{"_index":610,"title":{},"body":{"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["o",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["object",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["object.values(this.editform.controls).foreach(control",{"_index":925,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["object.values(this.loginform.controls).foreach(control",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(this.passwordform.controls).foreach(control",{"_index":1144,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["object.values(this.registroform.controls).foreach(control",{"_index":1168,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["objeto",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["observable",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["obtener",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["obtenidos",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["obtiene",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["of(false",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["of(null",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["olvidaste",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["onsubmit",{"_index":556,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["onsubmitpassword",{"_index":968,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["onsubmitperfil",{"_index":969,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["opcionalmente",{"_index":1042,"title":{},"body":{"components/PedidosComponent.html":{}}}],["opciones",{"_index":765,"title":{},"body":{"injectables/JsonService.html":{}}}],["operaciones",{"_index":443,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["optional",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["otro",{"_index":1167,"title":{},"body":{"components/RegistrarmeComponent.html":{},"index.html":{}}}],["outlet",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1324,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1252,"title":{},"body":{"index.html":{}}}],["p.id",{"_index":486,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["package",{"_index":1208,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagar",{"_index":505,"title":{},"body":{"components/CartComponent.html":{}}}],["pago",{"_index":449,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["para",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["parámetro",{"_index":1278,"title":{},"body":{"index.html":{}}}],["parámetros",{"_index":1268,"title":{},"body":{"index.html":{}}}],["password",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["password'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["password).subscribe",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{}}}],["password.component.html",{"_index":1110,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.scss",{"_index":1109,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts",{"_index":1107,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:20",{"_index":1121,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1113,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1117,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1120,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:71",{"_index":1114,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:95",{"_index":1118,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.value",{"_index":1157,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["password/recuperar",{"_index":1106,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["passwordform",{"_index":966,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["passwordmatchvalidator",{"_index":970,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["passwordmatchvalidator(control",{"_index":1119,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["passwordmatchvalidator(g",{"_index":979,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["pedido",{"_index":481,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/PedidosComponent.html":{}}}],["pedido.fecha",{"_index":1055,"title":{},"body":{"components/PedidosComponent.html":{}}}],["pedido.id",{"_index":1054,"title":{},"body":{"components/PedidosComponent.html":{}}}],["pedido.total",{"_index":1057,"title":{},"body":{"components/PedidosComponent.html":{}}}],["pedido.usuario",{"_index":1047,"title":{},"body":{"components/PedidosComponent.html":{}}}],["pedidos",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"injectables/JsonService.html":{},"components/PedidosComponent.html":{}}}],["pedidos'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["pedidos.component.html",{"_index":1029,"title":{},"body":{"components/PedidosComponent.html":{}}}],["pedidos.component.scss",{"_index":1028,"title":{},"body":{"components/PedidosComponent.html":{}}}],["pedidos.length",{"_index":484,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["pedidos.push(nuevopedido",{"_index":491,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["pedidoscomponent",{"_index":195,"title":{"components/PedidosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["perfil",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["perfil'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["perfil.component.html",{"_index":965,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.scss",{"_index":964,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts",{"_index":962,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["perfil.component.ts:108",{"_index":976,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:19",{"_index":989,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:21",{"_index":988,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:23",{"_index":971,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:38",{"_index":975,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:58",{"_index":973,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:74",{"_index":980,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:82",{"_index":978,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil/modificar",{"_index":961,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["perfilform",{"_index":967,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["permite",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permitiendo",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["pero",{"_index":1310,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1008,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["personalizadas",{"_index":1299,"title":{},"body":{"index.html":{}}}],["personalizado",{"_index":885,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["peticiones",{"_index":767,"title":{},"body":{"injectables/JsonService.html":{}}}],["pipe",{"_index":1101,"title":{},"body":{"injectables/ProductosService.html":{}}}],["plataforma",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["platform_id",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["platformid",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["popperjs/core",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":499,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["precio",{"_index":465,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["prepara",{"_index":895,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["primary",{"_index":1074,"title":{},"body":{"components/PedidosComponent.html":{}}}],["principal",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["procesa",{"_index":448,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["procesado",{"_index":494,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["procesar",{"_index":497,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["procesarpago",{"_index":437,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["proceso",{"_index":1108,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["product",{"_index":522,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["product.id",{"_index":527,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["productid",{"_index":453,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["production",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producto",{"_index":454,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["producto.cantidad",{"_index":1060,"title":{},"body":{"components/PedidosComponent.html":{}}}],["producto.categoria",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.descripcion",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.nombre",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{},"components/PedidosComponent.html":{}}}],["producto.precio",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["productos",{"_index":490,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{}}}],["productosfiltrados",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["productosservice",{"_index":658,"title":{"injectables/ProductosService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/ProductosService.html":{},"coverage.html":{}}}],["profile",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["promise((resolve",{"_index":622,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["properties",{"_index":43,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"properties.html":{}}}],["proporciona",{"_index":1270,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["proporcionada",{"_index":740,"title":{},"body":{"injectables/JsonService.html":{}}}],["proporcionadas",{"_index":1319,"title":{},"body":{"index.html":{}}}],["proporcionado",{"_index":1116,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["proporcionar",{"_index":1262,"title":{},"body":{"index.html":{}}}],["propósito",{"_index":1274,"title":{},"body":{"index.html":{}}}],["provideclienthydration",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["providehttpclient(withfetch",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1301,"title":{},"body":{"index.html":{}}}],["puede",{"_index":928,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["puedes",{"_index":1296,"title":{},"body":{"index.html":{}}}],["página",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{},"components/PedidosComponent.html":{}}}],["quantity",{"_index":513,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["que",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["quieres",{"_index":931,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["reactiveformsmodule",{"_index":551,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reactivo",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reactivos",{"_index":564,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["realiza",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["realizados",{"_index":1053,"title":{},"body":{"components/PedidosComponent.html":{}}}],["realizar",{"_index":480,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["recupera",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["recuperación",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["recuperar",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["recuperarpassword",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["recuperarpassword(email",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["recuperarpasswordcomponent",{"_index":197,"title":{"components/RecuperarPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["redirigir",{"_index":1043,"title":{},"body":{"components/PedidosComponent.html":{}}}],["registra",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["registrado",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["registrarme",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["registrarme.component.html",{"_index":1147,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarme.component.scss",{"_index":1146,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarmecomponent",{"_index":200,"title":{"components/RegistrarmeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["registrarse",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["registrarte",{"_index":1170,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarusuario",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrarusuario(nuevousuario",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["registro",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["registroform",{"_index":1148,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["regístrate",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["reject",{"_index":623,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["reject(err",{"_index":642,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["rellena",{"_index":1308,"title":{},"body":{"index.html":{}}}],["removecartitem",{"_index":438,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{}}}],["removecartitem(productid",{"_index":450,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["renderizado",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendimiento",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repetir",{"_index":1026,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["repetirpassword",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["repetirpassword.seterrors",{"_index":1159,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["repetirpassword.value",{"_index":1158,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["repetirpassword?.seterrors(null",{"_index":1160,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["requerida",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["requerido",{"_index":599,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reservados",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve",{"_index":639,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["response",{"_index":805,"title":{},"body":{"injectables/JsonService.html":{}}}],["respuesta",{"_index":1312,"title":{},"body":{"index.html":{}}}],["restricción",{"_index":1276,"title":{},"body":{"index.html":{}}}],["result.categorias",{"_index":1103,"title":{},"body":{"injectables/ProductosService.html":{}}}],["result.productos",{"_index":1104,"title":{},"body":{"injectables/ProductosService.html":{}}}],["results",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorno",{"_index":1281,"title":{},"body":{"index.html":{}}}],["return",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["returns",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rgba(0",{"_index":954,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{}}}],["rol",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["root",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["root'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["router",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["routerlink",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["routerlinkactive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ruta",{"_index":1097,"title":{},"body":{"injectables/ProductosService.html":{}}}],["rutas",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["s",{"_index":1260,"title":{},"body":{"index.html":{}}}],["san",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["se",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["sea",{"_index":1099,"title":{},"body":{"injectables/ProductosService.html":{},"index.html":{}}}],["secciones",{"_index":1298,"title":{},"body":{"index.html":{}}}],["seguro",{"_index":930,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["según",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["seleccionada",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["ser",{"_index":607,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["server",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["server.ts",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/auth.service",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["services/cart.service",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{}}}],["services/data",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["services/json.service",{"_index":463,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/PedidosComponent.html":{}}}],["services/productos.service",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["servicio",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["servicios",{"_index":1292,"title":{},"body":{"index.html":{}}}],["servidor",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sesionusuario",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sesionusuario.email",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sesión",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/LoginComponent.html":{},"components/PedidosComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["shadow",{"_index":1069,"title":{},"body":{"components/PedidosComponent.html":{}}}],["si",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["sido",{"_index":574,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["significado",{"_index":1282,"title":{},"body":{"index.html":{}}}],["simula",{"_index":1311,"title":{},"body":{"index.html":{}}}],["sin",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sobre",{"_index":1272,"title":{},"body":{"index.html":{}}}],["sobrescribe",{"_index":738,"title":{},"body":{"injectables/JsonService.html":{}}}],["sobrescribimos",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sobrescribir",{"_index":809,"title":{},"body":{"injectables/JsonService.html":{}}}],["sobrescrito",{"_index":807,"title":{},"body":{"injectables/JsonService.html":{}}}],["sola",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solicitudes",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solo",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["son",{"_index":986,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["space",{"_index":1085,"title":{},"body":{"components/PedidosComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:29",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/cart/cart.component.ts",{"_index":427,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"coverage.html":{}}}],["src/app/components/cart/cart.component.ts:38",{"_index":461,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:40",{"_index":441,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:54",{"_index":446,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:59",{"_index":444,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:68",{"_index":457,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:77",{"_index":451,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:83",{"_index":460,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:90",{"_index":447,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts",{"_index":549,"title":{},"body":{"components/ContactoComponent.html":{},"coverage.html":{}}}],["src/app/components/contacto/contacto.component.ts:18",{"_index":572,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:20",{"_index":561,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:31",{"_index":565,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:44",{"_index":568,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:58",{"_index":577,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:43",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:53",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:74",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:83",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:95",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/manager",{"_index":859,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["src/app/components/modificar",{"_index":960,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/pedidos/pedidos.component.ts",{"_index":1027,"title":{},"body":{"components/PedidosComponent.html":{},"coverage.html":{}}}],["src/app/components/pedidos/pedidos.component.ts:15",{"_index":1035,"title":{},"body":{"components/PedidosComponent.html":{}}}],["src/app/components/pedidos/pedidos.component.ts:16",{"_index":1036,"title":{},"body":{"components/PedidosComponent.html":{}}}],["src/app/components/pedidos/pedidos.component.ts:17",{"_index":1034,"title":{},"body":{"components/PedidosComponent.html":{}}}],["src/app/components/pedidos/pedidos.component.ts:18",{"_index":1031,"title":{},"body":{"components/PedidosComponent.html":{}}}],["src/app/components/pedidos/pedidos.component.ts:26",{"_index":1033,"title":{},"body":{"components/PedidosComponent.html":{}}}],["src/app/components/pedidos/pedidos.component.ts:41",{"_index":1032,"title":{},"body":{"components/PedidosComponent.html":{}}}],["src/app/components/recuperar",{"_index":1105,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/registrarme/registrarme.component.ts",{"_index":1145,"title":{},"body":{"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:20",{"_index":1149,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:37",{"_index":1151,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:53",{"_index":1153,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:71",{"_index":1150,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:85",{"_index":1152,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:112",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:123",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:133",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:180",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:219",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:263",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:297",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:333",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:342",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:373",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:62",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:70",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:80",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/cart.service.ts",{"_index":507,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/services/cart.service.ts:109",{"_index":546,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:121",{"_index":543,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:128",{"_index":542,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:28",{"_index":548,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:30",{"_index":540,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:47",{"_index":544,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:59",{"_index":547,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:75",{"_index":545,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:88",{"_index":541,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/data",{"_index":615,"title":{},"body":{"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["src/app/services/json.service.ts",{"_index":708,"title":{},"body":{"injectables/JsonService.html":{},"coverage.html":{}}}],["src/app/services/json.service.ts:101",{"_index":746,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:11",{"_index":752,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:115",{"_index":735,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:122",{"_index":749,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:129",{"_index":743,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:136",{"_index":733,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:15",{"_index":764,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:24",{"_index":790,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:29",{"_index":780,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:38",{"_index":794,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:43",{"_index":786,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:52",{"_index":796,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:57",{"_index":774,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:66",{"_index":728,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:73",{"_index":730,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:80",{"_index":737,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:94",{"_index":734,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/productos.service.ts",{"_index":1092,"title":{},"body":{"injectables/ProductosService.html":{},"coverage.html":{}}}],["src/app/services/productos.service.ts:11",{"_index":1095,"title":{},"body":{"injectables/ProductosService.html":{}}}],["src/app/services/productos.service.ts:8",{"_index":1094,"title":{},"body":{"injectables/ProductosService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["started",{"_index":1244,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/PedidosComponent.html":{},"interfaces/Usuario.html":{}}}],["structure",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{}}}],["styles",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["styleurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["suave",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["submitted",{"_index":555,"title":{},"body":{"components/ContactoComponent.html":{}}}],["subscribe",{"_index":627,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["subscription",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["subtotal",{"_index":502,"title":{},"body":{"components/CartComponent.html":{}}}],["success",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["sum",{"_index":476,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["sumativa",{"_index":788,"title":{},"body":{"injectables/JsonService.html":{},"index.html":{}}}],["suscribiéndose",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["suscripción",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["switchmap",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["switchmap(usuarios",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["t",{"_index":1251,"title":{},"body":{"index.html":{}}}],["table",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["tarde",{"_index":1051,"title":{},"body":{"components/PedidosComponent.html":{}}}],["tem",{"_index":452,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["tems",{"_index":445,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["tener",{"_index":601,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.apiurl}/v0/b/fsii",{"_index":787,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.authservice.actualizarcontraseña(newpassword).subscribe",{"_index":1014,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.actualizarperfil(datosactualizados).subscribe",{"_index":1004,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.actualizarusuario(updateduser).subscribe",{"_index":921,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.eliminarusuario(usuario.email).subscribe",{"_index":933,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.esadministrador",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.generartokenrecuperacion(email).subscribe",{"_index":1133,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.authservice.getusuarioactual",{"_index":478,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{}}}],["this.authservice.getusuarioactualobservable().subscribe(usuario",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getusuarios().subscribe",{"_index":911,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.login(email",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.recuperarpassword(email",{"_index":1139,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.authservice.registrarusuario(nuevousuario).subscribe",{"_index":1163,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.cargando",{"_index":1041,"title":{},"body":{"components/PedidosComponent.html":{}}}],["this.cargarpedidos",{"_index":1037,"title":{},"body":{"components/PedidosComponent.html":{}}}],["this.cargarsesion",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.cartitemcount",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.cartitemcount.asobservable",{"_index":534,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.cartitemcount.next(0",{"_index":538,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.cartitemcount.next(count",{"_index":532,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.cartitems",{"_index":468,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartitems.reduce((sum",{"_index":475,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.addtocart(product",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cartservice.clearcart",{"_index":495,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.getcartitemcount().subscribe(count",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.cartservice.getcartitems",{"_index":469,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.removecartitem(productid",{"_index":473,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.updatecartitemquantity(item.id",{"_index":471,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.categorias",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoriaseleccionada",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.closemodal",{"_index":923,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.contactform",{"_index":584,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.controls",{"_index":598,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.reset",{"_index":597,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.valid",{"_index":595,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.datainitservice.initializedata().then",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.edadminimavalidator",{"_index":910,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.editform",{"_index":907,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.patchvalue(usuario",{"_index":916,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.reset",{"_index":935,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.valid",{"_index":918,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.value",{"_index":920,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editinguser",{"_index":915,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.emailform",{"_index":1123,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.get('email')?.value",{"_index":1132,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.markallastouched",{"_index":1137,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.valid",{"_index":1131,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.error",{"_index":1038,"title":{},"body":{"components/PedidosComponent.html":{}}}],["this.fb.group",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.filterproducts(0",{"_index":690,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterproducts(categoryid",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formbuilder.group",{"_index":585,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.getcartitems",{"_index":515,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.getusuarioactual",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.http.get(this.jsoncategoriasurl",{"_index":800,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.get(this.jsonpedidosurl",{"_index":820,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.get(this.jsonproductosurl",{"_index":810,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.get(this.jsonusuariosurl",{"_index":815,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.post(this.jsoncategoriasurl",{"_index":803,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.post(this.jsonpedidosurl",{"_index":818,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.post(this.jsonproductosurl",{"_index":813,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.post(this.jsonusuariosurl",{"_index":816,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.httpoptionscategorias).subscribe",{"_index":804,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.httpoptionspedidos",{"_index":819,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.httpoptionsproductos).subscribe",{"_index":814,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.httpoptionsusuarios",{"_index":817,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.initform",{"_index":906,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.isbrowser",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["this.ismodalopen",{"_index":917,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.jsonservice.getjsoncategoriasdata",{"_index":625,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["this.jsonservice.getjsonpedidosdata().subscribe",{"_index":482,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/PedidosComponent.html":{}}}],["this.jsonservice.getjsonproductosdata",{"_index":626,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["this.jsonservice.getjsonusuariosdata",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["this.jsonservice.getjsonusuariosdata().pipe",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.jsonservice.metodopedidos(pedidos).subscribe",{"_index":492,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.jsonservice.metodousuarios(usuarios).pipe",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.jsonservice.metodousuarios(usuariosactualizados).pipe",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.loadcartitems",{"_index":467,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.loaddata",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.loadusers",{"_index":905,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.loginform",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordform",{"_index":994,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.get('newpassword')?.value",{"_index":1013,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.get('token')?.value",{"_index":1138,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.reset",{"_index":1016,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.passwordform.valid",{"_index":1012,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":999,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.pedidos",{"_index":1045,"title":{},"body":{"components/PedidosComponent.html":{}}}],["this.perfilform",{"_index":990,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.perfilform.valid",{"_index":1002,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.perfilform.value",{"_index":1003,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.productos",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productos.filter(producto",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productosfiltrados",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productosservice.getdata().subscribe",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.registroform",{"_index":1154,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.registroform.valid",{"_index":1161,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.registroform.value",{"_index":1162,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.router.navigate",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1044,"title":{},"body":{"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.router.navigate(['/pedidos",{"_index":496,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.submitted",{"_index":594,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.total",{"_index":474,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.updatecartitemcount",{"_index":510,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.updatetotal",{"_index":470,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.usersubscription",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usersubscription.unsubscribe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usuarioactual",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{}}}],["this.usuarioactual.asobservable",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.email",{"_index":1048,"title":{},"body":{"components/PedidosComponent.html":{}}}],["this.usuarioactual.next(null",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(sesionusuario",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(usuarioactualizado",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(usuariosincontraseña",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.value",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.value?.rol",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual?.celular",{"_index":992,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual?.fechanacimiento",{"_index":993,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual?.nombre",{"_index":991,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarios",{"_index":912,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["throwerror",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["tienes",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{},"components/PedidosComponent.html":{}}}],["tipo",{"_index":1273,"title":{},"body":{"index.html":{}}}],["title",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["todas",{"_index":732,"title":{},"body":{"injectables/JsonService.html":{}}}],["todo",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["todos",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["token",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["token.tostring",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["total",{"_index":435,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/PedidosComponent.html":{}}}],["trae",{"_index":731,"title":{},"body":{"injectables/JsonService.html":{}}}],["transform",{"_index":1063,"title":{},"body":{"components/PedidosComponent.html":{}}}],["transición",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition",{"_index":1062,"title":{},"body":{"components/PedidosComponent.html":{}}}],["translatey",{"_index":1066,"title":{},"body":{"components/PedidosComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":1258,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{}}}],["tus",{"_index":1040,"title":{},"body":{"components/PedidosComponent.html":{},"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1294,"title":{},"body":{"index.html":{}}}],["título",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["u",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["u.email",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["u.token",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["un",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["una",{"_index":608,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["unitario",{"_index":466,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updatecartitemcount",{"_index":530,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["updatecartitemquantity",{"_index":439,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{}}}],["updatecartitemquantity(item",{"_index":455,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updatecartitemquantity(productid",{"_index":514,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["updateduser",{"_index":919,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["updateselectedcategory",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["updateselectedcategory(categoryid",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatetotal",{"_index":440,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updating",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["url",{"_index":791,"title":{},"body":{"injectables/JsonService.html":{}}}],["usagenotes",{"_index":1284,"title":{},"body":{"index.html":{}}}],["usar",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":924,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users",{"_index":863,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["users.component.html",{"_index":865,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.scss",{"_index":864,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts",{"_index":861,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:119",{"_index":880,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:146",{"_index":876,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:157",{"_index":883,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:19",{"_index":904,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:21",{"_index":901,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:23",{"_index":902,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:25",{"_index":875,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:40",{"_index":899,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:48",{"_index":897,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:61",{"_index":898,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:77",{"_index":894,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:86",{"_index":900,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users/manager",{"_index":860,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["usersubscription",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["uso",{"_index":1286,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":79,"title":{"interfaces/Usuario.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"index.html":{}}}],["usuario.celular",{"_index":945,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.email",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["usuario.fechanacimiento",{"_index":946,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.nombre",{"_index":932,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.password",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuario.rol",{"_index":926,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.token",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioactual",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"interfaces/Usuario.html":{}}}],["usuarioactual.email",{"_index":489,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["usuarioactualizado",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioactualizado.repetirpassword",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.celular",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.email",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.fechanacimiento",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.nombre",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.rol",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioexistente",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioindex",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioparaguardar",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["usuarios.find",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.find((u",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.findindex((u",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.map((u",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.push(usuarioparaguardar",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.splice(index",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios[index",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios[usuarioindex",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuariosactualizados",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuariosincontraseña",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["utiliza",{"_index":1166,"title":{},"body":{"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["validador",{"_index":884,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validar",{"_index":889,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validationerrors",{"_index":974,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators",{"_index":582,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.email",{"_index":588,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.minlength(10",{"_index":593,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.minlength(2",{"_index":587,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.pattern('^[0",{"_index":909,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.pattern(/^(?=.*\\d)(?=.*[a",{"_index":995,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.pattern(/^[0",{"_index":589,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.required",{"_index":586,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["valor",{"_index":1280,"title":{},"body":{"index.html":{}}}],["value",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/PedidosComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["variable",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1329,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":1039,"title":{},"body":{"components/PedidosComponent.html":{}}}],["verdadero",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["verifica",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["verificar",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["version",{"_index":1327,"title":{},"body":{"properties.html":{}}}],["visibilidad",{"_index":903,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/PedidosComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{}}}],["válida",{"_index":609,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["válido",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["válidos",{"_index":1143,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["weight",{"_index":1078,"title":{},"body":{"components/PedidosComponent.html":{}}}],["xito",{"_index":1006,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["y",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["z])(?=.*[!@#$%^&*]).{6,15",{"_index":997,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["z])(?=.*[a",{"_index":996,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["zone.js",{"_index":1232,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\nContiene la barra de navegación, el router outlet y el footer.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            RouterModule\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItemCount\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                userSubscription\n                            \n                            \n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                esAdministrador\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService, authService: AuthService, dataInitService: DataInitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar el carrito\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        dataInitService\n                                                  \n                                                        \n                                                                        DataInitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de inicialización de datos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        esAdministrador\n                        \n                    \n                \n            \n            \n                \nesAdministrador()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Método para verificar si el usuario es administrador\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el usuario es administrador, falso en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Método para cerrar sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Contador de items en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'albavets'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Título de la aplicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    Suscripción al observable del usuario actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:35\n                        \n                    \n\n            \n                \n                    Usuario actualmente logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterLink, RouterModule, RouterOutlet, RouterLinkActive } from '@angular/router';\nimport { CartService } from './services/cart.service';\nimport { AuthService } from './services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { DataInitializationService } from './services/data-initialization.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * @description \n * Componente principal de la aplicación.\n * Contiene la barra de navegación, el router outlet y el footer.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    RouterLink,\n    RouterModule,\n    RouterLinkActive\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  /** Título de la aplicación */\n  title = 'albavets';\n\n  /** Contador de items en el carrito */\n  cartItemCount: number = 0;\n\n  /** Usuario actualmente logueado */\n  usuarioActual: any = null;\n\n  /** Suscripción al observable del usuario actual */\n  private userSubscription: Subscription | undefined;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar el carrito\n   * @param authService Servicio de autenticación\n   * @param dataInitService Servicio de inicialización de datos\n   */\n  constructor(\n    private cartService: CartService,\n    private authService: AuthService,\n    private dataInitService: DataInitializationService\n  ) {}\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.dataInitService.initializeData().then(() => {\n      this.cartService.getCartItemCount().subscribe(count => {\n        this.cartItemCount = count;\n      });\n      \n      this.userSubscription = this.authService.getUsuarioActualObservable().subscribe(usuario => {\n        this.usuarioActual = usuario;\n      });\n    });\n  }\n\n  /** Método que se ejecuta al destruir el componente */\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n\n  /** Método para cerrar sesión */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Método para verificar si el usuario es administrador\n   * @returns {boolean} Verdadero si el usuario es administrador, falso en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.authService.esAdministrador();\n  }\n}\n\n    \n\n    \n        \n\n    \n        AlbaVets\n        \n            \n        \n        \n            \n                \n                    Inicio\n                \n                \n                    Contacto\n                \n            \n            \n                \n                    \n                         {{ cartItemCount\n                            }}\n                    \n                \n                \n                    \n                         Mi cuenta\n                    \n                    \n                        \n                            \n                                Administrar usuarios\n                            \n                            \n                                Pedidos\n                                                        \n                            \n                                Modificar mi perfil\n                            \n                            \n                                Cerrar sesión\n                            \n                        \n                        \n                            Iniciar sesión\n                            Registrarse\n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n        \n            \n                AlbaVets\n                Dirección: Calle san francisco javier #6412, San Felipe\n                Celular: +569 9876 5432\n                Email: contacto&#64;albavets.cl\n            \n            \n                Enlaces\n                \n                    Inicio\n                    Contacto\n                \n            \n        \n        \n        \n            &copy; 2024 AlbaVets. Todos los derechos reservados.\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            AlbaVets                                                                                    Inicio                                                    Contacto                                                                                                     {{ cartItemCount                            }}                                                                                                 Mi cuenta                                                                                                                            Administrar usuarios                                                                                        Pedidos                                                                                                                    Modificar mi perfil                                                                                        Cerrar sesión                                                                                                        Iniciar sesión                            Registrarse                                                                                                                            AlbaVets                Dirección: Calle san francisco javier #6412, San Felipe                Celular: +569 9876 5432                Email: contacto@albavets.cl                                        Enlaces                                    Inicio                    Contacto                                                                © 2024 AlbaVets. Todos los derechos reservados.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar la autenticación y gestión de usuarios\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                    Private\n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarContraseña\n                            \n                            \n                                actualizarPerfil\n                            \n                            \n                                actualizarUsuario\n                            \n                            \n                                cargarSesion\n                            \n                            \n                                eliminarUsuario\n                            \n                            \n                                esAdministrador\n                            \n                            \n                                generarTokenRecuperacion\n                            \n                            \n                                getUsuarioActual\n                            \n                            \n                                getUsuarioActualObservable\n                            \n                            \n                                getUsuarios\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                recuperarPassword\n                            \n                            \n                                registrarUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object, jsonService: JsonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID de la plataforma para determinar si es un navegador\n\n                                                        \n                                                \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarContraseña\n                        \n                    \n                \n            \n            \n                \nactualizarContraseña(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:297\n                        \n                    \n\n\n            \n                \n                        Actualiza la contraseña del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarPerfil\n                        \n                    \n                \n            \n            \n                \nactualizarPerfil(datosActualizados: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:263\n                        \n                    \n\n\n            \n                \n                        Actualiza el perfil del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datosActualizados\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevos datos del perfil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarUsuario\n                        \n                    \n                \n            \n            \n                \nactualizarUsuario(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:342\n                        \n                    \n\n\n            \n                \n                        Actualiza los datos de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos actualizados del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarSesion\n                        \n                    \n                \n            \n            \n                \ncargarSesion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Carga la sesión del usuario desde el almacenamiento local\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarUsuario\n                        \n                    \n                \n            \n            \n                \neliminarUsuario(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:373\n                        \n                    \n\n\n            \n                \n                        elimina un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la eliminación es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esAdministrador\n                        \n                    \n                \n            \n            \n                \nesAdministrador()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario actual es administrador\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario es administrador, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generarTokenRecuperacion\n                        \n                    \n                \n            \n            \n                \ngenerarTokenRecuperacion(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:180\n                        \n                    \n\n\n            \n                \n                        Genera un token de recuperación para un email dado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                El token generado o null si el email no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarioActual\n                        \n                    \n                \n            \n            \n                \ngetUsuarioActual()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                El usuario actual o null si no hay sesión\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarioActualObservable\n                        \n                    \n                \n            \n            \n                \ngetUsuarioActualObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Obtiene un Observable del usuario actual\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable del usuario actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarios\n                        \n                    \n                \n            \n            \n                \ngetUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:333\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de todos los usuarios\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Array de usuarios\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Realiza el inicio de sesión de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contraseña del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si el login es exitoso, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recuperarPassword\n                        \n                    \n                \n            \n            \n                \nrecuperarPassword(email: string, token: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:219\n                        \n                    \n\n\n            \n                \n                        Recupera la contraseña de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperación\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la recuperación es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrarUsuario\n                        \n                    \n                \n            \n            \n                \nregistrarUsuario(nuevoUsuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nuevoUsuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos del nuevo usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si el registro es exitoso, false si el usuario ya existe\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:34\n                        \n                    \n\n            \n                \n                    Indica si el código se está ejecutando en un navegador\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n            \n                \n                    BehaviorSubject para manejar el usuario actual\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { isPlatformBrowser, } from '@angular/common';\nimport { JsonService } from './json.service';\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\n\n/**\n * Interfaz que define la estructura de un usuario\n */\ninterface Usuario {\n  /** Email del usuario */\n  email: string;\n  /** Nombre del usuario */\n  nombre: string;\n  /** Celular del usuario */\n  celular: string;\n  /** Fecha de nacimiento del usuario */\n  fechaNacimiento: string;\n  /** Rol del usuario */\n  rol: string;\n}\n\n/**\n * @description\n * Servicio para manejar la autenticación y gestión de usuarios\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /** BehaviorSubject para manejar el usuario actual */\n  private usuarioActual = new BehaviorSubject(null);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(\n    @Inject(PLATFORM_ID) platformId: Object,\n    private jsonService: JsonService\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.cargarSesion();\n  }\n\n  /**\n   * Carga la sesión del usuario desde el almacenamiento local\n   */\n  cargarSesion() {\n    if (this.isBrowser) {\n      const sesionUsuario = JSON.parse(localStorage.getItem('sesionUsuario') || 'null');\n      this.usuarioActual.next(sesionUsuario);\n    }\n  }\n\n  /**\n   * Obtiene el usuario actual\n   * @returns El usuario actual o null si no hay sesión\n   */\n  getUsuarioActual(): any {\n    return this.usuarioActual.value;\n  }\n\n  /**\n   * Obtiene un Observable del usuario actual\n   * @returns Observable del usuario actual\n   */\n  getUsuarioActualObservable(): Observable {\n    return this.usuarioActual.asObservable();\n  }\n\n  /**\n   * Realiza el inicio de sesión de un usuario\n   * @param email Email del usuario\n   * @param password Contraseña del usuario\n   * @returns true si el login es exitoso, false en caso contrario\n   */\n  login(email: string, password: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      map(usuarios => {\n        const usuarioEncontrado = usuarios.find(\n          (usuario: any) => usuario.email === email && usuario.password === password\n        );\n        if (usuarioEncontrado) {\n          const usuarioSinContraseña: Usuario = {\n            email: usuarioEncontrado.email,\n            nombre: usuarioEncontrado.nombre,\n            celular: usuarioEncontrado.celular,\n            fechaNacimiento: usuarioEncontrado.fechaNacimiento,\n            rol: usuarioEncontrado.rol,\n          };\n          if (this.isBrowser) {\n            localStorage.setItem('sesionUsuario', JSON.stringify(usuarioSinContraseña));\n          }\n          this.usuarioActual.next(usuarioSinContraseña);\n          return true;\n        }\n        return false;\n      }),\n      catchError(error => {\n        console.error('Error during login:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout() {\n    if (this.isBrowser) {\n      localStorage.removeItem('sesionUsuario');\n    }\n    this.usuarioActual.next(null);\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   * @returns true si el usuario es administrador, false en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.usuarioActual.value?.rol === 'administrador';\n  }\n\n\n  /**\n   * Registra un nuevo usuario\n   * @param nuevoUsuario Datos del nuevo usuario\n   * @returns true si el registro es exitoso, false si el usuario ya existe\n   */\n  registrarUsuario(nuevoUsuario: any): Observable {\n    console.log('Iniciando registro de usuario:', nuevoUsuario);\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        console.log('Usuarios obtenidos:', usuarios);\n        const usuarioExistente = usuarios.find((u: any) => u.email === nuevoUsuario.email);\n        if (usuarioExistente) {\n          console.log('Usuario ya existe:', nuevoUsuario.email);\n          return of(false);\n        }\n        console.log('Añadiendo nuevo usuario a la lista');\n        \n        // Creamos un nuevo objeto de usuario sin el campo repetirPassword\n        const usuarioParaGuardar = {\n          email: nuevoUsuario.email,\n          nombre: nuevoUsuario.nombre,\n          celular: nuevoUsuario.celular,\n          fechaNacimiento: nuevoUsuario.fechaNacimiento,\n          password: nuevoUsuario.password,\n          rol: nuevoUsuario.rol,\n          token: nuevoUsuario.token\n        };\n  \n        usuarios.push(usuarioParaGuardar);\n        return this.jsonService.MetodoUsuarios(usuarios).pipe(\n          map(() => {\n            console.log('Usuario registrado exitosamente');\n            return true;\n          }),\n          catchError(error => {\n            console.error('Error al guardar usuario en Firebase:', error);\n            return of(false);\n          })\n        );\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Genera un token de recuperación para un email dado\n   * @param email Email del usuario\n   * @returns El token generado o null si el email no existe\n   */\n  generarTokenRecuperacion(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email);\n        if (usuario) {\n          const token = Math.floor(Math.random() * 900000) + 100000;\n          usuario.token = token.toString();\n          console.log('Usuario actualizado:', usuario);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuario : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => token.toString()),\n            catchError(error => {\n              console.error('Error al guardar el token en Firebase:', error);\n              return of(null);\n            })\n          );\n        }\n        return of(null);\n      }),\n      catchError(error => {\n        console.error('Error al generar el token de recuperación:', error);\n        return of(null);\n      })\n    );\n  }\n\n  /**\n   * Recupera la contraseña de un usuario\n   * @param email Email del usuario\n   * @param token Token de recuperación\n   * @param newPassword Nueva contraseña\n   * @returns true si la recuperación es exitosa, false en caso contrario\n   */\n  recuperarPassword(email: string, token: string, newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email && u.token === token);\n        if (usuario) {\n          // Actualizamos solo los campos necesarios\n          const usuarioActualizado = {\n            ...usuario,\n            password: newPassword,\n            token: ''\n          };\n          // Eliminamos el campo repetirPassword si existe\n          delete usuarioActualizado.repetirPassword;\n\n          console.log('Usuario actualizado:', usuarioActualizado);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuarioActualizado : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => true),\n            catchError(error => {\n              console.error('Error al guardar la nueva contraseña en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al recuperar la contraseña:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   * @param datosActualizados Nuevos datos del perfil\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarPerfil(datosActualizados: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = { ...usuarios[usuarioIndex], ...datosActualizados };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              tap(() => {\n                const usuarioActualizado = { ...sesionUsuario, ...datosActualizados };\n                if (this.isBrowser) {\n                  localStorage.setItem('sesionUsuario', JSON.stringify(usuarioActualizado));\n                }\n                this.usuarioActual.next(usuarioActualizado);\n              }),\n              map(() => true)\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error updating profile:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza la contraseña del usuario actual\n   * @param newPassword Nueva contraseña\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarContraseña(newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = {\n              ...usuarios[usuarioIndex],\n              password: newPassword\n            };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              map(() => {\n                console.log('Contraseña actualizada correctamente');\n                return true;\n              }),\n              catchError(error => {\n                console.error('Error al actualizar la contraseña en Firebase:', error);\n                return of(false);\n              })\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de todos los usuarios\n   * @returns Array de usuarios\n   */\n  getUsuarios(): Observable {\n    return this.jsonService.getJsonUsuariosData();\n  }\n\n  /**\n   * Actualiza los datos de un usuario\n   * @param usuario Datos actualizados del usuario\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarUsuario(usuario: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === usuario.email);\n        if (index !== -1) {\n          usuarios[index] = { ...usuarios[index], ...usuario };\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario actualizado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al actualizar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * elimina un usuario\n   * @param email Email del usuario a eliminar\n   * @returns true si la eliminación es exitosa, false en caso contrario\n   */\n  eliminarUsuario(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === email);\n        if (index !== -1) {\n          usuarios.splice(index, 1);\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario eliminado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al eliminar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }  \n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart/cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar la funcionalidad del carrito de compras\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCartItems\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                procesarPago\n                            \n                            \n                                removeCartItem\n                            \n                            \n                                updateCartItemQuantity\n                            \n                            \n                                    Private\n                                updateTotal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService, jsonService: JsonService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart/cart.component.ts:40\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar las operaciones del carrito\n\n                                                        \n                                                \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCartItems\n                        \n                    \n                \n            \n            \n                \nloadCartItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Carga los ítems del carrito desde el servicio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        procesarPago\n                        \n                    \n                \n            \n            \n                \nprocesarPago()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Procesa el pago del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCartItem\n                        \n                    \n                \n            \n            \n                \nremoveCartItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Elimina un ítem del carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCartItemQuantity\n                        \n                    \n                \n            \n            \n                \nupdateCartItemQuantity(item: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Actualiza la cantidad de un ítem en el carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ítem del carrito a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateTotal\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Actualiza el total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:38\n                        \n                    \n\n            \n                \n                    Array que contiene los ítems del carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:40\n                        \n                    \n\n            \n                \n                    Total del carrito\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../services/cart.service';\nimport { JsonService } from '../../services/json.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n/**  \n * Interfaz que define la estructura de un ítem del carrito \n */\ninterface CartItem {\n  /** ID único del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio unitario del producto */\n  precio: number;\n   /** Cantidad del producto en el carrito */\n  cantidad: number;\n}\n\n\n/**\n * @description \n * Componente para manejar la funcionalidad del carrito de compras\n */\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\n\nexport class CartComponent implements OnInit {\n  /** Array que contiene los ítems del carrito */\n  cartItems: CartItem[] = [];\n  /** Total del carrito */\n  total: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar las operaciones del carrito\n   */\n  constructor(\n    private cartService: CartService,\n    private jsonService: JsonService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.loadCartItems();\n  }\n\n  /** Carga los ítems del carrito desde el servicio */\n  loadCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n    this.updateTotal();\n  }\n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param item El ítem del carrito a actualizar\n   */\n  updateCartItemQuantity(item: CartItem) {\n    this.cartService.updateCartItemQuantity(item.id, item.cantidad);\n    this.updateTotal();\n  }\n\n  /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    this.cartService.removeCartItem(productId);\n    this.loadCartItems();\n  }\n\n  /** Actualiza el total del carrito */\n  private updateTotal() {\n    this.total = this.cartItems.reduce((sum, item) => sum + item.precio * item.cantidad, 0);\n  }\n\n  /**\n   * Procesa el pago del carrito\n   */\n  procesarPago() {\n    const usuarioActual = this.authService.getUsuarioActual();\n    if (!usuarioActual) {\n      alert('Debes iniciar sesión para realizar un pedido.');\n      return;\n    }\n\n    this.jsonService.getJsonPedidosData().subscribe(\n      (pedidos: any[]) => {\n        const nuevoId = pedidos.length > 0 ? Math.max(...pedidos.map(p => p.id)) + 1 : 1;\n        const nuevoPedido = {\n          id: nuevoId,\n          fecha: new Date().toISOString(),\n          usuario: usuarioActual.email,\n          productos: this.cartItems,\n          total: this.total\n        };\n\n        pedidos.push(nuevoPedido);\n        this.jsonService.MetodoPedidos(pedidos).subscribe(\n          () => {\n            alert('Pago procesado correctamente');\n            this.cartService.clearCart();\n            this.router.navigate(['/pedidos']);\n          },\n          error => {\n            console.error('Error al procesar el pago:', error);\n            alert('Hubo un error al procesar el pago. Por favor, intenta de nuevo.');\n          }\n        );\n      },\n      error => {\n        console.error('Error al obtener los pedidos:', error);\n        alert('Hubo un error al procesar el pago. Por favor, intenta de nuevo.');\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    Carrito de compras\n    \n        \n            \n                Producto\n                Precio\n                Cantidad\n                Subtotal\n                Acciones\n            \n        \n        \n            \n                {{ item.nombre }}\n                ${{ item.precio }}\n                \n                    \n                \n                ${{ item.precio * item.cantidad }}\n                \n                    Eliminar\n                \n            \n        \n    \n    \n        Total: ${{ total }}\n        \n            Pagar\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                        Producto                Precio                Cantidad                Subtotal                Acciones                                                        {{ item.nombre }}                ${{ item.precio }}                                                                    ${{ item.precio * item.cantidad }}                                    Eliminar                                                    Total: ${{ total }}                    Pagar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un ítem del carrito\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            precio\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidad:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cantidad de producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio del producto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un ítem del carrito\n */\ninterface CartItem {\n  /** ID del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio del producto */\n  precio: number;\n  /** Cantidad de producto */\n  cantidad: number;\n}\n\n/**\n * @description\n * Servicio para manejar las operaciones del carrito de compras\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  /** BehaviorSubject para manejar el contador de ítems en el carrito */\n  private cartItemCount = new BehaviorSubject(0);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Obtiene los ítems del carrito\n   * @returns Array de ítems del carrito\n   */\n  getCartItems(): CartItem[] {\n    if (this.isBrowser) {\n      return JSON.parse(localStorage.getItem('cart') || '[]');\n    }\n    return [];\n  }  \n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param productId ID del producto a actualizar\n   * @param quantity Nueva cantidad\n   */\n  updateCartItemQuantity(productId: number, quantity: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      const item = cart.find(item => item.id === productId);\n      if (item) {\n        item.cantidad = quantity;\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.updateCartItemCount();\n      }\n    }\n  }\n\n /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      cart = cart.filter(item => item.id !== productId);\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir\n   */\n  addToCart(product: any) {\n    if (this.isBrowser) {\n      let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n\n      const existingProduct = cart.find((item: any) => item.id === product.id);\n\n      if (existingProduct) {\n        existingProduct.cantidad++;\n      } else {\n        cart.push({ ...product, cantidad: 1 });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Actualiza el contador de ítems en el carrito\n   * @private\n   */\n  private updateCartItemCount() {\n    if (this.isBrowser) {\n      const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n      const count = cart.reduce((total: number, item: any) => total + item.cantidad, 0);\n      this.cartItemCount.next(count);\n    }\n  }\n\n  /**\n   * Obtiene un Observable del contador de ítems en el carrito\n   * @returns Observable del contador de ítems\n   */\n  getCartItemCount() {\n    return this.cartItemCount.asObservable();\n  }\n\n  /**\n   * Limpia el carrito\n   */\n  clearCart() {\n    if (this.isBrowser) {\n      localStorage.removeItem('cart');\n      this.cartItemCount.next(0);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem-1.html":{"url":"interfaces/CartItem-1.html","title":"interface - CartItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/cart/cart.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un ítem del carrito\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            precio\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidad:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cantidad del producto en el carrito\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio unitario del producto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../services/cart.service';\nimport { JsonService } from '../../services/json.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n/**  \n * Interfaz que define la estructura de un ítem del carrito \n */\ninterface CartItem {\n  /** ID único del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio unitario del producto */\n  precio: number;\n   /** Cantidad del producto en el carrito */\n  cantidad: number;\n}\n\n\n/**\n * @description \n * Componente para manejar la funcionalidad del carrito de compras\n */\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\n\nexport class CartComponent implements OnInit {\n  /** Array que contiene los ítems del carrito */\n  cartItems: CartItem[] = [];\n  /** Total del carrito */\n  total: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar las operaciones del carrito\n   */\n  constructor(\n    private cartService: CartService,\n    private jsonService: JsonService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.loadCartItems();\n  }\n\n  /** Carga los ítems del carrito desde el servicio */\n  loadCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n    this.updateTotal();\n  }\n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param item El ítem del carrito a actualizar\n   */\n  updateCartItemQuantity(item: CartItem) {\n    this.cartService.updateCartItemQuantity(item.id, item.cantidad);\n    this.updateTotal();\n  }\n\n  /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    this.cartService.removeCartItem(productId);\n    this.loadCartItems();\n  }\n\n  /** Actualiza el total del carrito */\n  private updateTotal() {\n    this.total = this.cartItems.reduce((sum, item) => sum + item.precio * item.cantidad, 0);\n  }\n\n  /**\n   * Procesa el pago del carrito\n   */\n  procesarPago() {\n    const usuarioActual = this.authService.getUsuarioActual();\n    if (!usuarioActual) {\n      alert('Debes iniciar sesión para realizar un pedido.');\n      return;\n    }\n\n    this.jsonService.getJsonPedidosData().subscribe(\n      (pedidos: any[]) => {\n        const nuevoId = pedidos.length > 0 ? Math.max(...pedidos.map(p => p.id)) + 1 : 1;\n        const nuevoPedido = {\n          id: nuevoId,\n          fecha: new Date().toISOString(),\n          usuario: usuarioActual.email,\n          productos: this.cartItems,\n          total: this.total\n        };\n\n        pedidos.push(nuevoPedido);\n        this.jsonService.MetodoPedidos(pedidos).subscribe(\n          () => {\n            alert('Pago procesado correctamente');\n            this.cartService.clearCart();\n            this.router.navigate(['/pedidos']);\n          },\n          error => {\n            console.error('Error al procesar el pago:', error);\n            alert('Hubo un error al procesar el pago. Por favor, intenta de nuevo.');\n          }\n        );\n      },\n      error => {\n        console.error('Error al obtener los pedidos:', error);\n        alert('Hubo un error al procesar el pago. Por favor, intenta de nuevo.');\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar las operaciones del carrito de compras\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cartItemCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                clearCart\n                            \n                            \n                                getCartItemCount\n                            \n                            \n                                getCartItems\n                            \n                            \n                                removeCartItem\n                            \n                            \n                                    Private\n                                updateCartItemCount\n                            \n                            \n                                updateCartItemQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cart.service.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID de la plataforma para determinar si es un navegador\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Añade un producto al carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Producto a añadir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Limpia el carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartItemCount\n                        \n                    \n                \n            \n            \n                \ngetCartItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Obtiene un Observable del contador de ítems en el carrito\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable del contador de ítems\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartItems\n                        \n                    \n                \n            \n            \n                \ngetCartItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Obtiene los ítems del carrito\n\n\n                        \n                            Returns :     CartItem[]\n\n                        \n                            \n                                Array de ítems del carrito\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCartItem\n                        \n                    \n                \n            \n            \n                \nremoveCartItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Elimina un ítem del carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCartItemCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCartItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Actualiza el contador de ítems en el carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCartItemQuantity\n                        \n                    \n                \n            \n            \n                \nupdateCartItemQuantity(productId: number, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Actualiza la cantidad de un ítem en el carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a actualizar\n\n                                            \n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva cantidad\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cart.service.ts:28\n                        \n                    \n\n            \n                \n                    BehaviorSubject para manejar el contador de ítems en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cart.service.ts:30\n                        \n                    \n\n            \n                \n                    Indica si el código se está ejecutando en un navegador\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un ítem del carrito\n */\ninterface CartItem {\n  /** ID del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio del producto */\n  precio: number;\n  /** Cantidad de producto */\n  cantidad: number;\n}\n\n/**\n * @description\n * Servicio para manejar las operaciones del carrito de compras\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  /** BehaviorSubject para manejar el contador de ítems en el carrito */\n  private cartItemCount = new BehaviorSubject(0);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Obtiene los ítems del carrito\n   * @returns Array de ítems del carrito\n   */\n  getCartItems(): CartItem[] {\n    if (this.isBrowser) {\n      return JSON.parse(localStorage.getItem('cart') || '[]');\n    }\n    return [];\n  }  \n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param productId ID del producto a actualizar\n   * @param quantity Nueva cantidad\n   */\n  updateCartItemQuantity(productId: number, quantity: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      const item = cart.find(item => item.id === productId);\n      if (item) {\n        item.cantidad = quantity;\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.updateCartItemCount();\n      }\n    }\n  }\n\n /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      cart = cart.filter(item => item.id !== productId);\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir\n   */\n  addToCart(product: any) {\n    if (this.isBrowser) {\n      let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n\n      const existingProduct = cart.find((item: any) => item.id === product.id);\n\n      if (existingProduct) {\n        existingProduct.cantidad++;\n      } else {\n        cart.push({ ...product, cantidad: 1 });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Actualiza el contador de ítems en el carrito\n   * @private\n   */\n  private updateCartItemCount() {\n    if (this.isBrowser) {\n      const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n      const count = cart.reduce((total: number, item: any) => total + item.cantidad, 0);\n      this.cartItemCount.next(count);\n    }\n  }\n\n  /**\n   * Obtiene un Observable del contador de ítems en el carrito\n   * @returns Observable del contador de ítems\n   */\n  getCartItemCount() {\n    return this.cartItemCount.asObservable();\n  }\n\n  /**\n   * Limpia el carrito\n   */\n  clearCart() {\n    if (this.isBrowser) {\n      localStorage.removeItem('cart');\n      this.cartItemCount.next(0);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactoComponent.html":{"url":"components/ContactoComponent.html","title":"component - ContactoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contacto/contacto.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el formulario de contacto\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacto\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./contacto.component.html\n            \n\n\n\n            \n                styleUrl\n                ./contacto.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contacto/contacto.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para construir formularios reactivos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contacto/contacto.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contacto/contacto.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contacto/contacto.component.ts:18\n                        \n                    \n\n            \n                \n                    Formulario de contacto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contacto/contacto.component.ts:20\n                        \n                    \n\n            \n                \n                    Indica si el formulario ha sido enviado\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/contacto/contacto.component.ts:58\n                                \n                            \n                    \n                        \n                                Getter para acceder fácilmente a los controles del formulario\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/**\n * @description\n * Componente para manejar el formulario de contacto\n */\n@Component({\n  selector: 'app-contacto',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './contacto.component.html',\n  styleUrl: './contacto.component.scss'\n})\nexport class ContactoComponent implements OnInit {\n  /** Formulario de contacto */\n  contactForm!: FormGroup;\n  /** Indica si el formulario ha sido enviado */\n  submitted = false;\n\n  /**\n   * Constructor del componente\n   * @param formBuilder Servicio para construir formularios reactivos\n   */\n  constructor(private formBuilder: FormBuilder) { }\n\n  /**\n   * Inicializa el componente y configura el formulario\n   */\n  ngOnInit() {\n    this.contactForm = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      celular: ['', [Validators.required, Validators.pattern(/^[0-9]{9}$/)]],\n      asunto: ['', Validators.required],\n      mensaje: ['', [Validators.required, Validators.minLength(10)]]\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.contactForm.valid) {\n      alert('¡Mensaje enviado correctamente!');\n      this.contactForm.reset();\n      this.submitted = false;\n    }\n  }\n  \n  /**\n   * Getter para acceder fácilmente a los controles del formulario\n   * @returns Los controles del formulario\n   */\n  get f() { return this.contactForm.controls; }\n}\n\n    \n\n    \n        \n    Formulario de contacto\n    \n        \n            Nombre\n            \n            \n                El nombre es requerido\n                El nombre debe tener al menos 2 caracteres\n            \n        \n\n        \n            Correo electrónico\n            \n            \n                El email es requerido\n                Debe ser una dirección de email válida\n            \n        \n\n        \n            Celular\n            \n            \n                El número de celular es requerido\n                Debe ser un número de 9 dígitos\n            \n        \n\n        \n            Asunto\n            \n            \n                El asunto es requerido\n            \n        \n\n        \n            Mensaje\n            \n            \n                El mensaje es requerido\n                El mensaje debe tener al menos 10 caracteres\n            \n        \n\n        Enviar\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Formulario de contacto                        Nombre                                        El nombre es requerido                El nombre debe tener al menos 2 caracteres                                        Correo electrónico                                        El email es requerido                Debe ser una dirección de email válida                                        Celular                                        El número de celular es requerido                Debe ser un número de 9 dígitos                                        Asunto                                        El asunto es requerido                                        Mensaje                                        El mensaje es requerido                El mensaje debe tener al menos 10 caracteres                            Enviar    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataInitializationService.html":{"url":"injectables/DataInitializationService.html","title":"injectable - DataInitializationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataInitializationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data-initialization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsonService: JsonService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/data-initialization.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/data-initialization.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-initialization.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { JsonService } from './json.service';\nimport { forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataInitializationService {\n  private isBrowser: boolean;\n\n  constructor(\n    private jsonService: JsonService,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  initializeData() {\n    return new Promise((resolve, reject) => {\n      forkJoin({\n        usuarios: this.jsonService.getJsonUsuariosData(),\n        categorias: this.jsonService.getJsonCategoriasData(),\n        productos: this.jsonService.getJsonProductosData()\n      }).subscribe({\n        next: (data: any) => {\n          if (this.isBrowser) {\n            // if (!localStorage.getItem('usuarios')) {\n            //   localStorage.setItem('usuarios', JSON.stringify(data.usuarios));\n            // }\n            if (!localStorage.getItem('categorias')) {\n              localStorage.setItem('categorias', JSON.stringify(data.categorias));\n            }\n            if (!localStorage.getItem('productos')) {\n              localStorage.setItem('productos', JSON.stringify(data.productos));\n            }\n          }\n          resolve();\n        },\n        error: (err) => {\n          console.error('Error initializing data', err);\n          reject(err);\n        }\n      });\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para la página de inicio.\nMuestra productos y categorías, permitiendo filtrar y añadir al carrito.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItemCount\n                            \n                            \n                                categorias\n                            \n                            \n                                categoriaSeleccionada\n                            \n                            \n                                productos\n                            \n                            \n                                productosFiltrados\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                filterProducts\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productosService: ProductosService, cartService: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        productosService\n                                                  \n                                                        \n                                                                        ProductosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para obtener datos de productos\n\n                                                        \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar operaciones del carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Añade un producto al carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Producto a añadir al carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProducts\n                        \n                    \n                \n            \n            \n                \nfilterProducts(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Filtra los productos según la categoría seleccionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría para filtrar (0 para mostrar todos)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Carga los datos de productos y categorías desde el servicio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente cargando los datos y suscribiéndose al contador del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSelectedCategory\n                        \n                    \n                \n            \n            \n                \nupdateSelectedCategory(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Actualiza la categoría seleccionada y filtra los productos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría seleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Número de items en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n            \n                \n                    Lista de categorías de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n            \n                \n                    ID de la categoría actualmente seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n            \n                \n                    Lista completa de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productosFiltrados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n            \n                \n                    Lista de productos filtrados según la categoría seleccionada\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ProductosService } from '../../services/productos.service';\nimport { CartService } from '../../services/cart.service';\n\n/**\n * @description\n * Componente principal para la página de inicio.\n * Muestra productos y categorías, permitiendo filtrar y añadir al carrito.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent {\n  /** Lista de categorías de productos */\n  categorias: any[] = [];\n  /** Lista completa de productos */\n  productos: any[] = [];\n  /** Lista de productos filtrados según la categoría seleccionada */\n  productosFiltrados: any[] = [];\n  /** ID de la categoría actualmente seleccionada */\n  categoriaSeleccionada: number = 0;\n  /** Número de items en el carrito */\n  cartItemCount: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param productosService Servicio para obtener datos de productos\n   * @param cartService Servicio para manejar operaciones del carrito\n   */\n  constructor(\n    private productosService: ProductosService,\n    private cartService: CartService\n  ) { }\n\n  /**\n   * Inicializa el componente cargando los datos y suscribiéndose al contador del carrito\n   */\n  ngOnInit() {\n    this.loadData();\n    this.cartService.getCartItemCount().subscribe(count => {\n      this.cartItemCount = count || 0;\n    });\n  }\n\n  /**\n   * Carga los datos de productos y categorías desde el servicio\n   */\n  loadData() {\n    this.productosService.getData().subscribe({\n      next: (data) => {\n        if (data && Array.isArray(data.categorias) && Array.isArray(data.productos)) {\n          this.categorias = [...data.categorias];\n          this.productos = data.productos;\n          this.filterProducts(0);\n        } else {\n          console.error('Data structure is not as expected:', data);\n        }\n      },\n      error: (error) => {\n        console.error('Error loading data:', error);\n      }\n    });\n  }\n\n  /**\n   * Actualiza la categoría seleccionada y filtra los productos\n   * @param categoryId ID de la categoría seleccionada\n   */\n  updateSelectedCategory(categoryId: number) {\n    this.categoriaSeleccionada = categoryId;\n    this.filterProducts(categoryId);\n  }\n\n  /**\n   * Filtra los productos según la categoría seleccionada\n   * @param categoryId ID de la categoría para filtrar (0 para mostrar todos)\n   */\n  filterProducts(categoryId: number) {\n    if (categoryId === 0) {\n      this.productosFiltrados = this.productos;\n    } else {\n      this.productosFiltrados = this.productos.filter(producto => producto.categoria === categoryId);\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir al carrito\n   */\n  addToCart(product: any) {\n    this.cartService.addToCart(product);\n    alert('Producto agregado al carrito');\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            Categorías\n            \n                \n                    {{ categoria.nombre }}\n                \n            \n        \n        \n        \n            Productos\n            \n                \n                    \n                        \n                        \n                            {{ producto.nombre }}\n                            {{ producto.descripcion }}\n                            Precio: ${{ producto.precio }}\n                            \n                                Agregar al\n                                    carrito\n                            \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Categorías                                                {{ categoria.nombre }}                                                                Productos                                                                                                                            {{ producto.nombre }}                            {{ producto.descripcion }}                            Precio: ${{ producto.precio }}                                                            Agregar al                                    carrito                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonService.html":{"url":"injectables/JsonService.html","title":"injectable - JsonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                httpOptionsCategorias\n                            \n                            \n                                httpOptionsPedidos\n                            \n                            \n                                httpOptionsProductos\n                            \n                            \n                                httpOptionsUsuarios\n                            \n                            \n                                    Private\n                                jsonCategoriasUrl\n                            \n                            \n                                    Private\n                                jsonPedidosUrl\n                            \n                            \n                                    Private\n                                jsonProductosUrl\n                            \n                            \n                                    Private\n                                jsonUsuariosUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJsonCategoriasData\n                            \n                            \n                                getJsonPedidosData\n                            \n                            \n                                getJsonProductosData\n                            \n                            \n                                getJsonUsuariosData\n                            \n                            \n                                MetodoCategorias\n                            \n                            \n                                MetodoPedidos\n                            \n                            \n                                MetodoProductos\n                            \n                            \n                                MetodoUsuarios\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/json.service.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonCategoriasData\n                        \n                    \n                \n            \n            \n                \ngetJsonCategoriasData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Trae todas las categorias del archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonPedidosData\n                        \n                    \n                \n            \n            \n                \ngetJsonPedidosData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Trae todos los pedidos del archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonProductosData\n                        \n                    \n                \n            \n            \n                \ngetJsonProductosData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Trae todos los productos del archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonUsuariosData\n                        \n                    \n                \n            \n            \n                \ngetJsonUsuariosData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Trae todos los usuarios del archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoCategorias\n                        \n                    \n                \n            \n            \n                \nMetodoCategorias(listaCategorias: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON de categorias con la lista de categorias proporcionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                listaCategorias\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoPedidos\n                        \n                    \n                \n            \n            \n                \nMetodoPedidos(listaPedidos: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON de pedidos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                listaPedidos\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoProductos\n                        \n                    \n                \n            \n            \n                \nMetodoProductos(listaProductos: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON de productos con la lista de productos proporcionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                listaProductos\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoUsuarios\n                        \n                    \n                \n            \n            \n                \nMetodoUsuarios(listaUsuarios: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON de usuarios con la lista de usuarios proporcionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                listaUsuarios\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptionsCategorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 80759020-58e2-44d2-b8b7-c4770cc93d76'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:15\n                        \n                    \n\n            \n                \n                    Opciones de cabecera para las peticiones HTTP a la API de categorias\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptionsPedidos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f1ea3b95-e90d-46f8-b31f-9e5879b90a31'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:57\n                        \n                    \n\n            \n                \n                    Opciones de cabecera para las peticiones HTTP a la API de pedidos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptionsProductos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer fd5435c0-e522-4ae8-a7eb-e977e471cce7'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:29\n                        \n                    \n\n            \n                \n                    Opciones de cabecera para las peticiones HTTP a la API de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptionsUsuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f11c237d-cda1-41f9-924e-02cfbe260069'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:43\n                        \n                    \n\n            \n                \n                    Opciones de cabecera para las peticiones HTTP a la API de usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonCategoriasUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/categorias.json?alt=media&token=80759020-58e2-44d2-b8b7-c4770cc93d76`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:24\n                        \n                    \n\n            \n                \n                    URL de la API de categorias\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonPedidosUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/pedidos.json?alt=media&token=f1ea3b95-e90d-46f8-b31f-9e5879b90a31`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:66\n                        \n                    \n\n            \n                \n                    URL de la API de pedidos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonProductosUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/productos.json?alt=media&token=fd5435c0-e522-4ae8-a7eb-e977e471cce7`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:38\n                        \n                    \n\n            \n                \n                    URL de la API de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonUsuariosUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/usuarios.json?alt=media&token=f11c237d-cda1-41f9-924e-02cfbe260069`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:52\n                        \n                    \n\n            \n                \n                    URL de la API de usuarios\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonService {\n  private apiUrl = environment.apiUrl;\n  /**\n   * Opciones de cabecera para las peticiones HTTP a la API de categorias\n   */\n  httpOptionsCategorias = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 80759020-58e2-44d2-b8b7-c4770cc93d76'\n    })\n  }\n  /**\n   * URL de la API de categorias\n   */\n  private jsonCategoriasUrl = `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/categorias.json?alt=media&token=80759020-58e2-44d2-b8b7-c4770cc93d76`; \n\n  /**\n   * Opciones de cabecera para las peticiones HTTP a la API de productos\n   */\n  httpOptionsProductos = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer fd5435c0-e522-4ae8-a7eb-e977e471cce7'\n    })\n  }\n  /**\n   * URL de la API de productos\n   */\n  private jsonProductosUrl = `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/productos.json?alt=media&token=fd5435c0-e522-4ae8-a7eb-e977e471cce7`;\n\n  /**\n   * Opciones de cabecera para las peticiones HTTP a la API de usuarios\n   */\n  httpOptionsUsuarios = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f11c237d-cda1-41f9-924e-02cfbe260069'\n    })\n  }\n  /**\n   * URL de la API de usuarios\n   */\n  private jsonUsuariosUrl = `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/usuarios.json?alt=media&token=f11c237d-cda1-41f9-924e-02cfbe260069`;\n\n  /**\n   * Opciones de cabecera para las peticiones HTTP a la API de pedidos\n   */\n  httpOptionsPedidos = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f1ea3b95-e90d-46f8-b31f-9e5879b90a31'\n    })\n  }\n  /**\n   * URL de la API de pedidos\n   */\n  private jsonPedidosUrl = `${this.apiUrl}/v0/b/fsii-sumativa-angular.appspot.com/o/pedidos.json?alt=media&token=f1ea3b95-e90d-46f8-b31f-9e5879b90a31`;\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Trae todas las categorias del archivo JSON\n   */\n  getJsonCategoriasData(): Observable {\n    return this.http.get(this.jsonCategoriasUrl);\n  }\n\n  /**\n   * Sobrescribe el archivo JSON de categorias con la lista de categorias proporcionada\n   */\n  MetodoCategorias(listaCategorias:any) {\n    console.log(listaCategorias);\n    this.http.post(this.jsonCategoriasUrl, listaCategorias, this.httpOptionsCategorias).subscribe(\n      response => {\n        console.log('Archivo JSON sobrescrito con exito', response);\n      },\n      error => {\n        console.error('Error al sobrescribir el archivo JSON', error);\n      })\n  }\n\n  /**\n   * Trae todos los productos del archivo JSON\n   */\n  getJsonProductosData(): Observable {\n    return this.http.get(this.jsonProductosUrl);\n  }\n\n  /**\n   * Sobrescribe el archivo JSON de productos con la lista de productos proporcionada\n   */\n  MetodoProductos(listaProductos:any) {\n    console.log(listaProductos);\n    this.http.post(this.jsonProductosUrl, listaProductos, this.httpOptionsProductos).subscribe(\n      response => {\n        console.log('Archivo JSON sobrescrito con exito', response);\n      },\n      error => {\n        console.error('Error al sobrescribir el archivo JSON', error);\n      })\n  }\n\n  /**\n   * Trae todos los usuarios del archivo JSON\n   */\n  getJsonUsuariosData(): Observable {\n    return this.http.get(this.jsonUsuariosUrl);\n  }\n\n  /**\n   * Sobrescribe el archivo JSON de usuarios con la lista de usuarios proporcionada\n   */  \n  MetodoUsuarios(listaUsuarios: any): Observable {\n    return this.http.post(this.jsonUsuariosUrl, listaUsuarios, this.httpOptionsUsuarios);\n  }\n\n  /**\n * Sobrescribe el archivo JSON de pedidos\n */\n  MetodoPedidos(listaPedidos: any): Observable {\n    return this.http.post(this.jsonPedidosUrl, listaPedidos, this.httpOptionsPedidos);\n  }\n\n  /**\n   * Trae todos los pedidos del archivo JSON\n   */\n  getJsonPedidosData(): Observable {\n    return this.http.get(this.jsonPedidosUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el inicio de sesión de usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario de inicio de sesión\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para manejar el inicio de sesión de usuarios.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /** Formulario de inicio de sesión */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura el formulario de inicio de sesión\n   */\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario de inicio de sesión\n   */\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const { email, password } = this.loginForm.value;\n\n      this.authService.login(email, password).subscribe(\n        (success) => {\n          if (success) {\n            alert(\"¡Inicio de sesión exitoso!\");\n            this.router.navigate(['/']);\n          } else {\n            alert(\"Correo electrónico o contraseña incorrectos. Por favor, intenta nuevamente.\");\n          }\n        },\n        (error) => {\n          console.error('Error durante el inicio de sesión:', error);\n          alert(\"Ocurrió un error durante el inicio de sesión. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      Object.values(this.loginForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Iniciar sesión\n            \n                \n                    Correo electrónico\n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es requerida.\n                    \n                \n                Iniciar sesión\n            \n            \n                ¿No tienes una cuenta? Regístrate\n                ¿Olvidaste tu contraseña?\n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Iniciar sesión                                                Correo electrónico                                                                El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                                        Contraseña                                                                La contraseña es requerida.                                                    Iniciar sesión                                        ¿No tienes una cuenta? Regístrate                ¿Olvidaste tu contraseña?                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagerUsersComponent.html":{"url":"components/ManagerUsersComponent.html","title":"component - ManagerUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManagerUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/manager-users/manager-users.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para gestionar usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manager-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./manager-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manager-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                editingUser\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                usuarios\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                deleteUser\n                            \n                            \n                                edadMinimaValidator\n                            \n                            \n                                editUser\n                            \n                            \n                                initForm\n                            \n                            \n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/manager-users/manager-users.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminacion de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { edadMinima: boolean; }\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Prepara el formulario para editar un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario a editar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n            \n                \nloadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Carga la lista de usuarios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, carga los usuarios y configura el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:21\n                        \n                    \n\n            \n                \n                    Formulario para editar usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:23\n                        \n                    \n\n            \n                \n                    Usuario actualmente en edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:25\n                        \n                    \n\n            \n                \n                    control visibilidad del modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:19\n                        \n                    \n\n            \n                \n                    Lista de usuarios\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para gestionar usuarios.\n */\n@Component({\n  selector: 'app-manager-users',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './manager-users.component.html',\n  styleUrls: ['./manager-users.component.scss']\n})\nexport class ManagerUsersComponent implements OnInit {\n  /** Lista de usuarios */\n  usuarios: any[] = [];\n  /** Formulario para editar usuarios */\n  editForm!: FormGroup;\n  /** Usuario actualmente en edición */\n  editingUser: any = null;\n  /** control visibilidad del modal */\n  isModalOpen: boolean = false;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) { }\n\n  /**\n   * Inicializa el componente, carga los usuarios y configura el formulario\n   */\n  ngOnInit() {\n    this.loadUsers();\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario de edición\n   */\n  initForm() {\n    this.editForm = this.fb.group({\n      email: [{ value: '', disabled: true }, [Validators.required, Validators.email]],\n      nombre: ['', Validators.required],\n      celular: ['', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: ['', [Validators.required, this.edadMinimaValidator]],\n      rol: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Carga la lista de usuarios\n   */\n  loadUsers() {\n    this.authService.getUsuarios().subscribe(\n      (users) => {\n        this.usuarios = users;\n      },\n      (error) => {\n        console.error('Error loading users:', error);\n        alert('Error al cargar los usuarios. Por favor, intenta nuevamente.');\n      }\n    );\n  }\n\n  /**\n   * Prepara el formulario para editar un usuario\n   * @param usuario Usuario a editar\n   */\n  editUser(usuario: any) {\n    this.editingUser = usuario;\n    this.editForm.patchValue(usuario);\n    this.isModalOpen = true;\n  }\n\n  /**\n   * Maneja el envío del formulario de edición\n   */\n  onSubmit() {\n    if (this.editForm.valid) {\n      const updatedUser = {\n        ...this.editingUser,\n        ...this.editForm.value\n      };\n      this.authService.actualizarUsuario(updatedUser).subscribe(\n        (success) => {\n          if (success) {\n            alert('Usuario actualizado correctamente');\n            this.loadUsers();\n            this.closeModal();\n          } else {\n            alert('Error al actualizar el usuario. Por favor, intenta nuevamente.');\n          }\n        },\n        (error) => {\n          console.error('Error updating user:', error);\n          alert('Error al actualizar el usuario. Por favor, intenta nuevamente.');\n        }\n      );\n    } else {\n      Object.values(this.editForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n\n  /**\n   * Maneja la eliminacion de un usuario\n   */\n  deleteUser(usuario: any) {\n    if (usuario.rol === 'administrador') {\n      alert('No se puede eliminar un usuario administrador.');\n      return;\n    }\n\n    if (confirm(`¿Estás seguro de que quieres eliminar al usuario ${usuario.nombre}?`)) {\n      this.authService.eliminarUsuario(usuario.email).subscribe(\n        (success) => {\n          if (success) {\n            alert('Usuario eliminado correctamente');\n            this.loadUsers();\n          } else {\n            alert('Error al eliminar el usuario');\n          }\n        },\n        (error) => {\n          console.error('Error deleting user:', error);\n          alert('Error al eliminar el usuario');\n        }\n      );\n    }\n  }\n\n  /**\n   * Cierra el modal de edición\n   */\n  closeModal() {\n    this.isModalOpen = false;\n    this.editingUser = null;\n    this.editForm.reset();\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: any) {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n}\n    \n\n    \n        \n  Administrar usuarios\n  \n    \n      \n        Email\n        Nombre\n        Celular\n        Fecha de nacimiento\n        Rol\n        Acciones\n      \n    \n    \n      \n        {{ usuario.email }}\n        {{ usuario.nombre }}\n        {{ usuario.celular }}\n        {{ usuario.fechaNacimiento }}\n        {{ usuario.rol }}\n        \n          Editar\n          Eliminar\n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n          Editar usuario\n          \n        \n        \n          \n            \n              Email\n              \n              \n                El email es requerido.\n              \n              \n                Ingrese un email válido.\n              \n            \n            \n              Nombre\n              \n              \n                El nombre es requerido.\n              \n            \n            \n              Celular\n              \n              \n                El celular es requerido.\n              \n              \n                El celular debe contener 9 dígitos numéricos.\n              \n            \n            \n              Fecha de nacimiento\n              \n              \n                La fecha de nacimiento es requerida.\n              \n              \n                El usuario debe ser mayor de 14 años.\n              \n            \n            \n              Rol\n              \n                Usuario\n                Administrador\n              \n              \n                El rol es requerido.\n              \n            \n          \n        \n        \n          Cerrar\n          Guardar cambios\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./manager-users.component.scss\n                \n                .modal {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.modal-dialog {\n    margin: 1.75rem auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrar usuarios                    Email        Nombre        Celular        Fecha de nacimiento        Rol        Acciones                            {{ usuario.email }}        {{ usuario.nombre }}        {{ usuario.celular }}        {{ usuario.fechaNacimiento }}        {{ usuario.rol }}                  Editar          Eliminar                                                    Editar usuario                                                              Email                                            El email es requerido.                                            Ingrese un email válido.                                                    Nombre                                            El nombre es requerido.                                                    Celular                                            El celular es requerido.                                            El celular debe contener 9 dígitos numéricos.                                                    Fecha de nacimiento                                            La fecha de nacimiento es requerida.                                            El usuario debe ser mayor de 14 años.                                                    Rol                              Usuario                Administrador                                            El rol es requerido.                                                              Cerrar          Guardar cambios                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagerUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModificarPerfilComponent.html":{"url":"components/ModificarPerfilComponent.html","title":"component - ModificarPerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModificarPerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modificar-perfil/modificar-perfil.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para modificar el perfil del usuario y cambiar la contraseña\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modificar-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./modificar-perfil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modificar-perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordForm\n                            \n                            \n                                perfilForm\n                            \n                            \n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edadMinimaValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitPassword\n                            \n                            \n                                onSubmitPerfil\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear los formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, carga los datos del usuario y configura los formularios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitPassword\n                        \n                    \n                \n            \n            \n                \nonSubmitPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de cambio de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitPerfil\n                        \n                    \n                \n            \n            \n                \nonSubmitPerfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de perfil\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(g: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    FormGroup que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:21\n                        \n                    \n\n            \n                \n                    Formulario para cambiar la contraseña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perfilForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:19\n                        \n                    \n\n            \n                \n                    Formulario para modificar datos del perfil\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:23\n                        \n                    \n\n            \n                \n                    Datos del usuario actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para modificar el perfil del usuario y cambiar la contraseña\n */\n@Component({\n  selector: 'app-modificar-perfil',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './modificar-perfil.component.html',\n  styleUrls: ['./modificar-perfil.component.scss']\n})\nexport class ModificarPerfilComponent implements OnInit {\n  /** Formulario para modificar datos del perfil */\n  perfilForm!: FormGroup;\n  /** Formulario para cambiar la contraseña */\n  passwordForm!: FormGroup;\n  /** Datos del usuario actual */\n  usuarioActual: any;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear los formularios reactivos\n   * @param authService Servicio de autenticación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Inicializa el componente, carga los datos del usuario y configura los formularios\n   */\n  ngOnInit() {\n    this.usuarioActual = this.authService.getUsuarioActual();\n\n    this.perfilForm = this.fb.group({\n      nombre: [this.usuarioActual?.nombre || '', Validators.required],\n      celular: [this.usuarioActual?.celular || '', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: [this.usuarioActual?.fechaNacimiento || '', [Validators.required, this.edadMinimaValidator]]\n    });\n\n    this.passwordForm = this.fb.group({\n      newPassword: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: AbstractControl): ValidationErrors | null {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param g FormGroup que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('newPassword')?.value === g.get('confirmPassword')?.value\n      ? null : { 'mismatch': true };\n  }\n\n  /**\n   * Maneja el envío del formulario de perfil\n   */\n  onSubmitPerfil() {\n    if (this.perfilForm.valid) {\n      const datosActualizados = this.perfilForm.value;\n      this.authService.actualizarPerfil(datosActualizados).subscribe(\n        (success) => {\n          if (success) {\n            console.log('Perfil actualizado con éxito');\n            alert(\"Información personal actualizada correctamente.\");\n            // Actualizar el usuarioActual en el componente\n            this.usuarioActual = this.authService.getUsuarioActual();\n          } else {\n            console.log('Error al actualizar el perfil');\n            alert(\"Hubo un error al actualizar la información.\");\n          }\n        },\n        (error) => {\n          console.error('Error al actualizar el perfil:', error);\n          alert(\"Ocurrió un error al actualizar la información. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de cambio de contraseña\n   */\n  onSubmitPassword() {\n    if (this.passwordForm.valid) {\n      const newPassword = this.passwordForm.get('newPassword')?.value;\n      this.authService.actualizarContraseña(newPassword).subscribe(\n        (success) => {\n          if (success) {\n            console.log('Contraseña actualizada con éxito');\n            alert(\"Contraseña actualizada correctamente.\");\n            this.passwordForm.reset();\n          } else {\n            console.log('Error al actualizar la contraseña');\n            alert(\"Hubo un error al actualizar la contraseña.\");\n          }\n        },\n        (error) => {\n          console.error('Error al actualizar la contraseña:', error);\n          alert(\"Ocurrió un error al actualizar la contraseña. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Modificar información personal\n            \n                \n                    Nombre\n                    \n                    \n                        El nombre es requerido.\n                    \n                \n                \n                    Celular\n                    \n                    \n                        El celular es requerido.\n                    \n                    \n                        El celular debe contener 9 dígitos numéricos.\n                    \n                \n                \n                    Fecha de nacimiento\n                    \n                    \n                        La fecha de nacimiento es requerida.\n                    \n                    \n                        Debes ser mayor de 14 años para modificar tu perfil.\n                    \n                \n                Guardar cambios\n            \n        \n        \n            Modificar contraseña\n            \n                \n                    Nueva contraseña\n                    \n                    \n                        La nueva contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir nueva contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Cambiar\n                    contraseña\n            \n        \n    \n\n    \n\n    \n                \n                    ./modificar-perfil.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Modificar información personal                                                Nombre                                                                El nombre es requerido.                                                                        Celular                                                                El celular es requerido.                                                                El celular debe contener 9 dígitos numéricos.                                                                        Fecha de nacimiento                                                                La fecha de nacimiento es requerida.                                                                Debes ser mayor de 14 años para modificar tu perfil.                                                    Guardar cambios                                        Modificar contraseña                                                Nueva contraseña                                                                La nueva contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir nueva contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Cambiar                    contraseña                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModificarPerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PedidosComponent.html":{"url":"components/PedidosComponent.html","title":"component - PedidosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PedidosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pedidos/pedidos.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pedidos\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./pedidos.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pedidos.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cargando\n                            \n                            \n                                error\n                            \n                            \n                                pedidos\n                            \n                            \n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cargarPedidos\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(jsonService: JsonService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pedidos/pedidos.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cargarPedidos\n                        \n                    \n                \n            \n            \n                \ncargarPedidos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pedidos/pedidos.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Carga los pedidos del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pedidos/pedidos.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cargando\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pedidos/pedidos.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pedidos/pedidos.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pedidos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pedidos/pedidos.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pedidos/pedidos.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { JsonService } from '../../services/json.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-pedidos',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './pedidos.component.html',\n  styleUrls: ['./pedidos.component.scss']\n})\nexport class PedidosComponent implements OnInit {\n  pedidos: any[] = [];\n  usuarioActual: any;\n  cargando: boolean = true;\n  error: string | null = null;\n\n  constructor(\n    private jsonService: JsonService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.usuarioActual = this.authService.getUsuarioActual();\n    if (this.usuarioActual) {\n      this.cargarPedidos();\n    } else {\n      this.error = 'Debes iniciar sesión para ver tus pedidos.';\n      this.cargando = false;\n      // Opcionalmente, redirigir al usuario a la página de inicio de sesión\n      // this.router.navigate(['/login']);\n    }\n  }\n\n  /**\n   * Carga los pedidos del usuario actual\n   */\n  cargarPedidos(): void {\n    this.jsonService.getJsonPedidosData().subscribe(\n      (data: any[]) => {\n        this.pedidos = data.filter(pedido => pedido.usuario === this.usuarioActual.email);\n        this.cargando = false;\n      },\n      error => {\n        console.error('Error al cargar los pedidos', error);\n        this.error = 'Hubo un error al cargar los pedidos. Por favor, intenta de nuevo más tarde.';\n        this.cargando = false;\n      }\n    );\n  }\n}\n    \n\n    \n        \n    Mis Pedidos\n\n    \n        \n            Cargando...\n        \n        Cargando pedidos...\n    \n\n    \n        {{ error }}\n    \n\n    \n        \n            No tienes pedidos realizados.\n        \n\n        \n            \n                \n                    \n                        Pedido #{{ pedido.id }}\n                    \n                    \n                        Fecha: {{ pedido.fecha | date:'dd/MM/yyyy' }}\n                        Total: {{ pedido.total |\n                            currency:'CLP':'symbol-narrow':'1.0-0' }}\n                        Productos:\n                        \n                            \n                                {{ producto.nombre }} - Cantidad: {{ producto.cantidad }}\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./pedidos.component.scss\n                \n                .card {\n    transition: transform 0.2s;\n\n    &:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    }\n}\n\n.bg-card-primary {\n    background-color: #0d9fee;\n}\n\n.card-header {\n    font-weight: bold;\n}\n\n.list-group-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Mis Pedidos                        Cargando...                Cargando pedidos...                {{ error }}                            No tienes pedidos realizados.                                                                                        Pedido #{{ pedido.id }}                                                                Fecha: {{ pedido.fecha | date:\\'dd/MM/yyyy\\' }}                        Total: {{ pedido.total |                            currency:\\'CLP\\':\\'symbol-narrow\\':\\'1.0-0\\' }}                        Productos:                                                                                    {{ producto.nombre }} - Cantidad: {{ producto.cantidad }}                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PedidosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductosService.html":{"url":"injectables/ProductosService.html","title":"injectable - ProductosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/productos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsonService: JsonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/productos.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/productos.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, forkJoin, map } from 'rxjs';\nimport { JsonService } from './json.service'; // Asegúrese de que la ruta de importación sea correcta\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n  constructor(private jsonService: JsonService) { }\n\n  getData(): Observable {\n    return forkJoin({\n      categorias: this.jsonService.getJsonCategoriasData(),\n      productos: this.jsonService.getJsonProductosData()\n    }).pipe(\n      map(result => ({\n        categorias: result.categorias,\n        productos: result.productos\n      }))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecuperarPasswordComponent.html":{"url":"components/RecuperarPasswordComponent.html","title":"component - RecuperarPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecuperarPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recuperar-password/recuperar-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el proceso de recuperación de contraseña\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recuperar-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./recuperar-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recuperar-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailForm\n                            \n                            \n                                passwordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generarToken\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear los formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generarToken\n                        \n                    \n                \n            \n            \n                \ngenerarToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Genera y envía un token de recuperación al correo electrónico proporcionado\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura los formularios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de recuperación de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    AbstractControl que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario para ingresar el correo electrónico\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:22\n                        \n                    \n\n            \n                \n                    Formulario para ingresar el token y la nueva contraseña\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para manejar el proceso de recuperación de contraseña\n */\n@Component({\n  selector: 'app-recuperar-password',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './recuperar-password.component.html',\n  styleUrls: ['./recuperar-password.component.scss']\n})\nexport class RecuperarPasswordComponent implements OnInit {\n  /** Formulario para ingresar el correo electrónico */\n  emailForm!: FormGroup;\n  /** Formulario para ingresar el token y la nueva contraseña */\n  passwordForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear los formularios reactivos\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura los formularios\n   */\n  ngOnInit() {\n    this.emailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.passwordForm = this.fb.group({\n      token: ['', [Validators.required, Validators.pattern('^[0-9]{6}$')]],\n      newPassword: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param control AbstractControl que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const newPassword = control.get('newPassword');\n    const confirmPassword = control.get('confirmPassword');\n\n    if (newPassword && confirmPassword && newPassword.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ mismatch: true });\n      return { mismatch: true };\n    } else {\n      confirmPassword?.setErrors(null);\n      return null;\n    }\n  }\n  /**\n   * Genera y envía un token de recuperación al correo electrónico proporcionado\n   */\n  generarToken() {\n    if (this.emailForm.valid) {\n      const email = this.emailForm.get('email')?.value;\n      this.authService.generarTokenRecuperacion(email).subscribe(\n        (token) => {\n          if (token) {\n            alert(`Tu token de recuperación es: ${token}`);\n          } else {\n            alert(\"El correo electrónico ingresado no está registrado.\");\n          }\n        },\n        (error) => {\n          console.error('Error al generar el token:', error);\n          alert(\"Ocurrió un error al generar el token. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      this.emailForm.markAllAsTouched();\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de recuperación de contraseña\n   */\n  onSubmit() {\n    if (this.passwordForm.valid) {\n      const email = this.emailForm.get('email')?.value;\n      const token = this.passwordForm.get('token')?.value;\n      const newPassword = this.passwordForm.get('newPassword')?.value;\n\n      this.authService.recuperarPassword(email, token, newPassword).subscribe(\n        (success) => {\n          if (success) {\n            alert(\"La contraseña ha sido actualizada correctamente.\");\n            this.router.navigate(['/login']);\n          } else {\n            alert(\"El correo electrónico o el token ingresados no son válidos. Por favor, verifica nuevamente.\");\n          }\n        },\n        (error) => {\n          console.error('Error al recuperar la contraseña:', error);\n          alert(\"Ocurrió un error al actualizar la contraseña. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      Object.values(this.passwordForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Recuperar contraseña\n\n            \n                \n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                Generar token\n            \n\n            \n\n            \n                \n                    Ingresar token enviado al correo\n                    \n                    \n                        El token es requerido.\n                    \n                    \n                        El token debe ser de 6 dígitos numéricos.\n                    \n                \n                \n                    Nueva contraseña\n                    \n                    \n                        La nueva contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Cambiar\n                    contraseña\n            \n        \n    \n\n    \n\n    \n                \n                    ./recuperar-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Recuperar contraseña                                                                                            El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                    Generar token                                                                        Ingresar token enviado al correo                                                                El token es requerido.                                                                El token debe ser de 6 dígitos numéricos.                                                                        Nueva contraseña                                                                La nueva contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Cambiar                    contraseña                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecuperarPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrarmeComponent.html":{"url":"components/RegistrarmeComponent.html","title":"component - RegistrarmeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrarmeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registrarme/registrarme.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el registro de nuevos usuarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registrarme\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./registrarme.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registrarme.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registroForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edadMinimaValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registrarme/registrarme.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { edadMinima: boolean; }\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    AbstractControl que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registroForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registrarme/registrarme.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario de registro de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para manejar el registro de nuevos usuarios\n */\n@Component({\n  selector: 'app-registrarme',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './registrarme.component.html',\n  styleUrls: ['./registrarme.component.scss']\n})\nexport class RegistrarmeComponent implements OnInit {\n  /** Formulario de registro de usuario */\n  registroForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura el formulario de registro\n   */\n  ngOnInit() {\n    this.registroForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      nombre: ['', Validators.required],\n      celular: ['', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: ['', [Validators.required, this.edadMinimaValidator]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      repetirPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param control AbstractControl que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password');\n    const repetirPassword = control.get('repetirPassword');\n\n    if (password && repetirPassword && password.value !== repetirPassword.value) {\n      repetirPassword.setErrors({ mismatch: true });\n      return { mismatch: true };\n    } else {\n      repetirPassword?.setErrors(null);\n      return null;\n    }\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: any) {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n\n  /**\n   * Maneja el envío del formulario de registro\n   */\n  onSubmit() {\n    if (this.registroForm.valid) {\n      const nuevoUsuario = {\n        ...this.registroForm.value,\n        rol: 'usuario',\n        token: ''\n      };\n\n      this.authService.registrarUsuario(nuevoUsuario).subscribe(\n        (success) => {\n          if (success) {\n            alert(\"¡Usuario registrado correctamente!\");\n            this.router.navigate(['/login']);\n          } else {\n            alert(\"El usuario ya está registrado. Por favor, inicia sesión o utiliza otro correo electrónico.\");\n          }\n        },\n        (error) => {\n          console.error('Error durante el registro:', error);\n          alert(\"Ocurrió un error durante el registro. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      Object.values(this.registroForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Registro de usuario\n            \n                \n                    Correo electrónico\n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                \n                    Nombre completo\n                    \n                    \n                        El nombre es requerido.\n                    \n                \n                \n                    Celular\n                    \n                    \n                        El celular es requerido.\n                    \n                    \n                        El celular debe contener 9 dígitos numéricos.\n                    \n                \n                \n                    Fecha de nacimiento\n                    \n                    \n                        La fecha de nacimiento es requerida.\n                    \n                    \n                        Debes ser mayor de 14 años para registrarte.\n                    \n                \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Registrarme\n            \n        \n    \n\n    \n\n    \n                \n                    ./registrarme.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Registro de usuario                                                Correo electrónico                                                                El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                                        Nombre completo                                                                El nombre es requerido.                                                                        Celular                                                                El celular es requerido.                                                                El celular debe contener 9 dígitos numéricos.                                                                        Fecha de nacimiento                                                                La fecha de nacimiento es requerida.                                                                Debes ser mayor de 14 años para registrarte.                                                                        Contraseña                                                                La contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Registrarme                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'PedidosComponent', 'selector': 'app-pedidos'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrarmeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Usuario.html":{"url":"interfaces/Usuario.html","title":"interface - Usuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Usuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un usuario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            celular\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fechaNacimiento\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            rol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celular\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celular:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Celular del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaNacimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaNacimiento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de nacimiento del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { isPlatformBrowser, } from '@angular/common';\nimport { JsonService } from './json.service';\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\n\n/**\n * Interfaz que define la estructura de un usuario\n */\ninterface Usuario {\n  /** Email del usuario */\n  email: string;\n  /** Nombre del usuario */\n  nombre: string;\n  /** Celular del usuario */\n  celular: string;\n  /** Fecha de nacimiento del usuario */\n  fechaNacimiento: string;\n  /** Rol del usuario */\n  rol: string;\n}\n\n/**\n * @description\n * Servicio para manejar la autenticación y gestión de usuarios\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /** BehaviorSubject para manejar el usuario actual */\n  private usuarioActual = new BehaviorSubject(null);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(\n    @Inject(PLATFORM_ID) platformId: Object,\n    private jsonService: JsonService\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.cargarSesion();\n  }\n\n  /**\n   * Carga la sesión del usuario desde el almacenamiento local\n   */\n  cargarSesion() {\n    if (this.isBrowser) {\n      const sesionUsuario = JSON.parse(localStorage.getItem('sesionUsuario') || 'null');\n      this.usuarioActual.next(sesionUsuario);\n    }\n  }\n\n  /**\n   * Obtiene el usuario actual\n   * @returns El usuario actual o null si no hay sesión\n   */\n  getUsuarioActual(): any {\n    return this.usuarioActual.value;\n  }\n\n  /**\n   * Obtiene un Observable del usuario actual\n   * @returns Observable del usuario actual\n   */\n  getUsuarioActualObservable(): Observable {\n    return this.usuarioActual.asObservable();\n  }\n\n  /**\n   * Realiza el inicio de sesión de un usuario\n   * @param email Email del usuario\n   * @param password Contraseña del usuario\n   * @returns true si el login es exitoso, false en caso contrario\n   */\n  login(email: string, password: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      map(usuarios => {\n        const usuarioEncontrado = usuarios.find(\n          (usuario: any) => usuario.email === email && usuario.password === password\n        );\n        if (usuarioEncontrado) {\n          const usuarioSinContraseña: Usuario = {\n            email: usuarioEncontrado.email,\n            nombre: usuarioEncontrado.nombre,\n            celular: usuarioEncontrado.celular,\n            fechaNacimiento: usuarioEncontrado.fechaNacimiento,\n            rol: usuarioEncontrado.rol,\n          };\n          if (this.isBrowser) {\n            localStorage.setItem('sesionUsuario', JSON.stringify(usuarioSinContraseña));\n          }\n          this.usuarioActual.next(usuarioSinContraseña);\n          return true;\n        }\n        return false;\n      }),\n      catchError(error => {\n        console.error('Error during login:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout() {\n    if (this.isBrowser) {\n      localStorage.removeItem('sesionUsuario');\n    }\n    this.usuarioActual.next(null);\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   * @returns true si el usuario es administrador, false en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.usuarioActual.value?.rol === 'administrador';\n  }\n\n\n  /**\n   * Registra un nuevo usuario\n   * @param nuevoUsuario Datos del nuevo usuario\n   * @returns true si el registro es exitoso, false si el usuario ya existe\n   */\n  registrarUsuario(nuevoUsuario: any): Observable {\n    console.log('Iniciando registro de usuario:', nuevoUsuario);\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        console.log('Usuarios obtenidos:', usuarios);\n        const usuarioExistente = usuarios.find((u: any) => u.email === nuevoUsuario.email);\n        if (usuarioExistente) {\n          console.log('Usuario ya existe:', nuevoUsuario.email);\n          return of(false);\n        }\n        console.log('Añadiendo nuevo usuario a la lista');\n        \n        // Creamos un nuevo objeto de usuario sin el campo repetirPassword\n        const usuarioParaGuardar = {\n          email: nuevoUsuario.email,\n          nombre: nuevoUsuario.nombre,\n          celular: nuevoUsuario.celular,\n          fechaNacimiento: nuevoUsuario.fechaNacimiento,\n          password: nuevoUsuario.password,\n          rol: nuevoUsuario.rol,\n          token: nuevoUsuario.token\n        };\n  \n        usuarios.push(usuarioParaGuardar);\n        return this.jsonService.MetodoUsuarios(usuarios).pipe(\n          map(() => {\n            console.log('Usuario registrado exitosamente');\n            return true;\n          }),\n          catchError(error => {\n            console.error('Error al guardar usuario en Firebase:', error);\n            return of(false);\n          })\n        );\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Genera un token de recuperación para un email dado\n   * @param email Email del usuario\n   * @returns El token generado o null si el email no existe\n   */\n  generarTokenRecuperacion(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email);\n        if (usuario) {\n          const token = Math.floor(Math.random() * 900000) + 100000;\n          usuario.token = token.toString();\n          console.log('Usuario actualizado:', usuario);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuario : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => token.toString()),\n            catchError(error => {\n              console.error('Error al guardar el token en Firebase:', error);\n              return of(null);\n            })\n          );\n        }\n        return of(null);\n      }),\n      catchError(error => {\n        console.error('Error al generar el token de recuperación:', error);\n        return of(null);\n      })\n    );\n  }\n\n  /**\n   * Recupera la contraseña de un usuario\n   * @param email Email del usuario\n   * @param token Token de recuperación\n   * @param newPassword Nueva contraseña\n   * @returns true si la recuperación es exitosa, false en caso contrario\n   */\n  recuperarPassword(email: string, token: string, newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email && u.token === token);\n        if (usuario) {\n          // Actualizamos solo los campos necesarios\n          const usuarioActualizado = {\n            ...usuario,\n            password: newPassword,\n            token: ''\n          };\n          // Eliminamos el campo repetirPassword si existe\n          delete usuarioActualizado.repetirPassword;\n\n          console.log('Usuario actualizado:', usuarioActualizado);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuarioActualizado : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => true),\n            catchError(error => {\n              console.error('Error al guardar la nueva contraseña en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al recuperar la contraseña:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   * @param datosActualizados Nuevos datos del perfil\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarPerfil(datosActualizados: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = { ...usuarios[usuarioIndex], ...datosActualizados };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              tap(() => {\n                const usuarioActualizado = { ...sesionUsuario, ...datosActualizados };\n                if (this.isBrowser) {\n                  localStorage.setItem('sesionUsuario', JSON.stringify(usuarioActualizado));\n                }\n                this.usuarioActual.next(usuarioActualizado);\n              }),\n              map(() => true)\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error updating profile:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza la contraseña del usuario actual\n   * @param newPassword Nueva contraseña\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarContraseña(newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = {\n              ...usuarios[usuarioIndex],\n              password: newPassword\n            };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              map(() => {\n                console.log('Contraseña actualizada correctamente');\n                return true;\n              }),\n              catchError(error => {\n                console.error('Error al actualizar la contraseña en Firebase:', error);\n                return of(false);\n              })\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de todos los usuarios\n   * @returns Array de usuarios\n   */\n  getUsuarios(): Observable {\n    return this.jsonService.getJsonUsuariosData();\n  }\n\n  /**\n   * Actualiza los datos de un usuario\n   * @param usuario Datos actualizados del usuario\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarUsuario(usuario: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === usuario.email);\n        if (index !== -1) {\n          usuarios[index] = { ...usuarios[index], ...usuario };\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario actualizado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al actualizar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * elimina un usuario\n   * @param email Email del usuario a eliminar\n   * @returns true si la eliminación es exitosa, false en caso contrario\n   */\n  eliminarUsuario(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === email);\n        if (index !== -1) {\n          usuarios.splice(index, 1);\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario eliminado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al eliminar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }  \n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            interface\n            CartItem\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/contacto/contacto.component.ts\n            \n            component\n            ContactoComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/manager-users/manager-users.component.ts\n            \n            component\n            ManagerUsersComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/components/modificar-perfil/modificar-perfil.component.ts\n            \n            component\n            ModificarPerfilComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/pedidos/pedidos.component.ts\n            \n            component\n            PedidosComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/recuperar-password/recuperar-password.component.ts\n            \n            component\n            RecuperarPasswordComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/registrarme/registrarme.component.ts\n            \n            component\n            RegistrarmeComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            Usuario\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/cart.service.ts\n            \n            injectable\n            CartService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/services/cart.service.ts\n            \n            interface\n            CartItem\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/data-initialization.service.ts\n            \n            injectable\n            DataInitializationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/json.service.ts\n            \n            injectable\n            JsonService\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/services/productos.service.ts\n            \n            injectable\n            ProductosService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/fire : ^18.0.1\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.3\n        \n            @popperjs/core : ^2.11.8\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            express : ^4.18.2\n        \n            firebase : ^10.12.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n                        Crea y configura la aplicación Express para el servidor SSR\n\n\n                        \n                            Returns :     express.Express\n\n                        \n                            \n                                Una instancia configurada de Express\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n                        Inicia el servidor Node\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFSII_SUMATIVA_ANGULAR\nFSII - SUMATIVA - ANGULAR\nDOCKER COMANDOS\n\ndocker build -t albavets .\ndocker run -p 80:80 albavets\n\n\nCOMPODOC COMANDOS\n\nComando para generar documentacion: npx compodoc -p tsconfig.json\nComando para levantar servidor de documentacion: compodoc -s\n\nCOMPODOC DECLARACIONES\n\n@description | Se utiliza para proporcionar una descripción general del componente.\n  /**\n\n@description Se ingresa la descripcion del componente\n  */\n\n\n@param | Se utiliza para describir los parámetros de una función o método. Proporciona detalles sobre el tipo de datos, el propósito y cualquier restricción asociada al parámetro.\n  /**\n\nConstructor del componente\n@param cartService Servicio para manejar el carrito\n@param authService Servicio de autenticación\n@param dataInitService Servicio de inicialización de datos\n */\n\n\n@return | Describe el valor de retorno de una función o método. Proporciona detalles sobre el tipo de datos y el significado del valor devuelto.\n/**\n\nMétodo para verificar si el usuario es administrador\n@returns {boolean} Verdadero si el usuario es administrador, falso en caso contrario\n */\n\n\n@usageNotes | Se utiliza para proporcionar ejemplos de uso del módulo. Cuando documentas tus componentes, directivas, servicios o cualquier otro elemento en TypeScript con JSDoc, puedes incluir secciones personalizadas para proporcionar notas de uso.\n/**\n\n@description Prueba: No debería iniciar sesión con una contraseña incorrecta\n@usageNotes \nEsta prueba verifica el manejo de credenciales inválidas\n\n\nRellena el formulario con un email correcto pero una contraseña incorrecta.\n\n\n\nVerifica que el formulario sea válido.\n\n\n\nSimula una respuesta fallida del servicio de autenticación.\n\n\n\nEspía la función alert del navegador.\n\n\n\nLlama al método onSubmit().\n\n\n\nVerifica que se haya llamado al servicio de login con las credenciales proporcionadas.\n\n\n\nComprueba que no se haya llamado a la navegación.\n\n\n\nVerifica que se haya mostrado el mensaje de alerta correcto.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Proporciona detección de cambios basada en Zone.js con coalescencia de eventos\n     * @description Mejora el rendimiento agrupando múltiples cambios en una sola actualización\n     */\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    /**\n     * Configura el enrutador de la aplicación\n     * @description Utiliza las rutas definidas en app.routes\n     */\n    provideRouter(routes),\n    /**\n     * Habilita la hidratación del cliente\n     * @description Permite la transición suave del renderizado del lado del servidor al lado del cliente\n     */\n    provideClientHydration(),\n    /**\n     * Configura el cliente HTTP para usar Fetch API\n     * @description Proporciona una implementación moderna y eficiente para las solicitudes HTTP\n     */\n    provideHttpClient(withFetch())\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración principal de la aplicación Angular\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Función de arranque de la aplicación Angular para el entorno de servidor\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Configuración final de la aplicación para el entorno de servidor\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración específica para el servidor de la aplicación Angular\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    apiUrl: '/api'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    apiUrl: '/api'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
