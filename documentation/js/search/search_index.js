var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.249,1,0.853]],["body/components/AppComponent.html",[0,0.355,1,1.325,2,1.168,3,0.36,4,0.36,5,0.916,6,0.916,7,0.916,8,0.31,9,2.132,10,0.679,11,1.525,12,2.582,13,0.581,14,0.606,15,3.258,16,1.785,17,3.673,18,2,19,0.68,20,2.259,21,3.673,22,0.844,23,3.673,24,1.296,25,1.504,26,0.916,27,1.767,28,1.427,29,1.44,30,1.168,31,0.844,32,1.168,33,1.355,34,4.262,35,3.499,36,4.262,37,4.262,38,1.168,39,3.673,40,2,41,3.673,42,0.216,43,0.438,44,3.007,45,4.262,46,0.921,47,4.262,48,2.621,49,0.752,50,3.258,51,3.258,52,4.634,53,1.473,54,0.553,55,2.132,56,1.842,57,1.525,58,3.804,59,2.849,60,1.11,61,3.673,62,0.705,63,0.532,64,0.042,65,0.873,66,0.493,67,0.532,68,0.921,69,0.606,70,0.844,71,2.02,72,1.296,73,2.849,74,1.785,75,2.597,76,3.278,77,1.785,78,1.325,79,1.914,80,1.19,81,2.523,82,0.583,83,1.355,84,3.015,85,3.015,86,1.19,87,2.259,88,2.259,89,2.597,90,3.804,91,2.467,92,0.979,93,2.597,94,0.844,95,1.601,96,3.673,97,0.949,98,3.673,99,2.597,100,1.785,101,1.504,102,1.504,103,1.44,104,2.597,105,2.259,106,3.015,107,1.018,108,5.331,109,2.597,110,3.673,111,4.262,112,3.673,113,3.673,114,1.601,115,2.259,116,1.601,117,2.597,118,2.582,119,3.673,120,0.724,121,0.31,122,1.414,123,1.597,124,1.262,125,0.414,126,2.597,127,2.597,128,0.916,129,0.36,130,0.36,131,0.773,132,2.597,133,2.132,134,2.132,135,1.597,136,3.673,137,2.597,138,2.132,139,2.597,140,2.597,141,0.532,142,2.597,143,2.523,144,3.804,145,4.634,146,3.015,147,3.015,148,1.44,149,1.504,150,2.259,151,2.582,152,3.673,153,3.015,154,3.673,155,4.634,156,3.673,157,3.673,158,3.673,159,3.673,160,1.601,161,3.673,162,3.673,163,3.673,164,1.296,165,2.597,166,3.673,167,2.597,168,3.673,169,2,170,0.666,171,3.673,172,3.673,173,0.916,174,1.296,175,1.296,176,0.916,177,1.636,178,0.916,179,2.597,180,0.916,181,0.667,182,0.916,183,0.743,184,0.916,185,0.743,186,0.916,187,0.743,188,0.916,189,0.743,190,0.916,191,0.916,192,0.743,193,0.916,194,0.743,195,0.743,196,0.916,197,0.743,198,0.916,199,0.916,200,0.916,201,0.025,202,0.025]],["title/injectables/AuthService.html",[57,0.853,203,0.685]],["body/injectables/AuthService.html",[3,0.199,4,0.199,8,0.171,10,0.766,13,0.563,14,0.675,19,0.681,22,0.537,29,0.563,31,1.258,42,0.312,43,0.279,46,0.768,48,1.817,49,0.478,50,2.394,51,2.394,54,0.406,57,0.668,60,1.072,62,0.794,63,0.935,64,0.042,65,0.935,66,0.473,67,0.935,68,0.618,69,0.527,70,0.783,72,0.825,74,2.146,78,1.608,79,2.117,80,1.379,81,2.041,82,0.663,83,1.083,86,1.397,87,3.11,88,3.11,91,2.146,92,0.537,94,0.33,95,1.019,97,1.003,101,0.507,102,0.507,107,2.204,114,2.41,115,3.25,116,1.634,120,0.52,121,0.171,125,0.229,128,0.507,129,0.199,130,0.199,131,0.888,141,1.197,143,1.273,148,1.953,150,2.094,160,1.484,164,1.991,169,1.273,170,0.68,195,0.411,201,0.016,202,0.016,203,0.537,204,0.698,205,1.01,206,1.919,207,1.609,208,2.337,209,2.337,210,2.337,211,2.796,212,2.337,213,2.337,214,2.796,215,2.796,216,2.796,217,2.305,218,2.337,219,2.337,220,1.179,221,1.436,222,1.846,223,2.337,224,1.609,225,1.019,226,1.437,227,1.437,228,1.114,229,1.855,230,1.919,231,1.436,232,1.751,233,2.172,234,2.715,235,1.822,236,2.825,237,3.853,238,3.22,239,1.919,240,1.436,241,2.394,242,1.643,243,1.919,244,1.436,245,1.919,246,1.436,247,1.019,248,1.273,249,1.919,250,1.919,251,1.919,252,1.436,253,1.136,254,1.288,255,1.919,256,1.436,257,1.437,258,1.919,259,1.436,260,1.643,261,3.187,262,2.978,263,1.919,264,1.919,265,1.655,266,3.299,267,1.436,268,2.471,269,1.919,270,1.436,271,1.436,272,2.041,273,1.136,274,1.919,275,2.404,276,1.436,277,1.919,278,2.394,279,1.436,280,1.643,281,1.919,282,1.436,283,1.919,284,1.919,285,1.436,286,1.919,287,1.953,288,2.078,289,2.078,290,2.078,291,1.273,292,1.437,293,1.136,294,1.437,295,0.743,296,1.919,297,1.436,298,1.817,299,0.782,300,0.782,301,1.179,302,0.782,303,0.883,304,3.104,305,1.179,306,1.179,307,1.919,308,1.179,309,0.698,310,0.698,311,0.698,312,0.456,313,1.083,314,0.782,315,0.782,316,1.609,317,2.094,318,0.626,319,1.01,320,2.041,321,0.782,322,1.179,323,1.866,324,3.299,325,1.179,326,1.179,327,1.179,328,1.179,329,3.625,330,1.179,331,1.919,332,1.179,333,1.643,334,1.179,335,1.179,336,1.179,337,1.179,338,1.179,339,1.179,340,1.179,341,1.919,342,1.179,343,1.179,344,4.152,345,1.608,346,1.179,347,1.608,348,4.34,349,1.179,350,1.179,351,1.179,352,1.179,353,3.478,354,1.179,355,1.179,356,1.919,357,2.426,358,3.748,359,2.426,360,3.299,361,1.179,362,1.179,363,0.698,364,1.179,365,1.919,366,1.643,367,1.179,368,1.179,369,1.179,370,1.179,371,1.179,372,1.179,373,1.179,374,1.179,375,3.078,376,0.883,377,1.179,378,1.817,379,2.825,380,2.394,381,1.179,382,1.179,383,1.179,384,1.179,385,1.919,386,1.817,387,2.426,388,1.919,389,1.919,390,1.919,391,1.919,392,1.919,393,1.643,394,1.643,395,1.919,396,2.426,397,0.883,398,1.179,399,1.179,400,0.782,401,1.179,402,2.796,403,1.179,404,1.179,405,1.179,406,1.919,407,2.796,408,2.796,409,1.919,410,2.041,411,2.796,412,1.179,413,1.179,414,1.01,415,1.179,416,1.01,417,0.883,418,1.288,419,0.825,420,1.01,421,1.919,422,1.179,423,1.01]],["title/components/CartComponent.html",[0,0.249,181,0.766]],["body/components/CartComponent.html",[0,0.365,1,0.782,2,1.21,3,0.379,4,0.379,5,0.965,6,0.965,7,0.965,8,0.326,10,0.794,11,1.476,13,0.553,14,0.595,16,1.851,19,0.654,24,1.344,25,1.547,26,0.965,27,1.785,28,1.441,30,1.21,31,0.875,32,1.21,33,1.393,38,1.21,40,2.074,42,0.228,43,0.454,46,0.795,49,0.78,53,1.507,54,0.523,55,2.244,56,1.869,60,1.106,62,0.831,63,0.897,64,0.042,65,1.02,66,0.503,67,0.897,68,0.859,69,0.565,70,1.089,71,2.583,73,2.341,76,2.341,82,0.595,86,1.125,92,1.145,94,1.007,100,2.625,101,1.344,102,1.344,103,1.718,107,1.071,120,0.658,121,0.326,123,1.681,125,0.436,129,0.379,130,0.379,131,0.795,149,0.965,170,0.859,173,0.965,174,1.344,175,1.344,176,0.965,177,1.673,178,0.965,180,0.965,181,1.217,182,0.965,183,0.782,184,0.965,185,0.782,186,0.965,187,0.782,188,0.965,189,0.782,190,0.965,191,0.965,192,0.782,193,0.965,194,0.782,195,0.782,196,0.965,197,0.782,198,0.965,199,0.965,200,0.965,201,0.026,202,0.026,225,2.066,228,1.02,232,2.066,247,1.66,248,2.074,253,1.851,254,2.066,273,1.851,309,1.328,310,1.328,311,1.328,312,0.869,313,1.21,419,1.344,424,1.921,425,3.126,426,2.915,427,2.341,428,3.598,429,3.126,430,3.126,431,3.598,432,3.452,433,3.891,434,3.126,435,3.126,436,3.891,437,3.808,438,1.21,439,2.074,440,2.733,441,2.915,442,2.733,443,2.341,444,2.733,445,3.256,446,2.341,447,2.941,448,3.126,449,2.249,450,2.733,451,3.173,452,2.695,453,2.733,454,2.733,455,0.965,456,2.244,457,2.581,458,2.244,459,1.488,460,3.126,461,2.244,462,2.244,463,3.126,464,2.244,465,2.915,466,2.244,467,2.244,468,2.244,469,2.244,470,4.091,471,3.808,472,3.126,473,3.808]],["title/interfaces/CartItem.html",[312,0.948,449,1.3]],["body/interfaces/CartItem.html",[3,0.419,4,0.419,8,0.36,10,0.649,13,0.581,14,0.589,19,0.649,29,1.182,42,0.251,43,0.486,44,1.854,46,0.896,54,0.36,56,1.064,62,0.819,64,0.042,66,0.498,68,0.739,69,0.55,70,0.936,71,2.49,78,1.165,80,0.774,82,0.486,83,0.959,86,1.325,94,0.936,95,1.314,97,0.617,100,2.816,103,1.182,105,3.038,107,1.808,114,1.776,120,0.64,121,0.36,125,0.481,128,1.064,129,0.419,130,0.419,131,0.936,135,1.854,141,0.944,170,0.547,201,0.028,202,0.028,203,0.936,207,1.642,221,1.466,224,2.218,225,2.442,226,1.854,227,1.854,228,1.132,229,2.218,232,1.776,235,1.466,253,1.466,254,1.314,268,2.505,273,1.466,291,1.642,292,1.854,293,1.466,294,1.854,295,0.959,298,2.505,299,1.642,300,1.642,302,1.642,309,1.98,310,1.98,311,1.98,312,0.959,313,1.69,318,1.314,320,2.96,321,1.642,323,1.744,410,1.642,419,1.064,426,1.854,427,3.173,432,1.854,438,0.959,439,1.642,441,3.27,443,1.854,445,3.038,446,3.038,447,3.135,449,2.011,451,3.445,452,2.837,457,2.896,465,2.505,474,1.854,475,2.12,476,2.476,477,2.476,478,4.056,479,2.476,480,3.787,481,3.787,482,2.476,483,3.345,484,2.476,485,3.787,486,3.787,487,3.787,488,2.476,489,2.12,490,2.864,491,2.12,492,2.12,493,3.345,494,2.476,495,2.476,496,2.476,497,2.476,498,2.476,499,2.476,500,2.476,501,2.476,502,2.476]],["title/interfaces/CartItem-1.html",[312,0.796,410,1.364,449,1.092]],["body/interfaces/CartItem-1.html",[0,0.365,3,0.467,4,0.467,8,0.401,10,0.698,11,1.393,13,0.54,14,0.616,16,1.635,19,0.654,24,1.187,25,1.546,27,1.069,28,0.864,30,1.069,31,0.773,32,1.069,33,1.392,38,1.069,40,1.832,42,0.28,43,0.523,46,0.61,53,1.069,54,0.401,56,1.821,62,0.836,64,0.042,66,0.52,68,0.794,69,0.523,70,1.006,71,2.564,73,2.068,76,2.068,86,1.25,94,1.119,100,2.827,103,1.717,107,1.909,120,0.716,121,0.401,123,2.068,125,0.536,129,0.467,130,0.467,131,0.883,170,0.794,181,0.864,201,0.03,202,0.03,225,2.434,228,1.056,232,1.909,247,1.466,248,1.832,253,1.635,254,1.466,273,1.635,309,2.129,310,2.129,311,2.129,312,1.069,313,1.743,419,1.187,424,2.365,425,2.762,426,2.068,427,2.068,428,3.596,429,2.762,430,2.762,431,2.762,432,2.995,433,2.762,436,2.762,438,1.069,439,1.832,441,2.693,443,2.068,445,3.289,446,2.068,447,3.118,448,2.762,449,2.248,451,3.434,452,2.693,455,1.187,456,3.596,457,2.987,458,3.596,459,1.832,460,3.596,461,2.762,462,2.762,463,3.596,464,2.762,465,2.693,466,2.762,467,2.762,468,2.762,469,2.762,470,2.762,474,2.068]],["title/injectables/CartService.html",[56,1.053,203,0.685]],["body/injectables/CartService.html",[3,0.366,4,0.366,8,0.314,10,0.813,13,0.588,14,0.587,19,0.681,29,1.033,42,0.22,43,0.443,44,2.642,46,1,49,0.76,54,0.513,56,1.31,60,1.114,62,0.82,63,0.955,64,0.042,65,0.955,66,0.496,67,0.955,68,0.846,69,0.609,70,1.072,71,2.55,78,1.334,80,0.953,82,0.638,83,1.18,86,1.416,92,1.072,94,0.605,95,1.618,97,0.76,100,2.757,101,0.93,102,0.93,103,1.033,105,3.291,107,1.033,114,2.033,120,0.596,121,0.314,125,0.42,128,0.93,129,0.366,130,0.366,131,0.892,135,1.62,141,0.88,170,0.673,201,0.025,202,0.025,203,0.853,204,1.281,207,2.34,220,2.163,221,2.088,224,2.34,225,2.332,226,2.282,227,2.282,228,1.161,229,2.54,232,2.033,235,1.804,253,1.804,254,1.618,268,2.868,273,1.804,291,2.021,292,2.282,293,1.804,294,2.282,295,1.18,298,2.642,299,1.435,300,1.435,302,1.435,309,1.281,310,1.281,311,1.281,312,0.838,313,1.18,318,1.148,320,2.854,321,1.435,323,1.646,410,1.435,419,1.31,426,2.282,427,3.023,432,1.62,434,3.047,435,3.047,438,1.18,439,2.021,441,3.46,443,2.282,445,3.023,446,3.137,447,3.065,449,1.873,451,3.223,452,2.642,457,2.021,465,2.282,475,1.853,476,3.047,477,2.163,478,3.829,479,3.829,480,3.528,481,4.037,482,3.047,483,3.047,484,2.163,485,3.528,486,3.528,487,3.528,488,2.163,489,2.609,490,3.021,491,2.609,492,2.609,493,3.047,494,2.163,495,2.163,496,2.163,497,2.163,498,3.829,499,2.163,500,2.163,501,3.829,502,2.163,503,3.047,504,3.712,505,2.635,506,2.635,507,2.635,508,2.635,509,2.635,510,2.635,511,2.635]],["title/components/ContactoComponent.html",[0,0.249,183,0.853]],["body/components/ContactoComponent.html",[0,0.376,1,0.824,2,1.256,3,0.4,4,0.4,5,1.017,6,1.017,7,1.017,8,0.344,10,0.719,11,1.5,13,0.576,19,0.714,22,0.908,24,1.394,25,1.591,26,1.017,27,1.802,28,1.455,30,1.256,31,1.036,32,1.256,33,1.433,38,1.256,40,2.151,42,0.24,43,0.471,49,0.809,53,1.541,54,0.538,60,1.074,62,0.746,63,0.59,64,0.042,65,0.923,66,0.398,67,0.59,68,0.716,69,0.626,70,0.908,78,1.13,80,1.442,82,0.538,92,0.908,97,0.993,101,1.017,102,1.017,120,0.626,121,0.344,125,0.46,129,0.4,130,0.4,131,0.523,141,0.59,144,4.491,149,1.017,153,3.243,160,2.214,164,1.793,170,0.817,173,1.017,174,1.394,175,1.394,176,1.017,177,1.711,178,1.017,180,1.017,181,0.74,182,1.017,183,1.387,184,1.017,185,0.824,186,1.017,187,0.824,188,1.017,189,0.824,190,1.017,191,1.017,192,0.824,193,1.017,194,0.824,195,0.824,196,1.017,197,0.824,198,1.017,199,1.017,200,1.017,201,0.027,202,0.027,228,0.809,238,2.772,291,2.151,313,1.708,418,1.256,455,1.017,459,1.57,512,2.367,513,2.536,514,2.191,515,3.951,516,3.951,517,4.508,518,4.508,519,2.357,520,3.951,521,4.508,522,2.883,523,2.611,524,3.951,525,3.951,526,2.777,527,2.777,528,2.883,529,1.722,530,1.548,531,2.883,532,1.92,533,1.92,534,2.191,535,2.883,536,3.243,537,3.243,538,3.7,539,2.883,540,2.883,541,3.951,542,3.951,543,3.951,544,4.508,545,1.401,546,2.883,547,2.883,548,2.469,549,2.883,550,1.57,551,2.883,552,1.773,553,5.08,554,4.41,555,2.883,556,3.951,557,2.883,558,2.883,559,2.883,560,2.883,561,2.729,562,2.979,563,2.982,564,2.982,565,3.951,566,2.982,567,2.429,568,2.429,569,2.64,570,1.548,571,2.429,572,2.64,573,2.151,574,2.151,575,3.951,576,3.951]],["title/injectables/DataInitializationService.html",[59,1.834,203,0.685]],["body/injectables/DataInitializationService.html",[3,0.552,4,0.552,8,0.475,29,1.559,42,0.331,43,0.581,46,0.994,49,0.997,54,0.581,59,2.994,60,1.077,63,0.814,64,0.042,65,0.814,66,0.491,67,0.814,82,0.475,83,1.548,120,0.761,121,0.475,125,0.634,128,1.404,129,0.552,130,0.552,141,0.814,148,1.559,201,0.033,202,0.033,203,1.119,204,1.933,207,2.866,221,2.558,222,2.495,224,2.866,295,1.265,299,2.166,300,2.166,302,2.166,303,2.446,318,1.734,319,2.797,320,2.652,321,2.166,345,1.265,347,1.265,420,2.797,577,4.502,578,3.266,579,5.484,580,3.266,581,4.87,582,3.978,583,3.998,584,3.978,585,3.978,586,2.446,587,3.266,588,2.446,589,3.266,590,3.978,591,3.266,592,3.998,593,3.978,594,3.978,595,3.978,596,3.978,597,3.978,598,3.978,599,3.978,600,3.978,601,3.978,602,3.978,603,4.87,604,3.978,605,3.978]],["title/components/HomeComponent.html",[0,0.249,185,0.853]],["body/components/HomeComponent.html",[0,0.343,1,0.698,2,1.118,3,0.339,4,0.339,5,0.862,6,0.862,7,0.862,8,0.291,10,0.793,11,1.422,12,2.472,13,0.591,14,0.673,19,0.593,22,1.246,26,0.862,27,1.746,28,1.41,30,1.118,31,0.808,32,1.118,33,1.309,38,1.118,40,1.915,42,0.203,43,0.419,44,2.533,46,0.638,49,0.72,53,1.433,54,0.538,56,1.852,60,1.124,62,0.69,63,0.923,64,0.042,65,1.018,66,0.539,67,0.923,68,0.902,69,0.647,70,0.808,71,2.476,74,2.417,82,0.57,86,0.903,92,1.097,97,1.124,100,2.636,101,1.686,102,1.686,103,2.056,105,2.162,106,2.886,118,2.472,120,0.625,121,0.291,123,1.502,125,0.389,129,0.339,130,0.339,131,0.866,133,2.005,134,2.005,135,1.502,143,1.915,149,0.862,169,1.915,170,0.951,173,0.862,174,1.241,175,1.241,176,0.862,177,1.591,178,0.862,180,0.862,181,0.627,182,0.862,183,0.698,184,0.862,185,1.289,186,0.862,187,0.698,188,0.862,189,0.698,190,0.862,191,0.862,192,0.698,193,0.862,194,0.698,195,0.698,196,0.862,197,0.698,198,0.862,199,0.862,200,0.862,201,0.024,202,0.024,225,2.168,228,0.72,232,1.532,247,1.532,248,1.915,272,2.709,345,0.776,347,1.309,380,2.472,439,1.915,447,2.454,457,1.915,489,2.472,490,2.472,491,3.168,492,2.472,503,2.886,529,1.532,572,1.915,586,2.533,588,3.59,591,2.005,592,3.7,606,2.005,607,3.516,608,3.516,609,5.246,610,3.516,611,4.507,612,3.516,613,3.516,614,3.516,615,4.12,616,4.12,617,3.516,618,4.507,619,3.516,620,2.442,621,3.152,622,3.516,623,2.442,624,3.516,625,2.442,626,4.507,627,4.507,628,5.55,629,5.424,630,5.126,631,3.516,632,2.442,633,2.442,634,3.516,635,3.516,636,3.516,637,2.442,638,2.442,639,2.442,640,2.442,641,3.516,642,2.442,643,3.516,644,2.442,645,2.442,646,2.442,647,2.442,648,2.442,649,2.442,650,2.442,651,3.516,652,2.442,653,2.442,654,2.442,655,2.442,656,2.442,657,2.005,658,2.442,659,2.442,660,3.516,661,2.442,662,2.442,663,2.442,664,2.442,665,2.442,666,3.516,667,3.516,668,3.516,669,3.516,670,3.516]],["title/injectables/JsonService.html",[203,0.685,222,1.3]],["body/injectables/JsonService.html",[3,0.348,4,0.348,8,0.299,13,0.607,14,0.691,19,0.63,29,0.982,42,0.209,43,0.427,46,0.975,49,0.733,54,0.299,60,1.151,62,0.696,63,0.933,64,0.042,65,0.933,66,0.578,67,0.933,69,0.599,82,0.599,92,0.823,97,0.733,101,1.771,102,1.771,107,1.638,114,2.343,120,0.58,121,0.299,128,0.884,129,0.348,130,0.348,141,0.933,148,2.138,169,2.483,170,0.827,201,0.024,202,0.024,203,0.823,204,1.217,221,2.031,222,1.56,272,2.732,295,1.595,318,1.091,345,1.138,347,1.449,393,3.983,394,4.032,438,1.679,459,1.364,586,3.354,588,3.354,671,2.056,672,4.178,673,4.178,674,4.178,675,4.178,676,4.178,677,4.178,678,4.559,679,4.559,680,4.559,681,3.58,682,3.58,683,3.58,684,2.504,685,4.559,686,3.58,687,4.336,688,2.504,689,5.017,690,3.58,691,2.504,692,2.504,693,2.504,694,2.504,695,5.017,696,2.302,697,5.017,698,3.58,699,2.504,700,2.504,701,3.58,702,3.58,703,2.504,704,3.58,705,5.017,706,5.165,707,5.017,708,5.017,709,5.017,710,5.017,711,3.58,712,4.559,713,4.559,714,4.559,715,4.559,716,2.504,717,5.017,718,5.017,719,5.017,720,4.578,721,3.58,722,4.559,723,4.559,724,4.559,725,4.559,726,2.504,727,3.58,728,4.559,729,4.559,730,4.559,731,4.559,732,2.504,733,5.017,734,4.118,735,3.58,736,2.504,737,5.017,738,3.58,739,2.504,740,3.58,741,2.504,742,2.504,743,2.504,744,2.504,745,2.504,746,2.504,747,4.559,748,3.58,749,3.58,750,3.58,751,3.58,752,2.504,753,2.504,754,2.504,755,2.504,756,2.504,757,2.504,758,2.504,759,2.504]],["title/components/LoginComponent.html",[0,0.249,187,0.853]],["body/components/LoginComponent.html",[0,0.377,1,0.832,2,1.264,3,0.404,4,0.404,5,1.027,6,1.027,7,1.027,8,0.347,10,0.722,11,1.504,13,0.601,14,0.581,18,2.165,19,0.692,20,3.459,22,0.913,24,1.403,25,1.598,26,1.027,27,1.805,28,1.458,30,1.264,31,0.913,32,1.264,33,1.439,35,3.718,38,1.264,42,0.242,43,0.474,46,0.821,49,0.814,53,1.547,54,0.581,57,1.568,60,0.996,62,0.676,63,0.596,64,0.042,65,0.927,66,0.401,67,0.596,68,0.721,69,0.628,70,0.913,72,1.403,80,1.25,82,0.474,91,2.831,92,0.913,120,0.707,121,0.347,122,1.584,124,1.414,125,0.464,129,0.404,130,0.404,131,0.821,143,3.063,146,3.264,148,1.558,149,1.027,151,3.422,164,1.403,173,1.027,174,1.403,175,1.403,176,1.027,177,1.718,178,1.027,180,1.027,181,0.747,182,1.027,183,0.832,184,1.027,185,0.832,186,1.027,187,1.392,188,1.027,189,0.832,190,1.027,191,1.027,192,0.832,193,1.027,194,0.832,195,0.832,196,1.027,197,0.832,198,1.027,199,1.027,200,1.027,201,0.027,202,0.027,217,2.444,228,0.927,233,2.347,265,1.414,275,2.165,278,2.045,287,1.414,323,1.027,345,0.925,347,1.439,455,1.027,513,2.389,514,2.201,519,2.365,523,2.557,529,1.733,530,1.558,532,1.932,533,1.932,534,2.201,545,1.414,548,1.932,550,1.584,561,1.932,567,3.235,568,3.311,570,1.558,760,1.584,761,2.388,762,2.165,763,4.529,764,3.975,765,4.529,766,1.584,767,3.975,768,2.466,769,2.165,770,2.795,771,2.909,772,2.909,773,2.909,774,1.584,775,2.909,776,2.909,777,2.909,778,2.909,779,2.165,780,2.909,781,2.909,782,2.909,783,2.909,784,2.165,785,2.165,786,2.388,787,2.045,788,3.264,789,1.789,790,1.789,791,2.909,792,1.789,793,1.789,794,2.444,795,2.165,796,2.165,797,3.975,798,3.975,799,3.975,800,3.264]],["title/components/ManagerUsersComponent.html",[0,0.249,189,0.853]],["body/components/ManagerUsersComponent.html",[0,0.306,1,0.574,2,0.967,3,0.279,4,0.279,5,0.709,6,0.709,7,0.709,8,0.24,10,0.702,11,1.325,13,0.579,14,0.618,19,0.699,22,0.699,24,1.074,25,1.297,26,0.709,27,1.672,28,1.35,30,0.967,31,1.012,32,0.967,33,1.168,38,0.967,42,0.167,43,0.363,46,0.552,49,0.623,53,1.303,54,0.489,57,1.418,60,1.104,62,0.688,63,0.839,64,0.042,65,0.949,66,0.5,67,0.839,68,0.552,69,0.618,72,1.074,77,1.479,78,1.172,79,2.035,80,1.399,81,2.232,82,0.606,83,1.168,86,0.781,90,2.498,92,1.106,94,0.461,95,0.875,97,0.949,101,1.297,102,1.447,103,1.193,116,2.02,118,2.139,120,0.569,121,0.24,124,0.976,125,0.32,129,0.279,130,0.279,131,0.743,141,0.411,147,2.498,148,2.171,149,0.709,160,2.213,164,1.792,170,0.666,173,0.709,174,1.074,175,1.074,176,0.709,177,1.447,178,0.709,180,0.709,181,0.516,182,0.709,183,0.574,184,0.709,185,0.574,186,0.709,187,0.574,188,0.709,189,1.172,190,1.75,191,0.709,192,0.574,193,0.709,194,0.574,195,0.574,196,0.709,197,0.574,198,0.709,199,0.709,200,0.709,201,0.021,202,0.021,228,0.986,238,2.259,247,1.786,254,2.02,272,2.232,280,2.139,295,0.967,313,1.53,314,2.524,315,2.524,316,1.094,317,2.96,323,1.447,333,2.139,345,1.168,347,1.576,363,1.479,378,1.871,386,1.235,414,1.412,418,1.326,419,1.074,423,1.412,455,0.709,472,2.498,513,2.375,514,1.785,519,1.992,523,2.252,529,1.786,530,1.193,532,1.992,533,1.479,534,1.785,545,0.976,548,2.14,550,1.094,552,1.235,561,2.41,562,2.232,569,1.657,571,1.871,573,1.657,574,1.657,657,1.649,696,1.326,760,1.094,762,1.657,766,1.094,768,2,769,1.657,770,2.139,774,1.094,779,2.232,784,2,785,2,786,3.016,787,2.583,792,1.235,793,1.235,794,1.871,795,1.657,796,1.657,801,4.473,802,4.473,803,1.649,804,3.043,805,4.404,806,3.674,807,3.043,808,3.674,809,3.674,810,3.674,811,4.099,812,3.043,813,2.139,814,3.043,815,4.099,816,4.099,817,3.043,818,2.008,819,4.634,820,4.959,821,3.043,822,2.008,823,3.043,824,2.139,825,2.008,826,1.871,827,1.871,828,3.096,829,2.139,830,2.85,831,2.139,832,2.139,833,2.139,834,3.096,835,3.043,836,2.008,837,3.043,838,5.176,839,2.008,840,2.008,841,2.008,842,2.008,843,2.008,844,2.008,845,3.043,846,2.008,847,3.674,848,2.008,849,2.008,850,2.008,851,1.235,852,1.412,853,2.008,854,2.008,855,4.404,856,2.008,857,3.674,858,2.008,859,3.043,860,2.008,861,2.008,862,2.008,863,2.008,864,3.043,865,2.008,866,3.043,867,2.008,868,3.674,869,2.008,870,2.008,871,2.008,872,2.008,873,2.008,874,3.674,875,2.008,876,2.008,877,2.008,878,1.412,879,1.412,880,1.412,881,1.412,882,1.412,883,1.412,884,2.139,885,1.412,886,1.412,887,3.043,888,3.043,889,1.871,890,1.871,891,2.139,892,2.139,893,2.139,894,2.008,895,2.008,896,2.008,897,2.008,898,2.008,899,2.008,900,2.008,901,2.008]],["title/components/ModificarPerfilComponent.html",[0,0.249,192,0.853]],["body/components/ModificarPerfilComponent.html",[0,0.312,1,0.592,2,0.99,3,0.287,4,0.287,5,0.731,6,0.731,7,0.731,8,0.247,10,0.711,11,1.391,13,0.569,14,0.685,16,1.513,19,0.673,22,1.199,24,1.099,25,1.321,26,0.731,27,1.684,28,1.36,30,0.99,31,0.956,32,0.99,33,1.19,38,0.99,42,0.173,43,0.372,46,0.565,48,2.559,49,0.637,53,1.323,54,0.497,57,1.431,60,1.048,62,0.773,63,0.766,64,0.042,65,0.914,66,0.473,67,0.766,68,0.565,69,0.654,72,1.099,74,2.279,77,2.023,78,1.431,79,1.655,80,1.378,82,0.58,83,0.658,86,0.532,92,0.86,94,0.956,97,1.068,115,1.915,116,2.181,120,0.578,121,0.247,124,1.006,125,0.33,129,0.287,130,0.287,131,0.755,138,2.556,141,0.424,149,1.99,150,3.3,160,2.12,170,0.908,173,0.731,174,1.099,175,1.099,176,0.731,177,1.469,178,0.731,180,0.731,181,0.532,182,0.731,183,0.592,184,0.731,185,0.592,186,0.731,187,0.592,188,0.731,189,0.592,190,0.731,191,0.731,192,1.19,193,0.731,194,0.592,195,0.592,196,0.731,197,0.592,198,0.731,199,0.731,200,0.731,201,0.021,202,0.021,228,1.025,233,2.537,234,1.915,235,2.279,241,1.456,247,1.357,287,1.513,295,0.99,313,1.419,314,2.267,315,2.267,316,1.128,323,1.575,345,0.99,347,1.706,363,2.023,378,1.915,386,1.273,400,1.696,416,1.456,417,2.301,418,1.357,419,1.807,438,1.49,455,0.731,513,2.273,514,1.819,523,2.279,526,2.926,527,2.189,529,1.357,530,1.22,532,2.023,533,2.023,534,2.535,545,1.513,548,2.169,552,1.273,561,2.023,562,2.553,563,1.915,564,1.915,566,1.915,569,1.696,570,1.631,571,1.915,572,1.696,573,1.696,574,1.696,696,2.043,760,1.128,762,1.696,766,1.128,768,2.038,769,1.696,774,1.696,779,2.267,784,1.696,785,1.696,789,1.915,790,1.915,796,2.267,800,2.556,813,2.189,824,2.189,826,2.559,827,2.559,828,3.138,829,2.189,830,2.559,831,2.189,832,1.456,833,2.189,834,3.138,851,1.273,852,1.456,878,1.456,879,1.456,880,1.456,881,1.456,882,1.456,883,1.456,884,2.189,885,1.456,886,1.456,889,2.559,890,1.915,891,2.189,892,2.189,893,2.189,902,4.282,903,4.282,904,1.7,905,3.849,906,3.743,907,3.114,908,3.072,909,3.743,910,4.163,911,4.163,912,2.189,913,3.114,914,2.926,915,2.071,916,2.631,917,2.071,918,2.071,919,3.114,920,2.071,921,3.114,922,2.071,923,3.296,924,2.189,925,3.114,926,2.189,927,2.926,928,2.189,929,2.189,930,2.071,931,2.071,932,3.114,933,2.071,934,2.071,935,2.071,936,2.071,937,1.7,938,1.456,939,1.456,940,1.456,941,1.7,942,1.456,943,2.071,944,2.071,945,2.071,946,2.071,947,2.071,948,2.071,949,3.114,950,2.071,951,3.743,952,3.114,953,3.114,954,4.163,955,1.7,956,1.7,957,2.071,958,2.071,959,2.071,960,2.556,961,2.189,962,2.189,963,2.189,964,2.926,965,2.189,966,2.189,967,2.189,968,2.189,969,2.926]],["title/injectables/ProductosService.html",[203,0.685,621,1.834]],["body/injectables/ProductosService.html",[3,0.592,4,0.592,8,0.509,13,0.512,14,0.509,29,1.672,42,0.356,49,1.04,54,0.509,60,1.04,63,0.873,64,0.042,65,0.873,66,0.43,67,0.873,82,0.509,94,0.98,114,2.364,120,0.753,121,0.509,128,1.506,129,0.592,130,0.592,141,0.873,201,0.035,202,0.035,203,1.167,204,2.074,222,2.536,303,2.624,304,3,318,1.86,459,2.324,580,3.503,583,4.17,586,3.124,587,3.503,588,3.124,589,3.503,621,3.124,970,3.503,971,5.615,972,4.267,973,4.267,974,4.267,975,4.267,976,4.267,977,3.503,978,4.267,979,4.267,980,4.267,981,4.267,982,4.267]],["title/components/RecuperarPasswordComponent.html",[0,0.249,194,0.853]],["body/components/RecuperarPasswordComponent.html",[0,0.325,1,0.636,2,1.044,3,0.309,4,0.309,5,0.785,6,0.785,7,0.785,8,0.265,10,0.687,11,1.377,13,0.578,14,0.65,16,1.596,18,1.788,19,0.683,20,3.264,22,1.252,24,1.159,25,1.378,26,0.785,27,1.711,28,1.382,30,1.044,31,0.991,32,1.044,33,1.241,38,1.044,42,0.185,43,0.392,46,0.708,49,0.672,53,1.37,54,0.514,57,1.462,60,1.019,62,0.598,63,0.672,64,0.042,65,0.883,66,0.435,67,0.672,68,0.595,69,0.65,70,0.754,72,1.159,77,1.596,78,1.233,80,1.278,82,0.549,92,0.897,94,0.991,97,1.087,116,2.004,120,0.638,121,0.265,122,1.211,124,1.081,125,0.354,129,0.309,130,0.309,131,0.782,141,0.672,149,0.785,164,1.378,170,0.873,173,0.785,174,1.159,175,1.159,176,0.785,177,1.522,178,0.785,180,0.785,181,0.571,182,0.785,183,0.636,184,0.785,185,0.636,186,0.785,187,0.636,188,0.785,189,0.636,190,0.785,191,0.785,192,0.636,193,0.785,194,1.233,195,1.54,196,0.785,197,0.636,198,0.785,199,0.785,200,0.785,201,0.022,202,0.022,228,1.087,233,2.549,234,2.651,235,2.339,257,1.367,260,2.308,261,3.564,262,3.5,265,1.081,275,1.788,287,1.596,293,1.081,323,1.699,345,1.044,347,1.625,363,1.596,376,1.367,397,2.651,400,1.788,417,1.367,418,0.969,419,0.785,438,1.53,455,0.785,513,2.098,514,1.897,519,2.095,523,2.339,526,3.031,527,2.308,529,1.431,530,1.287,532,1.596,533,1.596,534,2.235,536,1.825,537,1.825,538,2.696,545,1.596,548,2.095,550,1.211,561,2.095,562,2.621,563,2.019,564,2.019,566,2.019,567,3.35,568,3.264,569,1.788,570,1.69,572,1.788,574,1.788,696,1.431,760,1.211,762,1.788,766,1.211,768,2.126,769,1.788,774,1.788,779,1.788,784,2.126,785,2.126,787,1.563,789,2.019,790,2.019,792,1.367,793,1.367,794,2.019,795,1.788,796,1.788,826,2.019,827,2.019,830,2.019,851,1.367,889,2.019,890,2.019,905,2.696,908,3.205,912,2.308,914,3.384,916,2.744,923,3.384,924,2.308,926,2.308,927,3.031,928,2.744,929,2.308,937,1.825,938,1.563,939,1.563,940,1.563,941,3.205,942,1.563,955,1.825,956,1.825,961,2.308,962,3.031,963,2.308,964,3.031,965,2.308,966,2.308,967,2.308,968,2.308,969,3.031,983,4.196,984,4.196,985,1.825,986,3.284,987,3.904,988,3.284,989,3.904,990,4.311,991,3.284,992,2.223,993,3.284,994,3.284,995,2.223,996,2.223,997,2.696,998,2.223,999,2.223,1000,4.814,1001,2.223,1002,2.223,1003,2.223,1004,2.223,1005,2.223,1006,2.223,1007,2.223,1008,2.223,1009,2.223,1010,3.284,1011,2.223,1012,2.223,1013,2.696,1014,2.223,1015,2.223,1016,2.223,1017,2.223,1018,2.223,1019,2.223,1020,1.825,1021,2.223,1022,2.223,1023,2.223]],["title/components/RegistrarmeComponent.html",[0,0.249,197,0.853]],["body/components/RegistrarmeComponent.html",[0,0.327,1,0.641,2,1.051,3,0.311,4,0.311,5,0.792,6,0.792,7,0.792,8,0.268,10,0.736,11,1.381,13,0.587,14,0.664,16,1.606,18,1.8,19,0.687,20,3.271,22,1.177,24,1.167,25,1.385,26,0.792,27,1.715,28,1.385,30,1.051,31,1.061,32,1.051,33,1.247,38,1.051,42,0.187,43,0.394,46,0.712,49,0.677,53,1.376,54,0.517,57,1.465,60,0.989,62,0.67,63,0.803,64,0.042,65,0.945,66,0.437,67,0.803,68,0.599,69,0.651,70,0.759,72,1.167,77,2.104,78,1.465,79,1.704,80,1.428,82,0.576,83,0.713,91,1.09,92,0.759,94,0.995,97,0.677,116,2.233,120,0.641,121,0.268,122,1.222,124,1.09,125,0.358,129,0.311,130,0.311,131,0.837,141,0.677,148,1.295,149,0.792,160,2.176,164,0.792,170,0.599,173,0.792,174,1.167,175,1.167,176,0.792,177,1.528,178,0.792,180,0.792,181,0.576,182,0.792,183,0.641,184,0.792,185,0.641,186,0.792,187,0.641,188,0.792,189,0.641,190,0.792,191,0.792,192,0.641,193,0.792,194,0.641,195,0.641,196,0.792,197,1.238,198,1.629,199,0.792,200,0.792,201,0.022,202,0.022,228,1.022,233,2.379,242,2.323,261,1.379,265,1.09,275,2.137,287,1.09,288,1.577,289,3.837,290,1.577,293,1.09,295,1.051,313,1.467,314,2.358,315,2.358,316,1.222,317,1.379,323,1.704,345,0.713,347,1.587,363,2.104,366,2.759,376,2.032,400,1.8,418,0.978,438,1.535,455,0.792,513,2.318,514,1.907,519,2.104,523,2.347,529,1.44,530,1.295,532,1.606,533,1.606,534,1.907,545,1.606,548,2.347,550,1.222,552,1.379,561,2.347,562,2.63,563,2.032,564,2.032,566,2.032,567,3.07,568,3.07,569,1.8,570,1.697,571,2.032,572,1.8,573,1.8,574,1.8,696,1.887,760,1.222,762,1.8,766,1.222,768,2.137,769,1.8,770,2.323,774,1.222,779,1.8,784,1.8,785,1.8,788,2.713,789,1.379,790,1.379,792,1.379,793,1.379,794,2.032,795,1.8,796,2.358,813,2.323,824,2.323,826,2.662,827,2.662,828,3.245,829,2.323,830,2.969,831,2.323,832,2.323,833,2.323,834,3.245,851,1.379,852,1.577,878,1.577,879,1.577,880,1.577,881,1.577,882,1.577,883,1.577,884,2.323,885,1.577,886,1.577,889,2.662,890,2.032,891,2.323,892,2.323,912,2.323,914,3.395,916,2.759,923,3.395,924,2.323,926,2.323,927,3.044,928,2.323,929,2.323,938,1.577,939,1.577,940,1.577,942,1.577,960,2.713,961,2.323,962,2.323,963,2.323,964,3.044,965,2.323,966,2.323,967,2.323,968,2.323,969,3.044,997,2.713,1013,1.842,1020,1.842,1024,1.842,1025,3.924,1026,3.305,1027,3.924,1028,3.305,1029,2.243,1030,2.243,1031,2.243,1032,2.243,1033,2.243,1034,2.243,1035,2.243,1036,2.243,1037,2.243,1038,2.243,1039,2.243,1040,2.243,1041,2.243,1042,2.243,1043,2.243,1044,1.842,1045,1.577,1046,1.842,1047,2.243,1048,3.305,1049,3.305]],["title/interfaces/Usuario.html",[79,1.053,312,0.948]],["body/interfaces/Usuario.html",[3,0.242,4,0.242,8,0.208,10,0.435,13,0.557,14,0.663,19,0.663,22,0.401,29,0.684,31,1.229,42,0.344,43,0.326,46,0.61,48,1.072,50,1.226,51,1.226,54,0.326,57,0.499,62,0.789,64,0.042,66,0.416,68,0.495,69,0.454,70,0.627,72,0.616,74,1.849,78,1.53,79,2.115,80,1.279,81,1.831,82,0.615,83,0.868,86,1.359,87,2.814,88,2.814,91,1.849,94,0.627,95,0.76,97,1.056,107,2.21,114,2.279,115,2.994,116,1.466,120,0.573,121,0.208,125,0.278,128,0.616,129,0.242,130,0.242,131,0.935,141,1.216,143,0.95,148,1.952,150,1.678,160,2.065,164,1.999,169,0.95,170,0.61,195,0.499,201,0.019,202,0.019,203,0.627,205,1.226,206,1.432,207,0.95,211,1.432,214,1.432,215,1.432,216,1.432,217,1.678,221,0.848,222,1.466,224,1.486,225,0.76,226,1.072,227,1.072,228,1.071,229,1.486,230,1.432,232,1.466,233,2.065,234,2.539,235,1.634,236,2.364,237,3.39,238,2.994,239,1.432,241,2.364,242,1.226,243,1.432,245,1.432,247,0.76,248,0.95,249,1.432,250,1.432,251,1.432,253,0.848,254,1.19,255,1.432,257,1.072,258,1.432,260,1.226,261,3.122,262,2.675,263,1.432,264,1.432,265,1.327,266,3.123,268,2.068,269,1.432,272,2.072,273,0.848,274,1.432,275,2.385,277,1.432,278,1.919,280,1.226,281,1.432,283,1.432,284,1.432,286,1.432,287,1.849,288,1.919,289,1.919,290,1.919,291,0.95,292,1.072,293,0.848,294,1.072,295,0.554,296,1.432,298,1.678,299,0.95,300,0.95,301,1.432,302,0.95,303,1.072,304,3.33,305,1.432,306,1.432,307,2.241,308,1.432,309,1.327,310,1.327,311,1.327,312,0.554,313,1.506,314,1.486,315,1.486,316,2.385,317,2.913,318,0.76,319,1.226,320,2.249,321,0.95,322,1.432,323,1.936,324,3.595,325,1.432,326,1.432,327,1.432,328,1.432,329,3.889,330,1.432,331,2.241,332,1.432,333,1.919,334,1.432,335,1.432,336,1.432,337,1.432,338,1.432,339,1.432,340,1.432,341,2.241,342,1.432,343,1.432,344,4.346,345,1.683,346,1.432,347,1.683,348,4.502,349,1.432,350,1.432,351,1.432,352,1.432,353,3.757,354,1.432,355,1.432,356,2.241,357,2.761,358,3.998,359,2.761,360,3.595,361,1.432,362,1.432,363,0.848,364,1.432,365,2.241,366,1.919,367,1.432,368,1.432,369,1.432,370,1.432,371,1.432,372,1.432,373,1.432,374,1.432,375,3.39,376,1.072,377,1.432,378,2.068,379,3.079,380,2.675,381,1.432,382,1.432,383,1.432,384,1.432,385,2.241,386,2.068,387,2.761,388,2.241,389,2.241,390,2.241,391,2.241,392,2.241,393,1.919,394,1.919,395,2.241,396,2.761,397,1.072,398,1.432,399,1.432,400,0.95,401,1.432,402,3.123,403,1.432,404,1.432,405,1.432,406,2.241,407,3.123,408,3.123,409,2.241,410,2.249,411,3.123,412,1.432,413,1.432,414,1.226,415,1.432,416,1.226,417,1.072,418,1.466,419,0.963,420,1.226,421,2.241,422,1.432,423,1.226,474,1.072]],["title/coverage.html",[1050,3.32]],["body/coverage.html",[0,0.491,1,1.133,8,0.473,9,3.251,28,1.017,56,1.398,57,1.133,59,2.435,64,0.042,66,0.399,79,1.398,103,1.903,181,1.017,183,1.133,185,1.133,187,1.133,189,1.133,192,1.133,194,1.133,197,1.133,201,0.033,202,0.033,203,1.291,205,3.414,222,1.726,295,1.259,312,1.669,424,3.414,449,2.116,475,3.414,512,3.251,577,3.251,578,3.251,606,3.251,621,2.435,671,3.251,761,3.251,801,3.251,802,3.251,803,3.251,902,3.251,903,3.251,904,3.251,970,3.251,983,3.251,984,3.251,985,3.251,1024,3.251,1050,3.251,1051,3.961,1052,3.961,1053,3.961,1054,3.987,1055,4.856,1056,6.098,1057,5.719,1058,3.251,1059,5.252,1060,3.987,1061,5.476,1062,3.251,1063,3.251,1064,3.251,1065,3.251,1066,3.961,1067,5.252,1068,4.856,1069,3.961,1070,3.961,1071,3.961,1072,3.961,1073,3.961,1074,3.961,1075,3.961,1076,3.961,1077,3.961,1078,3.251,1079,2.784,1080,3.961,1081,3.961]],["title/dependencies.html",[1082,2.056,1083,2.939]],["body/dependencies.html",[64,0.042,121,0.526,122,2.402,125,0.703,128,1.557,201,0.035,202,0.035,379,3.101,455,1.557,1079,3.642,1083,3.621,1084,4.411,1085,5.994,1086,4.411,1087,4.411,1088,4.411,1089,5.501,1090,5.181,1091,4.411,1092,4.411,1093,4.411,1094,4.411,1095,4.411,1096,4.411,1097,4.411,1098,4.411,1099,4.411,1100,3.621,1101,4.411,1102,4.411,1103,4.411,1104,4.411,1105,4.411,1106,3.621,1107,4.411]],["title/miscellaneous/functions.html",[1108,1.54,1109,2.939]],["body/miscellaneous/functions.html",[13,0.46,14,0.544,15,3.205,19,0.63,22,1.048,28,1.432,42,0.38,64,0.039,69,0.544,82,0.63,92,1.048,201,0.036,202,0.036,530,1.787,570,1.787,1044,3.743,1054,4.578,1058,4.578,1100,4.336,1108,2.803,1109,3.743,1110,4.559,1111,3.713,1112,4.559,1113,4.559,1114,4.559,1115,4.559,1116,4.559]],["title/index.html",[42,0.209,1117,2.505,1118,2.505]],["body/index.html",[10,0.795,11,1.426,13,0.602,14,0.595,18,1.923,19,0.703,22,1.039,54,0.421,56,1.247,57,1.01,58,2.9,62,0.784,64,0.04,68,0.985,69,0.682,70,0.812,71,1.539,72,1.595,73,2.172,74,2.423,76,3.231,77,1.717,78,1.293,79,1.595,80,1.161,81,2.461,82,0.421,83,1.123,84,2.9,85,2.9,86,1.161,87,2.172,88,2.172,91,1.717,94,1.207,95,2.462,97,1.02,131,0.953,141,0.723,151,2.483,164,1.247,170,0.641,201,0.031,202,0.031,217,2.172,228,0.723,229,1.923,233,1.97,257,3.231,265,2.423,397,2.172,438,1.123,513,1.97,519,1.717,554,2.9,570,2.178,696,2.29,734,2.9,795,1.923,977,2.9,1045,3.504,1046,2.9,1111,2.483,1119,3.532,1120,3.532,1121,2.9,1122,5.255,1123,3.532,1124,4.52,1125,4.52,1126,3.532,1127,3.532,1128,3.532,1129,3.532,1130,3.532,1131,3.532,1132,4.985,1133,3.532,1134,3.532,1135,3.532,1136,3.532,1137,3.532,1138,3.532,1139,4.092,1140,3.711,1141,4.52,1142,4.52,1143,4.52,1144,3.532,1145,4.52,1146,3.532,1147,3.532,1148,3.532,1149,3.532,1150,4.52,1151,3.532,1152,3.532,1153,3.532,1154,4.52,1155,3.532,1156,4.52,1157,3.532,1158,3.532,1159,3.532,1160,3.532,1161,3.532,1162,3.532,1163,3.532,1164,3.532,1165,3.532,1166,3.532,1167,3.532,1168,3.532,1169,3.532,1170,3.532,1171,3.532,1172,4.52,1173,3.532,1174,4.52,1175,3.532,1176,3.532,1177,4.52,1178,3.532,1179,3.532,1180,4.52,1181,3.532,1182,3.532,1183,3.532,1184,3.532,1185,3.532,1186,3.532,1187,3.532,1188,4.985,1189,4.52,1190,3.532,1191,3.532,1192,3.532,1193,3.532]],["title/modules.html",[1194,3.32]],["body/modules.html",[64,0.037,201,0.037,202,0.037,1194,3.925]],["title/overview.html",[1195,3.32]],["body/overview.html",[2,1.508,64,0.037,201,0.037,202,0.037,204,2.305,474,2.916,573,2.583,1195,3.894,1196,4.743,1197,4.743]],["title/properties.html",[43,0.427,1082,2.056]],["body/properties.html",[43,0.568,64,0.039,201,0.037,202,0.037,1198,4.762,1199,4.762]],["title/miscellaneous/variables.html",[1108,1.54,1200,2.939]],["body/miscellaneous/variables.html",[10,0.862,12,2.685,13,0.595,14,0.686,15,3.909,19,0.676,22,0.877,31,0.877,42,0.318,62,0.772,64,0.042,66,0.479,69,0.663,86,1.327,97,0.782,101,1.908,102,1.908,201,0.032,202,0.032,236,2.685,438,1.509,530,1.861,570,1.861,687,3.898,696,1.664,720,3.135,893,3.338,1045,2.685,1060,3.135,1062,4.242,1063,4.242,1064,3.135,1065,3.898,1078,3.135,1079,3.338,1106,3.135,1108,2.348,1111,3.801,1121,4.242,1139,3.135,1140,3.898,1200,3.135,1201,3.819,1202,3.819,1203,4.748,1204,4.748,1205,4.748,1206,3.819,1207,3.819,1208,3.819,1209,3.819,1210,3.819,1211,3.819,1212,3.819,1213,3.819,1214,3.819,1215,3.819,1216,3.819,1217,3.819,1218,3.819,1219,3.819,1220,3.819,1221,3.819,1222,3.819,1223,3.819,1224,5.168,1225,3.819,1226,3.819,1227,3.819,1228,3.819,1229,4.748,1230,3.819,1231,3.819,1232,3.819,1233,3.819,1234,3.819,1235,3.819,1236,3.819,1237,3.819,1238,5.168,1239,3.819,1240,3.819,1241,4.748,1242,3.819,1243,3.819,1244,3.819,1245,3.819]]],"invertedIndex":[["",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1199,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":897,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["0/3",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["02cfbe260069",{"_index":731,"title":{},"body":{"injectables/JsonService.html":{}}}],["1",{"_index":410,"title":{"interfaces/CartItem-1.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["1.11.3",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["1.75rem",{"_index":900,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["1/1",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":575,"title":{},"body":{"components/ContactoComponent.html":{}}}],["10.12.3",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["100000",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["12/12",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":834,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["14/14",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":963,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["18.0.0",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["18.0.3",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["18/18",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":565,"title":{},"body":{"components/ContactoComponent.html":{}}}],["2.11.8",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1197,"title":{},"body":{"overview.html":{}}}],["4.18.2",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["41f9",{"_index":729,"title":{},"body":{"injectables/JsonService.html":{}}}],["44d2",{"_index":713,"title":{},"body":{"injectables/JsonService.html":{}}}],["4ae8",{"_index":723,"title":{},"body":{"injectables/JsonService.html":{}}}],["5",{"_index":1196,"title":{},"body":{"overview.html":{}}}],["5.3.3",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["569",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["58e2",{"_index":712,"title":{},"body":{"injectables/JsonService.html":{}}}],["6",{"_index":962,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["6/6",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["6412",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.0",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["80759020",{"_index":711,"title":{},"body":{"injectables/JsonService.html":{}}}],["85",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":573,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"overview.html":{}}}],["9/9",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["900000",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["924e",{"_index":730,"title":{},"body":{"injectables/JsonService.html":{}}}],["9876",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["9]{6",{"_index":1002,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["9]{9",{"_index":552,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["a7eb",{"_index":724,"title":{},"body":{"injectables/JsonService.html":{}}}],["abstractcontrol",{"_index":914,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["acceder",{"_index":542,"title":{},"body":{"components/ContactoComponent.html":{}}}],["accessors",{"_index":520,"title":{},"body":{"components/ContactoComponent.html":{}}}],["acciones",{"_index":472,"title":{},"body":{"components/CartComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["actual",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["actual_component",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["actualiza",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["actualización",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["actualizada",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["actualizado",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["actualizados",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizamos",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizar",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["actualizarcontraseña",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarcontraseña(newpassword",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizarperfil",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarperfil(datosactualizados",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualizarusuario",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualizarusuario(usuario",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["actualmente",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["addtocart",{"_index":503,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["addtocart(product",{"_index":492,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["administrador",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["administrar",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["agregado",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["agregar",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["agrupando",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["albavets",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["alert",{"_index":1186,"title":{},"body":{"index.html":{}}}],["alert(\"contraseña",{"_index":958,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"correo",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"el",{"_index":1013,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["alert(\"hubo",{"_index":953,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"información",{"_index":950,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["alert(\"la",{"_index":1019,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["alert(\"ocurri",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["alert(\"¡inicio",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"¡usuario",{"_index":1043,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["alert('error",{"_index":855,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('no",{"_index":869,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('producto",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["alert('usuario",{"_index":864,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["alert('¡mensaje",{"_index":558,"title":{},"body":{"components/ContactoComponent.html":{}}}],["alert(`tu",{"_index":1012,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["alerta",{"_index":1193,"title":{},"body":{"index.html":{}}}],["almacenamiento",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["angular",{"_index":1121,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular.appspot.com/o/categorias.json?alt=media&token=80759020",{"_index":735,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular.appspot.com/o/productos.json?alt=media&token=fd5435c0",{"_index":738,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular.appspot.com/o/usuarios.json?alt=media&token=f11c237d",{"_index":740,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular/animations",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":741,"title":{},"body":{"injectables/JsonService.html":{}}}],["angular/compiler",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":455,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":720,"title":{},"body":{"injectables/JsonService.html":{},"miscellaneous/variables.html":{}}}],["api/v0/b/fsii",{"_index":733,"title":{},"body":{"injectables/JsonService.html":{}}}],["aplicación",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":708,"title":{},"body":{"injectables/JsonService.html":{}}}],["applicationconfig",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["archivo",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["arranque",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["array.isarray(data.categorias",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["array.isarray(data.productos",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["asegúrese",{"_index":974,"title":{},"body":{"injectables/ProductosService.html":{}}}],["asociada",{"_index":1147,"title":{},"body":{"index.html":{}}}],["asunto",{"_index":553,"title":{},"body":{"components/ContactoComponent.html":{}}}],["autenticación",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["authorization",{"_index":709,"title":{},"body":{"injectables/JsonService.html":{}}}],["authservice",{"_index":57,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"index.html":{}}}],["auto",{"_index":901,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["añade",{"_index":489,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["añadir",{"_index":491,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["años",{"_index":892,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["b8b7",{"_index":714,"title":{},"body":{"injectables/JsonService.html":{}}}],["background",{"_index":894,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["barra",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["basada",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":710,"title":{},"body":{"injectables/JsonService.html":{}}}],["behaviorsubject",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["behaviorsubject(0",{"_index":476,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["behaviorsubject(null",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["boolean",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["bootstrap",{"_index":1079,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["c4770cc93d76",{"_index":715,"title":{},"body":{"injectables/JsonService.html":{}}}],["cabecera",{"_index":718,"title":{},"body":{"injectables/JsonService.html":{}}}],["calle",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["cambiar",{"_index":905,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["cambio",{"_index":919,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["cambios",{"_index":893,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["campos",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["cantidad",{"_index":451,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["caracteres",{"_index":566,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["carga",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["cargando",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{}}}],["cargar",{"_index":856,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["cargarsesion",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["carrito",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["cart",{"_index":427,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["cart'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["cart.component.html",{"_index":429,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cart.component.scss",{"_index":430,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cart.filter(item",{"_index":488,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.find((item",{"_index":494,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.find(item",{"_index":484,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.push",{"_index":497,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cart.reduce((total",{"_index":499,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["cartcomponent",{"_index":181,"title":{"components/CartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["cartitem",{"_index":449,"title":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{}},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cartitemcount",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["cartitems",{"_index":431,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["cartservice",{"_index":56,"title":{"injectables/CartService.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["carácter",{"_index":967,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["caso",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["catcherror",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["catcherror(error",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["categoria.nombre",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorias",{"_index":586,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{}}}],["categoriaseleccionada",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoryid",{"_index":630,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoría",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorías",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["cda1",{"_index":728,"title":{},"body":{"injectables/JsonService.html":{}}}],["celular",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["cerrar",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["cierra",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["class",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["cliente",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closemodal",{"_index":811,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["coalescencia",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coincidan",{"_index":924,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["coinciden",{"_index":927,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["color",{"_index":895,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["comando",{"_index":1124,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":1123,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["completa",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{}}}],["completo",{"_index":1048,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["compodoc",{"_index":1122,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["componentes",{"_index":1161,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"overview.html":{}}}],["compras",{"_index":426,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["comprueba",{"_index":1191,"title":{},"body":{"index.html":{}}}],["con",{"_index":696,"title":{},"body":{"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configura",{"_index":530,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configuración",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurada",{"_index":1115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["confirm(`¿estás",{"_index":871,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["confirmpassword",{"_index":941,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword.seterrors",{"_index":1007,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword.value",{"_index":1006,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["confirmpassword?.seterrors(null",{"_index":1008,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["console.error('data",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.error('error",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["console.log('archivo",{"_index":748,"title":{},"body":{"injectables/JsonService.html":{}}}],["console.log('añadiendo",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log('contraseña",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["console.log('error",{"_index":952,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["console.log('iniciando",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log('perfil",{"_index":948,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["console.log('usuario",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log('usuarios",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["console.log(listacategorias",{"_index":744,"title":{},"body":{"injectables/JsonService.html":{}}}],["console.log(listaproductos",{"_index":754,"title":{},"body":{"injectables/JsonService.html":{}}}],["const",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["constructor",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["constructor(@inject(platform_id",{"_index":477,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["constructor(cartservice",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{}}}],["constructor(fb",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["constructor(formbuilder",{"_index":522,"title":{},"body":{"components/ContactoComponent.html":{}}}],["constructor(http",{"_index":684,"title":{},"body":{"injectables/JsonService.html":{}}}],["constructor(jsonservice",{"_index":580,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["constructor(platformid",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{}}}],["constructor(private",{"_index":459,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{}}}],["constructor(productosservice",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["construir",{"_index":525,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contactform",{"_index":517,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ContactoComponent.html":{}}}],["contacto&#64;albavets.cl",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["contacto'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["contacto.component.html",{"_index":515,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto.component.scss",{"_index":516,"title":{},"body":{"components/ContactoComponent.html":{}}}],["contacto@albavets.cl",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["contactocomponent",{"_index":183,"title":{"components/ContactoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["contador",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["contener",{"_index":889,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["content",{"_index":707,"title":{},"body":{"injectables/JsonService.html":{}}}],["contiene",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["contrario",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["contraseña",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["contraseñas",{"_index":923,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control",{"_index":830,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control.get('confirmpassword",{"_index":1004,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["control.get('newpassword",{"_index":1003,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["control.get('password",{"_index":1034,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["control.get('repetirpassword",{"_index":1035,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["control.invalid",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["control.markastouched",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["controles",{"_index":544,"title":{},"body":{"components/ContactoComponent.html":{}}}],["copy",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["correcta",{"_index":978,"title":{},"body":{"injectables/ProductosService.html":{}}}],["correctamente",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["correcto",{"_index":1180,"title":{},"body":{"index.html":{}}}],["correo",{"_index":567,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["count",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":1050,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":1110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creamos",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["crear",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["credenciales",{"_index":1177,"title":{},"body":{"index.html":{}}}],["cualquier",{"_index":1145,"title":{},"body":{"index.html":{}}}],["cuando",{"_index":1158,"title":{},"body":{"index.html":{}}}],["cuenta",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["código",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["dado",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["data",{"_index":592,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{}}}],["data.categorias",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.productos",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["datainitializationservice",{"_index":59,"title":{"injectables/DataInitializationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["datainitservice",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["date",{"_index":879,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["date(control.value",{"_index":881,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["datos",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["datosactualizados",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["de",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":562,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["debería",{"_index":1173,"title":{},"body":{"index.html":{}}}],["debes",{"_index":960,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["declaraciones",{"_index":1131,"title":{},"body":{"index.html":{}}}],["default",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["defined",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["definidas",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["deleteuser",{"_index":812,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["deleteuser(usuario",{"_index":821,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["deleting",{"_index":876,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["dependencies",{"_index":1083,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derechos",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["describe",{"_index":1149,"title":{},"body":{"index.html":{}}}],["describir",{"_index":1137,"title":{},"body":{"index.html":{}}}],["descripcion",{"_index":1136,"title":{},"body":{"index.html":{}}}],["descripción",{"_index":1133,"title":{},"body":{"index.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desde",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["destruir",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["detalles",{"_index":1141,"title":{},"body":{"index.html":{}}}],["detección",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determinar",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["devuelto",{"_index":1153,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":898,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["dirección",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/ContactoComponent.html":{}}}],["directivas",{"_index":1162,"title":{},"body":{"index.html":{}}}],["directive",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["directives",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["disabled",{"_index":850,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["documentacion",{"_index":1125,"title":{},"body":{"index.html":{}}}],["documentas",{"_index":1159,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["durante",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["during",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["dynamic",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["dígitos",{"_index":574,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["e522",{"_index":722,"title":{},"body":{"injectables/JsonService.html":{}}}],["e977e471cce7",{"_index":725,"title":{},"body":{"injectables/JsonService.html":{}}}],["edad",{"_index":828,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminima",{"_index":832,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminimavalidator",{"_index":813,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edadminimavalidator(control",{"_index":824,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["edición",{"_index":820,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editar",{"_index":838,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editform",{"_index":808,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["editinguser",{"_index":809,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["edituser",{"_index":814,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["edituser(usuario",{"_index":835,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["eficiente",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ejecuta",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["ejecutando",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["ejemplos",{"_index":1155,"title":{},"body":{"index.html":{}}}],["el",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["electrónico",{"_index":568,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["element",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["elemento",{"_index":1164,"title":{},"body":{"index.html":{}}}],["elimina",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["eliminacion",{"_index":823,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["eliminación",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["eliminado",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["eliminamos",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["eliminar",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["eliminarusuario",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminarusuario(email",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["email",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["emailform",{"_index":989,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["en",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["enlaces",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["enrutador",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entorno",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entre",{"_index":961,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["enviado",{"_index":538,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["enviar",{"_index":576,"title":{},"body":{"components/ContactoComponent.html":{}}}],["envía",{"_index":993,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["envío",{"_index":533,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["err",{"_index":603,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["error",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["es",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["esadministrador",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["especial",{"_index":968,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["específica",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["espía",{"_index":1185,"title":{},"body":{"index.html":{}}}],["est",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["esta",{"_index":1175,"title":{},"body":{"index.html":{}}}],["estructura",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["eventcoalescing",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventos",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["existingproduct",{"_index":493,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["existingproduct.cantidad",{"_index":496,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["exito",{"_index":750,"title":{},"body":{"injectables/JsonService.html":{}}}],["exitosa",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["exitosamente",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["exitoso",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{}}}],["expected",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["express",{"_index":1100,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["express.express",{"_index":1113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["f",{"_index":521,"title":{},"body":{"components/ContactoComponent.html":{}}}],["f11c237d",{"_index":727,"title":{},"body":{"injectables/JsonService.html":{}}}],["fallida",{"_index":1184,"title":{},"body":{"index.html":{}}}],["false",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["falso",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["favor",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fb",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fd5435c0",{"_index":721,"title":{},"body":{"injectables/JsonService.html":{}}}],["fecha",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["fechanac",{"_index":880,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanac.getfullyear",{"_index":883,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanac.getmonth",{"_index":886,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["fechanacimiento",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["felipe",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["fetch",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["filterproducts",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["filterproducts(categoryid",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtra",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtrados",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtrar",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["final",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["footer",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["forkjoin",{"_index":583,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["formbuilder",{"_index":523,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["formgroup",{"_index":534,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["formsmodule",{"_index":428,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["formulario",{"_index":513,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["formularios",{"_index":526,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["francisco",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["fsii",{"_index":1120,"title":{},"body":{"index.html":{}}}],["fsii_sumativa_angular",{"_index":1119,"title":{},"body":{"index.html":{}}}],["funcionalidad",{"_index":425,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["función",{"_index":1139,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1109,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fácilmente",{"_index":543,"title":{},"body":{"components/ContactoComponent.html":{}}}],["g",{"_index":925,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["g.get('confirmpassword')?.value",{"_index":944,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["g.get('newpassword')?.value",{"_index":943,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["genera",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["generado",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["general",{"_index":1134,"title":{},"body":{"index.html":{}}}],["generar",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["generartoken",{"_index":990,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["generartokenrecuperacion",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["generartokenrecuperacion(email",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["gestionar",{"_index":804,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["gestión",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getcartitemcount",{"_index":501,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["getcartitems",{"_index":479,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["getdata",{"_index":971,"title":{},"body":{"injectables/ProductosService.html":{}}}],["getf",{"_index":539,"title":{},"body":{"components/ContactoComponent.html":{}}}],["getjsoncategoriasdata",{"_index":678,"title":{},"body":{"injectables/JsonService.html":{}}}],["getjsonproductosdata",{"_index":679,"title":{},"body":{"injectables/JsonService.html":{}}}],["getjsonusuariosdata",{"_index":680,"title":{},"body":{"injectables/JsonService.html":{}}}],["getter",{"_index":541,"title":{},"body":{"components/ContactoComponent.html":{}}}],["getting",{"_index":1117,"title":{"index.html":{}},"body":{}}],["getusuarioactual",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getusuarioactualobservable",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["getusuarios",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["guardar",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["ha",{"_index":536,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["habilita",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hay",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["haya",{"_index":1188,"title":{},"body":{"index.html":{}}}],["headers",{"_index":705,"title":{},"body":{"injectables/JsonService.html":{}}}],["hidratación",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["home.component.html",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":185,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["hoy",{"_index":878,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["hoy.getfullyear",{"_index":882,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["hoy.getmonth",{"_index":885,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["html",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["http",{"_index":687,"title":{},"body":{"injectables/JsonService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":685,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpheaders",{"_index":706,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpoptionscategorias",{"_index":672,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpoptionsproductos",{"_index":673,"title":{},"body":{"injectables/JsonService.html":{}}}],["httpoptionsusuarios",{"_index":674,"title":{},"body":{"injectables/JsonService.html":{}}}],["icons",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["identifier",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["iguales",{"_index":929,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["implementación",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["importación",{"_index":976,"title":{},"body":{"injectables/ProductosService.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["incluir",{"_index":1168,"title":{},"body":{"index.html":{}}}],["incorrecta",{"_index":1174,"title":{},"body":{"index.html":{}}}],["incorrectos",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":42,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"interfaces/Usuario.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["información",{"_index":954,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["ingresa",{"_index":1135,"title":{},"body":{"index.html":{}}}],["ingresado",{"_index":1014,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingresados",{"_index":1021,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingresar",{"_index":1000,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["ingrese",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inicia",{"_index":1044,"title":{},"body":{"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{}}}],["inicializa",{"_index":529,"title":{},"body":{"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inicialización",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"index.html":{}}}],["iniciar",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["inicio",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{}}}],["initform",{"_index":815,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["initialization.service",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["initialization.service.ts",{"_index":578,"title":{},"body":{"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["initialization.service.ts:10",{"_index":581,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initialization.service.ts:19",{"_index":582,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initializedata",{"_index":579,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["initializing",{"_index":604,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["inject",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["inject(platform_id",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["injectable",{"_index":203,"title":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"overview.html":{}}}],["instancia",{"_index":1114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["intenta",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["interface",{"_index":312,"title":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"interfaces/Usuario.html":{}},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["interfaces",{"_index":474,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"interfaces/Usuario.html":{},"overview.html":{}}}],["interfaz",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["inténtalo",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["inválidas",{"_index":1178,"title":{},"body":{"index.html":{}}}],["isbrowser",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["ismodalopen",{"_index":810,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["isplatformbrowser",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["isplatformbrowser(platformid",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["item",{"_index":452,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["item.cantidad",{"_index":465,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["item.id",{"_index":485,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["item.nombre",{"_index":473,"title":{},"body":{"components/CartComponent.html":{}}}],["item.precio",{"_index":470,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["items",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["javier",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["jsdoc",{"_index":1166,"title":{},"body":{"index.html":{}}}],["json",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["json.parse(localstorage.getitem('cart",{"_index":480,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["json.parse(localstorage.getitem('sesionusuario",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.service",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["json.stringify(cart",{"_index":487,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["json.stringify(data.categorias",{"_index":598,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(data.productos",{"_index":601,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(data.usuarios",{"_index":595,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["json.stringify(usuarioactualizado",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["json.stringify(usuariosincontraseña",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["jsoncategoriasurl",{"_index":675,"title":{},"body":{"injectables/JsonService.html":{}}}],["jsonproductosurl",{"_index":676,"title":{},"body":{"injectables/JsonService.html":{}}}],["jsonservice",{"_index":222,"title":{"injectables/JsonService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["jsonusuariosurl",{"_index":677,"title":{},"body":{"injectables/JsonService.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lado",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["las",{"_index":438,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/JsonService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["letra",{"_index":964,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["levantar",{"_index":1129,"title":{},"body":{"index.html":{}}}],["lista",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["listacategorias",{"_index":698,"title":{},"body":{"injectables/JsonService.html":{}}}],["listaproductos",{"_index":701,"title":{},"body":{"injectables/JsonService.html":{}}}],["listausuarios",{"_index":704,"title":{},"body":{"injectables/JsonService.html":{}}}],["llama",{"_index":1187,"title":{},"body":{"index.html":{}}}],["llamado",{"_index":1189,"title":{},"body":{"index.html":{}}}],["loadcartitems",{"_index":433,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["loaddata",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["loading",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{},"components/ManagerUsersComponent.html":{}}}],["loadusers",{"_index":816,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["local",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.getitem('categorias",{"_index":596,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.getitem('productos",{"_index":599,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.getitem('usuarios",{"_index":593,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.removeitem('sesionusuario",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.setitem('cart",{"_index":486,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["localstorage.setitem('categorias",{"_index":597,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.setitem('productos",{"_index":600,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["localstorage.setitem('sesionusuario",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["localstorage.setitem('usuarios",{"_index":594,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["login",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["login'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["login(email",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["login.component.html",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":187,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["logueado",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["los",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["m",{"_index":884,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manager",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manageruserscomponent",{"_index":189,"title":{"components/ManagerUsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["maneja",{"_index":532,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["manejar",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["manejo",{"_index":1176,"title":{},"body":{"index.html":{}}}],["map",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["map(result",{"_index":980,"title":{},"body":{"injectables/ProductosService.html":{}}}],["map(usuarios",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["margin",{"_index":899,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["matching",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["mayor",{"_index":891,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mayúscula",{"_index":966,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mejora",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menor",{"_index":833,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["menos",{"_index":564,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["mensaje",{"_index":554,"title":{},"body":{"components/ContactoComponent.html":{},"index.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["methods",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["metodocategorias",{"_index":681,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodocategorias(listacategorias",{"_index":693,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodocategorias(listacategorias:any",{"_index":743,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodoproductos",{"_index":682,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodoproductos(listaproductos",{"_index":699,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodoproductos(listaproductos:any",{"_index":753,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodousuarios",{"_index":683,"title":{},"body":{"injectables/JsonService.html":{}}}],["metodousuarios(listausuarios",{"_index":702,"title":{},"body":{"injectables/JsonService.html":{}}}],["mi",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["minúscula",{"_index":965,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["miscellaneous",{"_index":1108,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":926,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["modal",{"_index":819,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["moderna",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modificar",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["modificarperfilcomponent",{"_index":192,"title":{"components/ModificarPerfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["modules",{"_index":1194,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mostrado",{"_index":1192,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":631,"title":{},"body":{"components/HomeComponent.html":{}}}],["muestra",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{}}}],["método",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"index.html":{}}}],["mínima",{"_index":829,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["módulo",{"_index":1157,"title":{},"body":{"index.html":{}}}],["múltiples",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nacimiento",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["navegación",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["navegador",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["necesarios",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["new",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["newpassword",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["newpassword).subscribe",{"_index":1018,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["newpassword.value",{"_index":1005,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["next",{"_index":591,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{}}}],["ngondestroy",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["nico",{"_index":456,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["node",{"_index":1116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nombre",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["notas",{"_index":1171,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1126,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevamente",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["nuevo",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevos",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.celular",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.email",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.fechanacimiento",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.nombre",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.password",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.rol",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["nuevousuario.token",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["null",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["number",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["numéricos",{"_index":890,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["número",{"_index":572,"title":{},"body":{"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["o",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["object",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["object.values(this.editform.controls).foreach(control",{"_index":867,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["object.values(this.loginform.controls).foreach(control",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(this.passwordform.controls).foreach(control",{"_index":1023,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["object.values(this.registroform.controls).foreach(control",{"_index":1047,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["objeto",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["observable",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["obtener",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interfaces/Usuario.html":{}}}],["obtenidos",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["obtiene",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["of(false",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["of(null",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["olvidaste",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["onsubmit",{"_index":519,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["onsubmitpassword",{"_index":910,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["onsubmitperfil",{"_index":911,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["opciones",{"_index":717,"title":{},"body":{"injectables/JsonService.html":{}}}],["operaciones",{"_index":439,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["optional",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["otro",{"_index":1046,"title":{},"body":{"components/RegistrarmeComponent.html":{},"index.html":{}}}],["outlet",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1195,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1127,"title":{},"body":{"index.html":{}}}],["package",{"_index":1082,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["parámetro",{"_index":1148,"title":{},"body":{"index.html":{}}}],["parámetros",{"_index":1138,"title":{},"body":{"index.html":{}}}],["password",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["password'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["password).subscribe",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["password.component.html",{"_index":988,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.scss",{"_index":987,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts",{"_index":985,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:20",{"_index":999,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":991,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":995,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":998,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:71",{"_index":992,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.component.ts:95",{"_index":996,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["password.value",{"_index":1036,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["password/recuperar",{"_index":984,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["passwordform",{"_index":908,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["passwordmatchvalidator",{"_index":912,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["passwordmatchvalidator(control",{"_index":997,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["passwordmatchvalidator(g",{"_index":921,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["perfil'},{'name",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["perfil.component.html",{"_index":907,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.scss",{"_index":906,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts",{"_index":904,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["perfil.component.ts:108",{"_index":918,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:19",{"_index":931,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:21",{"_index":930,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:23",{"_index":913,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:38",{"_index":917,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:58",{"_index":915,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:74",{"_index":922,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil.component.ts:82",{"_index":920,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["perfil/modificar",{"_index":903,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["perfilform",{"_index":909,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["permite",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permitiendo",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["pero",{"_index":1181,"title":{},"body":{"index.html":{}}}],["personal",{"_index":951,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["personalizadas",{"_index":1170,"title":{},"body":{"index.html":{}}}],["personalizado",{"_index":827,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["peticiones",{"_index":719,"title":{},"body":{"injectables/JsonService.html":{}}}],["pipe",{"_index":979,"title":{},"body":{"injectables/ProductosService.html":{}}}],["plataforma",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Usuario.html":{}}}],["platform_id",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["platformid",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["popperjs/core",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["precio",{"_index":457,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["prepara",{"_index":837,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["principal",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["proceso",{"_index":986,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["product",{"_index":490,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["product.id",{"_index":495,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["productid",{"_index":446,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["producto",{"_index":447,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{}}}],["producto.categoria",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.descripcion",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.nombre",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["producto.precio",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["productos",{"_index":588,"title":{},"body":{"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{}}}],["productosfiltrados",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{}}}],["productosservice",{"_index":621,"title":{"injectables/ProductosService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/ProductosService.html":{},"coverage.html":{}}}],["profile",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["promise((resolve",{"_index":584,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["properties",{"_index":43,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"properties.html":{}}}],["proporciona",{"_index":1140,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["proporcionada",{"_index":697,"title":{},"body":{"injectables/JsonService.html":{}}}],["proporcionadas",{"_index":1190,"title":{},"body":{"index.html":{}}}],["proporcionado",{"_index":994,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["proporcionar",{"_index":1132,"title":{},"body":{"index.html":{}}}],["propósito",{"_index":1144,"title":{},"body":{"index.html":{}}}],["provideclienthydration",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["providehttpclient(withfetch",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1172,"title":{},"body":{"index.html":{}}}],["puede",{"_index":870,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["puedes",{"_index":1167,"title":{},"body":{"index.html":{}}}],["página",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["quantity",{"_index":481,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["que",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["quieres",{"_index":873,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["reactiveformsmodule",{"_index":514,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reactivo",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reactivos",{"_index":527,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["realiza",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["recupera",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["recuperación",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{}}}],["recuperar",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["recuperarpassword",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["recuperarpassword(email",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["recuperarpasswordcomponent",{"_index":194,"title":{"components/RecuperarPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["registra",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["registrado",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["registrarme",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["registrarme.component.html",{"_index":1026,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarme.component.scss",{"_index":1025,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarmecomponent",{"_index":197,"title":{"components/RegistrarmeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["registrarse",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["registrarte",{"_index":1049,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["registrarusuario",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrarusuario(nuevousuario",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["registro",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["registroform",{"_index":1027,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["regístrate",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["reject",{"_index":585,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["reject(err",{"_index":605,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["rellena",{"_index":1179,"title":{},"body":{"index.html":{}}}],["removecartitem",{"_index":434,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{}}}],["removecartitem(productid",{"_index":443,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["renderizado",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendimiento",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repetir",{"_index":969,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["repetirpassword",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["repetirpassword.seterrors",{"_index":1038,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["repetirpassword.value",{"_index":1037,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["repetirpassword?.seterrors(null",{"_index":1039,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["requerida",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["requerido",{"_index":561,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["reservados",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve",{"_index":602,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["response",{"_index":747,"title":{},"body":{"injectables/JsonService.html":{}}}],["respuesta",{"_index":1183,"title":{},"body":{"index.html":{}}}],["restricción",{"_index":1146,"title":{},"body":{"index.html":{}}}],["result.categorias",{"_index":981,"title":{},"body":{"injectables/ProductosService.html":{}}}],["result.productos",{"_index":982,"title":{},"body":{"injectables/ProductosService.html":{}}}],["results",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorno",{"_index":1151,"title":{},"body":{"index.html":{}}}],["return",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["returns",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rgba(0",{"_index":896,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["rol",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["root",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{}}}],["root'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["router",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["routerlink",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["routerlinkactive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ruta",{"_index":975,"title":{},"body":{"injectables/ProductosService.html":{}}}],["rutas",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"injectables/ProductosService.html":{},"interfaces/Usuario.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["s",{"_index":1130,"title":{},"body":{"index.html":{}}}],["san",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["se",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["sea",{"_index":977,"title":{},"body":{"injectables/ProductosService.html":{},"index.html":{}}}],["secciones",{"_index":1169,"title":{},"body":{"index.html":{}}}],["seguro",{"_index":872,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["según",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{}}}],["seleccionada",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["ser",{"_index":569,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["server",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["server.ts",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/auth.service",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["services/cart.service",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/HomeComponent.html":{}}}],["services/data",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["services/productos.service",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["servicio",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["servicios",{"_index":1163,"title":{},"body":{"index.html":{}}}],["servidor",{"_index":1111,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sesionusuario",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sesionusuario.email",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sesión",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["si",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["sido",{"_index":537,"title":{},"body":{"components/ContactoComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["significado",{"_index":1152,"title":{},"body":{"index.html":{}}}],["simula",{"_index":1182,"title":{},"body":{"index.html":{}}}],["sin",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sobre",{"_index":1142,"title":{},"body":{"index.html":{}}}],["sobrescribe",{"_index":695,"title":{},"body":{"injectables/JsonService.html":{}}}],["sobrescribimos",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["sobrescribir",{"_index":751,"title":{},"body":{"injectables/JsonService.html":{}}}],["sobrescrito",{"_index":749,"title":{},"body":{"injectables/JsonService.html":{}}}],["sola",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solicitudes",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solo",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["son",{"_index":928,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["src/.../app.config.server.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:29",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/cart/cart.component.ts",{"_index":424,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"coverage.html":{}}}],["src/app/components/cart/cart.component.ts:35",{"_index":454,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:37",{"_index":437,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:46",{"_index":442,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:51",{"_index":440,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:60",{"_index":450,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:69",{"_index":444,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/cart/cart.component.ts:75",{"_index":453,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts",{"_index":512,"title":{},"body":{"components/ContactoComponent.html":{},"coverage.html":{}}}],["src/app/components/contacto/contacto.component.ts:18",{"_index":535,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:20",{"_index":524,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:31",{"_index":528,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:44",{"_index":531,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/contacto/contacto.component.ts:58",{"_index":540,"title":{},"body":{"components/ContactoComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:43",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:53",{"_index":632,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:74",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:83",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:95",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:47",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/manager",{"_index":801,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["src/app/components/modificar",{"_index":902,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"coverage.html":{}}}],["src/app/components/recuperar",{"_index":983,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/registrarme/registrarme.component.ts",{"_index":1024,"title":{},"body":{"components/RegistrarmeComponent.html":{},"coverage.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:20",{"_index":1028,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:37",{"_index":1030,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:53",{"_index":1032,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:71",{"_index":1029,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/components/registrarme/registrarme.component.ts:85",{"_index":1031,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:112",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:123",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:133",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:180",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:219",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:263",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:297",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:333",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:342",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:373",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:62",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:70",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:80",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/cart.service.ts",{"_index":475,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/services/cart.service.ts:109",{"_index":509,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:121",{"_index":506,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:28",{"_index":511,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:30",{"_index":504,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:47",{"_index":507,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:59",{"_index":510,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:75",{"_index":508,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart.service.ts:88",{"_index":505,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/data",{"_index":577,"title":{},"body":{"injectables/DataInitializationService.html":{},"coverage.html":{}}}],["src/app/services/json.service.ts",{"_index":671,"title":{},"body":{"injectables/JsonService.html":{},"coverage.html":{}}}],["src/app/services/json.service.ts:105",{"_index":703,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:12",{"_index":716,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:21",{"_index":736,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:26",{"_index":726,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:35",{"_index":739,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:40",{"_index":732,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:49",{"_index":686,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:56",{"_index":688,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:63",{"_index":694,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:77",{"_index":691,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:84",{"_index":700,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/json.service.ts:98",{"_index":692,"title":{},"body":{"injectables/JsonService.html":{}}}],["src/app/services/productos.service.ts",{"_index":970,"title":{},"body":{"injectables/ProductosService.html":{},"coverage.html":{}}}],["src/app/services/productos.service.ts:11",{"_index":973,"title":{},"body":{"injectables/ProductosService.html":{}}}],["src/app/services/productos.service.ts:8",{"_index":972,"title":{},"body":{"injectables/ProductosService.html":{}}}],["src/main.server.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":1112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["started",{"_index":1118,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["structure",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["styles",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["styleurl",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["suave",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["submitted",{"_index":518,"title":{},"body":{"components/ContactoComponent.html":{}}}],["subscribe",{"_index":590,"title":{},"body":{"injectables/DataInitializationService.html":{}}}],["subscription",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["subtotal",{"_index":471,"title":{},"body":{"components/CartComponent.html":{}}}],["success",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["sum",{"_index":469,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["sumativa",{"_index":734,"title":{},"body":{"injectables/JsonService.html":{},"index.html":{}}}],["suscribiéndose",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{}}}],["suscripción",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["switchmap",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["switchmap(usuarios",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["table",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["tem",{"_index":445,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["tems",{"_index":441,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["tener",{"_index":563,"title":{},"body":{"components/ContactoComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.authservice.actualizarcontraseña(newpassword).subscribe",{"_index":957,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.actualizarperfil(datosactualizados).subscribe",{"_index":947,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.actualizarusuario(updateduser).subscribe",{"_index":863,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.eliminarusuario(usuario.email).subscribe",{"_index":875,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.esadministrador",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.generartokenrecuperacion(email).subscribe",{"_index":1011,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.authservice.getusuarioactual",{"_index":932,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.authservice.getusuarioactualobservable().subscribe(usuario",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getusuarios().subscribe",{"_index":853,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.authservice.login(email",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.recuperarpassword(email",{"_index":1017,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.authservice.registrarusuario(nuevousuario).subscribe",{"_index":1042,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.cargarsesion",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.cartitemcount",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.cartitemcount.asobservable",{"_index":502,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.cartitemcount.next(count",{"_index":500,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.cartitems",{"_index":461,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartitems.reduce((sum",{"_index":468,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.addtocart(product",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.cartservice.getcartitemcount().subscribe(count",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.cartservice.getcartitems",{"_index":462,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.removecartitem(productid",{"_index":466,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.cartservice.updatecartitemquantity(item.id",{"_index":464,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.categorias",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoriaseleccionada",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.closemodal",{"_index":865,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.contactform",{"_index":546,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.controls",{"_index":560,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.reset",{"_index":559,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.contactform.valid",{"_index":557,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.datainitservice.initializedata().then",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.edadminimavalidator",{"_index":852,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.editform",{"_index":849,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.patchvalue(usuario",{"_index":858,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.reset",{"_index":877,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.valid",{"_index":860,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editform.value",{"_index":862,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.editinguser",{"_index":857,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.emailform",{"_index":1001,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.get('email')?.value",{"_index":1010,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.markallastouched",{"_index":1015,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.emailform.valid",{"_index":1009,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.fb.group",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.filterproducts(0",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterproducts(categoryid",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formbuilder.group",{"_index":547,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.getcartitems",{"_index":483,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.getusuarioactual",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.http.get(this.jsoncategoriasurl",{"_index":742,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.get(this.jsonproductosurl",{"_index":752,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.get(this.jsonusuariosurl",{"_index":757,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.post(this.jsoncategoriasurl",{"_index":745,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.post(this.jsonproductosurl",{"_index":755,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.http.post(this.jsonusuariosurl",{"_index":758,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.httpoptionscategorias).subscribe",{"_index":746,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.httpoptionsproductos).subscribe",{"_index":756,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.httpoptionsusuarios",{"_index":759,"title":{},"body":{"injectables/JsonService.html":{}}}],["this.initform",{"_index":848,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.isbrowser",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["this.ismodalopen",{"_index":859,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.jsonservice.getjsoncategoriasdata",{"_index":587,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["this.jsonservice.getjsonproductosdata",{"_index":589,"title":{},"body":{"injectables/DataInitializationService.html":{},"injectables/ProductosService.html":{}}}],["this.jsonservice.getjsonusuariosdata",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"interfaces/Usuario.html":{}}}],["this.jsonservice.getjsonusuariosdata().pipe",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.jsonservice.metodousuarios(usuarios).pipe",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.jsonservice.metodousuarios(usuariosactualizados).pipe",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.loadcartitems",{"_index":460,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.loaddata",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.loadusers",{"_index":847,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["this.loginform",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordform",{"_index":937,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.get('newpassword')?.value",{"_index":956,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.get('token')?.value",{"_index":1016,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["this.passwordform.reset",{"_index":959,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.passwordform.valid",{"_index":955,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":942,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.perfilform",{"_index":933,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.perfilform.valid",{"_index":945,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.perfilform.value",{"_index":946,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.productos",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productos.filter(producto",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productosfiltrados",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.productosservice.getdata().subscribe",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.registroform",{"_index":1033,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.registroform.valid",{"_index":1040,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.registroform.value",{"_index":1041,"title":{},"body":{"components/RegistrarmeComponent.html":{}}}],["this.router.navigate",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1020,"title":{},"body":{"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["this.submitted",{"_index":556,"title":{},"body":{"components/ContactoComponent.html":{}}}],["this.total",{"_index":467,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.updatecartitemcount",{"_index":478,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["this.updatetotal",{"_index":463,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["this.usersubscription",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usersubscription.unsubscribe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usuarioactual",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual.asobservable",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(null",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(sesionusuario",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(usuarioactualizado",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.next(usuariosincontraseña",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.value",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual.value?.rol",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["this.usuarioactual?.celular",{"_index":935,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual?.fechanacimiento",{"_index":936,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarioactual?.nombre",{"_index":934,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["this.usuarios",{"_index":854,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["throwerror",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["tienes",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["tipo",{"_index":1143,"title":{},"body":{"index.html":{}}}],["title",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["todas",{"_index":690,"title":{},"body":{"injectables/JsonService.html":{}}}],["todo",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["todos",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"interfaces/Usuario.html":{}}}],["token",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["token.tostring",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["total",{"_index":432,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{}}}],["trae",{"_index":689,"title":{},"body":{"injectables/JsonService.html":{}}}],["transición",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem-1.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":1128,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{}}}],["tus",{"_index":1160,"title":{},"body":{"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"injectables/DataInitializationService.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"injectables/ProductosService.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1165,"title":{},"body":{"index.html":{}}}],["título",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["u",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["u.email",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["u.token",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["un",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/CartItem-1.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["una",{"_index":570,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["unitario",{"_index":458,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updatecartitemcount",{"_index":498,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["updatecartitemquantity",{"_index":435,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{}}}],["updatecartitemquantity(item",{"_index":448,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updatecartitemquantity(productid",{"_index":482,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{}}}],["updateduser",{"_index":861,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["updateselectedcategory",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["updateselectedcategory(categoryid",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatetotal",{"_index":436,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem-1.html":{}}}],["updating",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["url",{"_index":737,"title":{},"body":{"injectables/JsonService.html":{}}}],["usagenotes",{"_index":1154,"title":{},"body":{"index.html":{}}}],["usar",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":866,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users",{"_index":805,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["users.component.html",{"_index":807,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.scss",{"_index":806,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts",{"_index":803,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:119",{"_index":822,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:146",{"_index":818,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:157",{"_index":825,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:19",{"_index":846,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:21",{"_index":843,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:23",{"_index":844,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:25",{"_index":817,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:40",{"_index":841,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:48",{"_index":839,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:61",{"_index":840,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:77",{"_index":836,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users.component.ts:86",{"_index":842,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["users/manager",{"_index":802,"title":{},"body":{"components/ManagerUsersComponent.html":{},"coverage.html":{}}}],["usersubscription",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["uso",{"_index":1156,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":79,"title":{"interfaces/Usuario.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"coverage.html":{},"index.html":{}}}],["usuario.celular",{"_index":887,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.email",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/ManagerUsersComponent.html":{},"interfaces/Usuario.html":{}}}],["usuario.fechanacimiento",{"_index":888,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.nombre",{"_index":874,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.password",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuario.rol",{"_index":868,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["usuario.token",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioactual",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ModificarPerfilComponent.html":{},"interfaces/Usuario.html":{}}}],["usuarioactualizado",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioactualizado.repetirpassword",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.celular",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.email",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.fechanacimiento",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.nombre",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioencontrado.rol",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioexistente",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioindex",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarioparaguardar",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DataInitializationService.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["usuarios.find",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.find((u",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.findindex((u",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.map((u",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.push(usuarioparaguardar",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios.splice(index",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios[index",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuarios[usuarioindex",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuariosactualizados",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["usuariosincontraseña",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Usuario.html":{}}}],["utiliza",{"_index":1045,"title":{},"body":{"components/RegistrarmeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["validador",{"_index":826,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validar",{"_index":831,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validationerrors",{"_index":916,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators",{"_index":545,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.email",{"_index":550,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.minlength(10",{"_index":555,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.minlength(2",{"_index":549,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.pattern('^[0",{"_index":851,"title":{},"body":{"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.pattern(/^(?=.*\\d)(?=.*[a",{"_index":938,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["validators.pattern(/^[0",{"_index":551,"title":{},"body":{"components/ContactoComponent.html":{}}}],["validators.required",{"_index":548,"title":{},"body":{"components/ContactoComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["valor",{"_index":1150,"title":{},"body":{"index.html":{}}}],["value",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/ManagerUsersComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["variable",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1200,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdadero",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["verifica",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"components/RecuperarPasswordComponent.html":{},"interfaces/Usuario.html":{},"index.html":{}}}],["verificar",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["version",{"_index":1198,"title":{},"body":{"properties.html":{}}}],["visibilidad",{"_index":845,"title":{},"body":{"components/ManagerUsersComponent.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"injectables/JsonService.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"miscellaneous/functions.html":{}}}],["válida",{"_index":571,"title":{},"body":{"components/ContactoComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["válido",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"index.html":{}}}],["válidos",{"_index":1022,"title":{},"body":{"components/RecuperarPasswordComponent.html":{}}}],["xito",{"_index":949,"title":{},"body":{"components/ModificarPerfilComponent.html":{}}}],["y",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactoComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ManagerUsersComponent.html":{},"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrarmeComponent.html":{},"interfaces/Usuario.html":{}}}],["z])(?=.*[!@#$%^&*]).{6,15",{"_index":940,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["z])(?=.*[a",{"_index":939,"title":{},"body":{"components/ModificarPerfilComponent.html":{},"components/RecuperarPasswordComponent.html":{},"components/RegistrarmeComponent.html":{}}}],["zone.js",{"_index":1106,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\nContiene la barra de navegación, el router outlet y el footer.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            RouterModule\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItemCount\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                userSubscription\n                            \n                            \n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                esAdministrador\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService, authService: AuthService, dataInitService: DataInitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar el carrito\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        dataInitService\n                                                  \n                                                        \n                                                                        DataInitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de inicialización de datos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        esAdministrador\n                        \n                    \n                \n            \n            \n                \nesAdministrador()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Método para verificar si el usuario es administrador\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el usuario es administrador, falso en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Método para cerrar sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Contador de items en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'albavets'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Título de la aplicación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    Suscripción al observable del usuario actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:35\n                        \n                    \n\n            \n                \n                    Usuario actualmente logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterLink, RouterModule, RouterOutlet, RouterLinkActive } from '@angular/router';\nimport { CartService } from './services/cart.service';\nimport { AuthService } from './services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { DataInitializationService } from './services/data-initialization.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * @description \n * Componente principal de la aplicación.\n * Contiene la barra de navegación, el router outlet y el footer.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    RouterLink,\n    RouterModule,\n    RouterLinkActive\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  /** Título de la aplicación */\n  title = 'albavets';\n\n  /** Contador de items en el carrito */\n  cartItemCount: number = 0;\n\n  /** Usuario actualmente logueado */\n  usuarioActual: any = null;\n\n  /** Suscripción al observable del usuario actual */\n  private userSubscription: Subscription | undefined;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar el carrito\n   * @param authService Servicio de autenticación\n   * @param dataInitService Servicio de inicialización de datos\n   */\n  constructor(\n    private cartService: CartService,\n    private authService: AuthService,\n    private dataInitService: DataInitializationService\n  ) {}\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.dataInitService.initializeData().then(() => {\n      this.cartService.getCartItemCount().subscribe(count => {\n        this.cartItemCount = count;\n      });\n      \n      this.userSubscription = this.authService.getUsuarioActualObservable().subscribe(usuario => {\n        this.usuarioActual = usuario;\n      });\n    });\n  }\n\n  /** Método que se ejecuta al destruir el componente */\n  ngOnDestroy() {\n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n\n  /** Método para cerrar sesión */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Método para verificar si el usuario es administrador\n   * @returns {boolean} Verdadero si el usuario es administrador, falso en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.authService.esAdministrador();\n  }\n}\n\n    \n\n    \n        \n\n    \n        AlbaVets\n        \n            \n        \n        \n            \n                \n                    Inicio\n                \n                \n                    Contacto\n                \n            \n            \n                \n                    \n                         {{ cartItemCount\n                            }}\n                    \n                \n                \n                    \n                         Mi cuenta\n                    \n                    \n                        \n                            \n                                Administrar usuarios\n                            \n                            \n                                Modificar mi perfil\n                            \n                            \n                                Cerrar sesión\n                            \n                        \n                        \n                            Iniciar sesión\n                            Registrarse\n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n        \n            \n                AlbaVets\n                Dirección: Calle san francisco javier #6412, San Felipe\n                Celular: +569 9876 5432\n                Email: contacto&#64;albavets.cl\n            \n            \n                Enlaces\n                \n                    Inicio\n                    Contacto\n                \n            \n        \n        \n        \n            &copy; 2024 AlbaVets. Todos los derechos reservados.\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            AlbaVets                                                                                    Inicio                                                    Contacto                                                                                                     {{ cartItemCount                            }}                                                                                                 Mi cuenta                                                                                                                            Administrar usuarios                                                                                        Modificar mi perfil                                                                                        Cerrar sesión                                                                                                        Iniciar sesión                            Registrarse                                                                                                                            AlbaVets                Dirección: Calle san francisco javier #6412, San Felipe                Celular: +569 9876 5432                Email: contacto@albavets.cl                                        Enlaces                                    Inicio                    Contacto                                                                © 2024 AlbaVets. Todos los derechos reservados.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar la autenticación y gestión de usuarios\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                    Private\n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actualizarContraseña\n                            \n                            \n                                actualizarPerfil\n                            \n                            \n                                actualizarUsuario\n                            \n                            \n                                cargarSesion\n                            \n                            \n                                eliminarUsuario\n                            \n                            \n                                esAdministrador\n                            \n                            \n                                generarTokenRecuperacion\n                            \n                            \n                                getUsuarioActual\n                            \n                            \n                                getUsuarioActualObservable\n                            \n                            \n                                getUsuarios\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                recuperarPassword\n                            \n                            \n                                registrarUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object, jsonService: JsonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID de la plataforma para determinar si es un navegador\n\n                                                        \n                                                \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarContraseña\n                        \n                    \n                \n            \n            \n                \nactualizarContraseña(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:297\n                        \n                    \n\n\n            \n                \n                        Actualiza la contraseña del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarPerfil\n                        \n                    \n                \n            \n            \n                \nactualizarPerfil(datosActualizados: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:263\n                        \n                    \n\n\n            \n                \n                        Actualiza el perfil del usuario actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                datosActualizados\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nuevos datos del perfil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actualizarUsuario\n                        \n                    \n                \n            \n            \n                \nactualizarUsuario(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:342\n                        \n                    \n\n\n            \n                \n                        Actualiza los datos de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos actualizados del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la actualización es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cargarSesion\n                        \n                    \n                \n            \n            \n                \ncargarSesion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Carga la sesión del usuario desde el almacenamiento local\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarUsuario\n                        \n                    \n                \n            \n            \n                \neliminarUsuario(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:373\n                        \n                    \n\n\n            \n                \n                        elimina un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la eliminación es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        esAdministrador\n                        \n                    \n                \n            \n            \n                \nesAdministrador()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario actual es administrador\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true si el usuario es administrador, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generarTokenRecuperacion\n                        \n                    \n                \n            \n            \n                \ngenerarTokenRecuperacion(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:180\n                        \n                    \n\n\n            \n                \n                        Genera un token de recuperación para un email dado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                El token generado o null si el email no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarioActual\n                        \n                    \n                \n            \n            \n                \ngetUsuarioActual()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Obtiene el usuario actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                El usuario actual o null si no hay sesión\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarioActualObservable\n                        \n                    \n                \n            \n            \n                \ngetUsuarioActualObservable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Obtiene un Observable del usuario actual\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable del usuario actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsuarios\n                        \n                    \n                \n            \n            \n                \ngetUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:333\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de todos los usuarios\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Array de usuarios\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Realiza el inicio de sesión de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contraseña del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si el login es exitoso, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recuperarPassword\n                        \n                    \n                \n            \n            \n                \nrecuperarPassword(email: string, token: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:219\n                        \n                    \n\n\n            \n                \n                        Recupera la contraseña de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email del usuario\n\n                                            \n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperación\n\n                                            \n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si la recuperación es exitosa, false en caso contrario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrarUsuario\n                        \n                    \n                \n            \n            \n                \nregistrarUsuario(nuevoUsuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nuevoUsuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos del nuevo usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                true si el registro es exitoso, false si el usuario ya existe\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:34\n                        \n                    \n\n            \n                \n                    Indica si el código se está ejecutando en un navegador\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n            \n                \n                    BehaviorSubject para manejar el usuario actual\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { isPlatformBrowser, } from '@angular/common';\nimport { JsonService } from './json.service';\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\n\n/**\n * Interfaz que define la estructura de un usuario\n */\ninterface Usuario {\n  /** Email del usuario */\n  email: string;\n  /** Nombre del usuario */\n  nombre: string;\n  /** Celular del usuario */\n  celular: string;\n  /** Fecha de nacimiento del usuario */\n  fechaNacimiento: string;\n  /** Rol del usuario */\n  rol: string;\n}\n\n/**\n * @description\n * Servicio para manejar la autenticación y gestión de usuarios\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /** BehaviorSubject para manejar el usuario actual */\n  private usuarioActual = new BehaviorSubject(null);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(\n    @Inject(PLATFORM_ID) platformId: Object,\n    private jsonService: JsonService\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.cargarSesion();\n  }\n\n  /**\n   * Carga la sesión del usuario desde el almacenamiento local\n   */\n  cargarSesion() {\n    if (this.isBrowser) {\n      const sesionUsuario = JSON.parse(localStorage.getItem('sesionUsuario') || 'null');\n      this.usuarioActual.next(sesionUsuario);\n    }\n  }\n\n  /**\n   * Obtiene el usuario actual\n   * @returns El usuario actual o null si no hay sesión\n   */\n  getUsuarioActual(): any {\n    return this.usuarioActual.value;\n  }\n\n  /**\n   * Obtiene un Observable del usuario actual\n   * @returns Observable del usuario actual\n   */\n  getUsuarioActualObservable(): Observable {\n    return this.usuarioActual.asObservable();\n  }\n\n  /**\n   * Realiza el inicio de sesión de un usuario\n   * @param email Email del usuario\n   * @param password Contraseña del usuario\n   * @returns true si el login es exitoso, false en caso contrario\n   */\n  login(email: string, password: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      map(usuarios => {\n        const usuarioEncontrado = usuarios.find(\n          (usuario: any) => usuario.email === email && usuario.password === password\n        );\n        if (usuarioEncontrado) {\n          const usuarioSinContraseña: Usuario = {\n            email: usuarioEncontrado.email,\n            nombre: usuarioEncontrado.nombre,\n            celular: usuarioEncontrado.celular,\n            fechaNacimiento: usuarioEncontrado.fechaNacimiento,\n            rol: usuarioEncontrado.rol,\n          };\n          if (this.isBrowser) {\n            localStorage.setItem('sesionUsuario', JSON.stringify(usuarioSinContraseña));\n          }\n          this.usuarioActual.next(usuarioSinContraseña);\n          return true;\n        }\n        return false;\n      }),\n      catchError(error => {\n        console.error('Error during login:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout() {\n    if (this.isBrowser) {\n      localStorage.removeItem('sesionUsuario');\n    }\n    this.usuarioActual.next(null);\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   * @returns true si el usuario es administrador, false en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.usuarioActual.value?.rol === 'administrador';\n  }\n\n\n  /**\n   * Registra un nuevo usuario\n   * @param nuevoUsuario Datos del nuevo usuario\n   * @returns true si el registro es exitoso, false si el usuario ya existe\n   */\n  registrarUsuario(nuevoUsuario: any): Observable {\n    console.log('Iniciando registro de usuario:', nuevoUsuario);\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        console.log('Usuarios obtenidos:', usuarios);\n        const usuarioExistente = usuarios.find((u: any) => u.email === nuevoUsuario.email);\n        if (usuarioExistente) {\n          console.log('Usuario ya existe:', nuevoUsuario.email);\n          return of(false);\n        }\n        console.log('Añadiendo nuevo usuario a la lista');\n        \n        // Creamos un nuevo objeto de usuario sin el campo repetirPassword\n        const usuarioParaGuardar = {\n          email: nuevoUsuario.email,\n          nombre: nuevoUsuario.nombre,\n          celular: nuevoUsuario.celular,\n          fechaNacimiento: nuevoUsuario.fechaNacimiento,\n          password: nuevoUsuario.password,\n          rol: nuevoUsuario.rol,\n          token: nuevoUsuario.token\n        };\n  \n        usuarios.push(usuarioParaGuardar);\n        return this.jsonService.MetodoUsuarios(usuarios).pipe(\n          map(() => {\n            console.log('Usuario registrado exitosamente');\n            return true;\n          }),\n          catchError(error => {\n            console.error('Error al guardar usuario en Firebase:', error);\n            return of(false);\n          })\n        );\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Genera un token de recuperación para un email dado\n   * @param email Email del usuario\n   * @returns El token generado o null si el email no existe\n   */\n  generarTokenRecuperacion(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email);\n        if (usuario) {\n          const token = Math.floor(Math.random() * 900000) + 100000;\n          usuario.token = token.toString();\n          console.log('Usuario actualizado:', usuario);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuario : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => token.toString()),\n            catchError(error => {\n              console.error('Error al guardar el token en Firebase:', error);\n              return of(null);\n            })\n          );\n        }\n        return of(null);\n      }),\n      catchError(error => {\n        console.error('Error al generar el token de recuperación:', error);\n        return of(null);\n      })\n    );\n  }\n\n  /**\n   * Recupera la contraseña de un usuario\n   * @param email Email del usuario\n   * @param token Token de recuperación\n   * @param newPassword Nueva contraseña\n   * @returns true si la recuperación es exitosa, false en caso contrario\n   */\n  recuperarPassword(email: string, token: string, newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email && u.token === token);\n        if (usuario) {\n          // Actualizamos solo los campos necesarios\n          const usuarioActualizado = {\n            ...usuario,\n            password: newPassword,\n            token: ''\n          };\n          // Eliminamos el campo repetirPassword si existe\n          delete usuarioActualizado.repetirPassword;\n\n          console.log('Usuario actualizado:', usuarioActualizado);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuarioActualizado : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => true),\n            catchError(error => {\n              console.error('Error al guardar la nueva contraseña en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al recuperar la contraseña:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   * @param datosActualizados Nuevos datos del perfil\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarPerfil(datosActualizados: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = { ...usuarios[usuarioIndex], ...datosActualizados };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              tap(() => {\n                const usuarioActualizado = { ...sesionUsuario, ...datosActualizados };\n                if (this.isBrowser) {\n                  localStorage.setItem('sesionUsuario', JSON.stringify(usuarioActualizado));\n                }\n                this.usuarioActual.next(usuarioActualizado);\n              }),\n              map(() => true)\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error updating profile:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza la contraseña del usuario actual\n   * @param newPassword Nueva contraseña\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarContraseña(newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = {\n              ...usuarios[usuarioIndex],\n              password: newPassword\n            };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              map(() => {\n                console.log('Contraseña actualizada correctamente');\n                return true;\n              }),\n              catchError(error => {\n                console.error('Error al actualizar la contraseña en Firebase:', error);\n                return of(false);\n              })\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de todos los usuarios\n   * @returns Array de usuarios\n   */\n  getUsuarios(): Observable {\n    return this.jsonService.getJsonUsuariosData();\n  }\n\n  /**\n   * Actualiza los datos de un usuario\n   * @param usuario Datos actualizados del usuario\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarUsuario(usuario: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === usuario.email);\n        if (index !== -1) {\n          usuarios[index] = { ...usuarios[index], ...usuario };\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario actualizado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al actualizar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * elimina un usuario\n   * @param email Email del usuario a eliminar\n   * @returns true si la eliminación es exitosa, false en caso contrario\n   */\n  eliminarUsuario(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === email);\n        if (index !== -1) {\n          usuarios.splice(index, 1);\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario eliminado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al eliminar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }  \n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart/cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar la funcionalidad del carrito de compras\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCartItems\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeCartItem\n                            \n                            \n                                updateCartItemQuantity\n                            \n                            \n                                    Private\n                                updateTotal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart/cart.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar las operaciones del carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCartItems\n                        \n                    \n                \n            \n            \n                \nloadCartItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Carga los ítems del carrito desde el servicio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCartItem\n                        \n                    \n                \n            \n            \n                \nremoveCartItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Elimina un ítem del carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCartItemQuantity\n                        \n                    \n                \n            \n            \n                \nupdateCartItemQuantity(item: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Actualiza la cantidad de un ítem en el carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ítem del carrito a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateTotal\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/cart/cart.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Actualiza el total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CartItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:35\n                        \n                    \n\n            \n                \n                    Array que contiene los ítems del carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart/cart.component.ts:37\n                        \n                    \n\n            \n                \n                    Total del carrito\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../services/cart.service';\n\n/**  \n * Interfaz que define la estructura de un ítem del carrito \n */\ninterface CartItem {\n  /** ID único del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio unitario del producto */\n  precio: number;\n   /** Cantidad del producto en el carrito */\n  cantidad: number;\n}\n\n\n/**\n * @description \n * Componente para manejar la funcionalidad del carrito de compras\n */\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\n\nexport class CartComponent implements OnInit {\n  /** Array que contiene los ítems del carrito */\n  cartItems: CartItem[] = [];\n  /** Total del carrito */\n  total: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar las operaciones del carrito\n   */\n  constructor(private cartService: CartService) { }\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.loadCartItems();\n  }\n\n  /** Carga los ítems del carrito desde el servicio */\n  loadCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n    this.updateTotal();\n  }\n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param item El ítem del carrito a actualizar\n   */\n  updateCartItemQuantity(item: CartItem) {\n    this.cartService.updateCartItemQuantity(item.id, item.cantidad);\n    this.updateTotal();\n  }\n\n  /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    this.cartService.removeCartItem(productId);\n    this.loadCartItems();\n  }\n\n  /** Actualiza el total del carrito */\n  private updateTotal() {\n    this.total = this.cartItems.reduce((sum, item) => sum + item.precio * item.cantidad, 0);\n  }\n}\n\n    \n\n    \n        \n    Carrito de compras\n    \n        \n            \n                Producto\n                Precio\n                Cantidad\n                Subtotal\n                Acciones\n            \n        \n        \n            \n                {{ item.nombre }}\n                ${{ item.precio }}\n                \n                    \n                \n                ${{ item.precio * item.cantidad }}\n                \n                    Eliminar\n                \n            \n        \n    \n    \n        Total: ${{ total }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                        Producto                Precio                Cantidad                Subtotal                Acciones                                                        {{ item.nombre }}                ${{ item.precio }}                                                                    ${{ item.precio * item.cantidad }}                                    Eliminar                                                    Total: ${{ total }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un ítem del carrito\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            precio\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidad:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cantidad de producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio del producto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un ítem del carrito\n */\ninterface CartItem {\n  /** ID del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio del producto */\n  precio: number;\n  /** Cantidad de producto */\n  cantidad: number;\n}\n\n/**\n * @description\n * Servicio para manejar las operaciones del carrito de compras\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  /** BehaviorSubject para manejar el contador de ítems en el carrito */\n  private cartItemCount = new BehaviorSubject(0);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Obtiene los ítems del carrito\n   * @returns Array de ítems del carrito\n   */\n  getCartItems(): CartItem[] {\n    if (this.isBrowser) {\n      return JSON.parse(localStorage.getItem('cart') || '[]');\n    }\n    return [];\n  }  \n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param productId ID del producto a actualizar\n   * @param quantity Nueva cantidad\n   */\n  updateCartItemQuantity(productId: number, quantity: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      const item = cart.find(item => item.id === productId);\n      if (item) {\n        item.cantidad = quantity;\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.updateCartItemCount();\n      }\n    }\n  }\n\n /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      cart = cart.filter(item => item.id !== productId);\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir\n   */\n  addToCart(product: any) {\n    if (this.isBrowser) {\n      let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n\n      const existingProduct = cart.find((item: any) => item.id === product.id);\n\n      if (existingProduct) {\n        existingProduct.cantidad++;\n      } else {\n        cart.push({ ...product, cantidad: 1 });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Actualiza el contador de ítems en el carrito\n   * @private\n   */\n  private updateCartItemCount() {\n    if (this.isBrowser) {\n      const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n      const count = cart.reduce((total: number, item: any) => total + item.cantidad, 0);\n      this.cartItemCount.next(count);\n    }\n  }\n\n  /**\n   * Obtiene un Observable del contador de ítems en el carrito\n   * @returns Observable del contador de ítems\n   */\n  getCartItemCount() {\n    return this.cartItemCount.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem-1.html":{"url":"interfaces/CartItem-1.html","title":"interface - CartItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/cart/cart.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un ítem del carrito\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cantidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            precio\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cantidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cantidad:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cantidad del producto en el carrito\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID único del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del producto\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio unitario del producto\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CartService } from '../../services/cart.service';\n\n/**  \n * Interfaz que define la estructura de un ítem del carrito \n */\ninterface CartItem {\n  /** ID único del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio unitario del producto */\n  precio: number;\n   /** Cantidad del producto en el carrito */\n  cantidad: number;\n}\n\n\n/**\n * @description \n * Componente para manejar la funcionalidad del carrito de compras\n */\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\n\nexport class CartComponent implements OnInit {\n  /** Array que contiene los ítems del carrito */\n  cartItems: CartItem[] = [];\n  /** Total del carrito */\n  total: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param cartService Servicio para manejar las operaciones del carrito\n   */\n  constructor(private cartService: CartService) { }\n\n  /** Método de inicialización del componente */\n  ngOnInit() {\n    this.loadCartItems();\n  }\n\n  /** Carga los ítems del carrito desde el servicio */\n  loadCartItems() {\n    this.cartItems = this.cartService.getCartItems();\n    this.updateTotal();\n  }\n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param item El ítem del carrito a actualizar\n   */\n  updateCartItemQuantity(item: CartItem) {\n    this.cartService.updateCartItemQuantity(item.id, item.cantidad);\n    this.updateTotal();\n  }\n\n  /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    this.cartService.removeCartItem(productId);\n    this.loadCartItems();\n  }\n\n  /** Actualiza el total del carrito */\n  private updateTotal() {\n    this.total = this.cartItems.reduce((sum, item) => sum + item.precio * item.cantidad, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar las operaciones del carrito de compras\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cartItemCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                getCartItemCount\n                            \n                            \n                                getCartItems\n                            \n                            \n                                removeCartItem\n                            \n                            \n                                    Private\n                                updateCartItemCount\n                            \n                            \n                                updateCartItemQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cart.service.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor del servicio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ID de la plataforma para determinar si es un navegador\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Añade un producto al carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Producto a añadir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartItemCount\n                        \n                    \n                \n            \n            \n                \ngetCartItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Obtiene un Observable del contador de ítems en el carrito\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable del contador de ítems\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartItems\n                        \n                    \n                \n            \n            \n                \ngetCartItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Obtiene los ítems del carrito\n\n\n                        \n                            Returns :     CartItem[]\n\n                        \n                            \n                                Array de ítems del carrito\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCartItem\n                        \n                    \n                \n            \n            \n                \nremoveCartItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Elimina un ítem del carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCartItemCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCartItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Actualiza el contador de ítems en el carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCartItemQuantity\n                        \n                    \n                \n            \n            \n                \nupdateCartItemQuantity(productId: number, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cart.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Actualiza la cantidad de un ítem en el carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del producto a actualizar\n\n                                            \n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva cantidad\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cart.service.ts:28\n                        \n                    \n\n            \n                \n                    BehaviorSubject para manejar el contador de ítems en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cart.service.ts:30\n                        \n                    \n\n            \n                \n                    Indica si el código se está ejecutando en un navegador\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Interfaz que define la estructura de un ítem del carrito\n */\ninterface CartItem {\n  /** ID del producto */\n  id: number;\n  /** Nombre del producto */\n  nombre: string;\n  /** Precio del producto */\n  precio: number;\n  /** Cantidad de producto */\n  cantidad: number;\n}\n\n/**\n * @description\n * Servicio para manejar las operaciones del carrito de compras\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  /** BehaviorSubject para manejar el contador de ítems en el carrito */\n  private cartItemCount = new BehaviorSubject(0);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(@Inject(PLATFORM_ID) platformId: Object) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    if (this.isBrowser) {\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Obtiene los ítems del carrito\n   * @returns Array de ítems del carrito\n   */\n  getCartItems(): CartItem[] {\n    if (this.isBrowser) {\n      return JSON.parse(localStorage.getItem('cart') || '[]');\n    }\n    return [];\n  }  \n\n  /**\n   * Actualiza la cantidad de un ítem en el carrito\n   * @param productId ID del producto a actualizar\n   * @param quantity Nueva cantidad\n   */\n  updateCartItemQuantity(productId: number, quantity: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      const item = cart.find(item => item.id === productId);\n      if (item) {\n        item.cantidad = quantity;\n        localStorage.setItem('cart', JSON.stringify(cart));\n        this.updateCartItemCount();\n      }\n    }\n  }\n\n /**\n   * Elimina un ítem del carrito\n   * @param productId ID del producto a eliminar\n   */\n  removeCartItem(productId: number) {\n    if (this.isBrowser) {\n      let cart = this.getCartItems();\n      cart = cart.filter(item => item.id !== productId);\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir\n   */\n  addToCart(product: any) {\n    if (this.isBrowser) {\n      let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n\n      const existingProduct = cart.find((item: any) => item.id === product.id);\n\n      if (existingProduct) {\n        existingProduct.cantidad++;\n      } else {\n        cart.push({ ...product, cantidad: 1 });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(cart));\n      this.updateCartItemCount();\n    }\n  }\n\n  /**\n   * Actualiza el contador de ítems en el carrito\n   * @private\n   */\n  private updateCartItemCount() {\n    if (this.isBrowser) {\n      const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n      const count = cart.reduce((total: number, item: any) => total + item.cantidad, 0);\n      this.cartItemCount.next(count);\n    }\n  }\n\n  /**\n   * Obtiene un Observable del contador de ítems en el carrito\n   * @returns Observable del contador de ítems\n   */\n  getCartItemCount() {\n    return this.cartItemCount.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactoComponent.html":{"url":"components/ContactoComponent.html","title":"component - ContactoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contacto/contacto.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el formulario de contacto\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacto\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./contacto.component.html\n            \n\n\n\n            \n                styleUrl\n                ./contacto.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contacto/contacto.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para construir formularios reactivos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contacto/contacto.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/contacto/contacto.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contacto/contacto.component.ts:18\n                        \n                    \n\n            \n                \n                    Formulario de contacto\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/contacto/contacto.component.ts:20\n                        \n                    \n\n            \n                \n                    Indica si el formulario ha sido enviado\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/contacto/contacto.component.ts:58\n                                \n                            \n                    \n                        \n                                Getter para acceder fácilmente a los controles del formulario\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n/**\n * @description\n * Componente para manejar el formulario de contacto\n */\n@Component({\n  selector: 'app-contacto',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './contacto.component.html',\n  styleUrl: './contacto.component.scss'\n})\nexport class ContactoComponent implements OnInit {\n  /** Formulario de contacto */\n  contactForm!: FormGroup;\n  /** Indica si el formulario ha sido enviado */\n  submitted = false;\n\n  /**\n   * Constructor del componente\n   * @param formBuilder Servicio para construir formularios reactivos\n   */\n  constructor(private formBuilder: FormBuilder) { }\n\n  /**\n   * Inicializa el componente y configura el formulario\n   */\n  ngOnInit() {\n    this.contactForm = this.formBuilder.group({\n      nombre: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      celular: ['', [Validators.required, Validators.pattern(/^[0-9]{9}$/)]],\n      asunto: ['', Validators.required],\n      mensaje: ['', [Validators.required, Validators.minLength(10)]]\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.contactForm.valid) {\n      alert('¡Mensaje enviado correctamente!');\n      this.contactForm.reset();\n      this.submitted = false;\n    }\n  }\n  \n  /**\n   * Getter para acceder fácilmente a los controles del formulario\n   * @returns Los controles del formulario\n   */\n  get f() { return this.contactForm.controls; }\n}\n\n    \n\n    \n        \n    Formulario de contacto\n    \n        \n            Nombre\n            \n            \n                El nombre es requerido\n                El nombre debe tener al menos 2 caracteres\n            \n        \n\n        \n            Correo electrónico\n            \n            \n                El email es requerido\n                Debe ser una dirección de email válida\n            \n        \n\n        \n            Celular\n            \n            \n                El número de celular es requerido\n                Debe ser un número de 9 dígitos\n            \n        \n\n        \n            Asunto\n            \n            \n                El asunto es requerido\n            \n        \n\n        \n            Mensaje\n            \n            \n                El mensaje es requerido\n                El mensaje debe tener al menos 10 caracteres\n            \n        \n\n        Enviar\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Formulario de contacto                        Nombre                                        El nombre es requerido                El nombre debe tener al menos 2 caracteres                                        Correo electrónico                                        El email es requerido                Debe ser una dirección de email válida                                        Celular                                        El número de celular es requerido                Debe ser un número de 9 dígitos                                        Asunto                                        El asunto es requerido                                        Mensaje                                        El mensaje es requerido                El mensaje debe tener al menos 10 caracteres                            Enviar    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataInitializationService.html":{"url":"injectables/DataInitializationService.html","title":"injectable - DataInitializationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataInitializationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data-initialization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isBrowser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsonService: JsonService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/data-initialization.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/data-initialization.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-initialization.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { JsonService } from './json.service';\nimport { forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataInitializationService {\n  private isBrowser: boolean;\n\n  constructor(\n    private jsonService: JsonService,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n  }\n\n  initializeData() {\n    return new Promise((resolve, reject) => {\n      forkJoin({\n        usuarios: this.jsonService.getJsonUsuariosData(),\n        categorias: this.jsonService.getJsonCategoriasData(),\n        productos: this.jsonService.getJsonProductosData()\n      }).subscribe({\n        next: (data: any) => {\n          if (this.isBrowser) {\n            // if (!localStorage.getItem('usuarios')) {\n            //   localStorage.setItem('usuarios', JSON.stringify(data.usuarios));\n            // }\n            if (!localStorage.getItem('categorias')) {\n              localStorage.setItem('categorias', JSON.stringify(data.categorias));\n            }\n            if (!localStorage.getItem('productos')) {\n              localStorage.setItem('productos', JSON.stringify(data.productos));\n            }\n          }\n          resolve();\n        },\n        error: (err) => {\n          console.error('Error initializing data', err);\n          reject(err);\n        }\n      });\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para la página de inicio.\nMuestra productos y categorías, permitiendo filtrar y añadir al carrito.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItemCount\n                            \n                            \n                                categorias\n                            \n                            \n                                categoriaSeleccionada\n                            \n                            \n                                productos\n                            \n                            \n                                productosFiltrados\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                filterProducts\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productosService: ProductosService, cartService: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        productosService\n                                                  \n                                                        \n                                                                        ProductosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para obtener datos de productos\n\n                                                        \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para manejar operaciones del carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Añade un producto al carrito\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Producto a añadir al carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProducts\n                        \n                    \n                \n            \n            \n                \nfilterProducts(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Filtra los productos según la categoría seleccionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría para filtrar (0 para mostrar todos)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Carga los datos de productos y categorías desde el servicio\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente cargando los datos y suscribiéndose al contador del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSelectedCategory\n                        \n                    \n                \n            \n            \n                \nupdateSelectedCategory(categoryId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Actualiza la categoría seleccionada y filtra los productos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la categoría seleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Número de items en el carrito\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n            \n                \n                    Lista de categorías de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriaSeleccionada\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n            \n                \n                    ID de la categoría actualmente seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n            \n                \n                    Lista completa de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productosFiltrados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n            \n                \n                    Lista de productos filtrados según la categoría seleccionada\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ProductosService } from '../../services/productos.service';\nimport { CartService } from '../../services/cart.service';\n\n/**\n * @description\n * Componente principal para la página de inicio.\n * Muestra productos y categorías, permitiendo filtrar y añadir al carrito.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent {\n  /** Lista de categorías de productos */\n  categorias: any[] = [];\n  /** Lista completa de productos */\n  productos: any[] = [];\n  /** Lista de productos filtrados según la categoría seleccionada */\n  productosFiltrados: any[] = [];\n  /** ID de la categoría actualmente seleccionada */\n  categoriaSeleccionada: number = 0;\n  /** Número de items en el carrito */\n  cartItemCount: number = 0;\n\n  /**\n   * Constructor del componente\n   * @param productosService Servicio para obtener datos de productos\n   * @param cartService Servicio para manejar operaciones del carrito\n   */\n  constructor(\n    private productosService: ProductosService,\n    private cartService: CartService\n  ) { }\n\n  /**\n   * Inicializa el componente cargando los datos y suscribiéndose al contador del carrito\n   */\n  ngOnInit() {\n    this.loadData();\n    this.cartService.getCartItemCount().subscribe(count => {\n      this.cartItemCount = count || 0;\n    });\n  }\n\n  /**\n   * Carga los datos de productos y categorías desde el servicio\n   */\n  loadData() {\n    this.productosService.getData().subscribe({\n      next: (data) => {\n        if (data && Array.isArray(data.categorias) && Array.isArray(data.productos)) {\n          this.categorias = [...data.categorias];\n          this.productos = data.productos;\n          this.filterProducts(0);\n        } else {\n          console.error('Data structure is not as expected:', data);\n        }\n      },\n      error: (error) => {\n        console.error('Error loading data:', error);\n      }\n    });\n  }\n\n  /**\n   * Actualiza la categoría seleccionada y filtra los productos\n   * @param categoryId ID de la categoría seleccionada\n   */\n  updateSelectedCategory(categoryId: number) {\n    this.categoriaSeleccionada = categoryId;\n    this.filterProducts(categoryId);\n  }\n\n  /**\n   * Filtra los productos según la categoría seleccionada\n   * @param categoryId ID de la categoría para filtrar (0 para mostrar todos)\n   */\n  filterProducts(categoryId: number) {\n    if (categoryId === 0) {\n      this.productosFiltrados = this.productos;\n    } else {\n      this.productosFiltrados = this.productos.filter(producto => producto.categoria === categoryId);\n    }\n  }\n\n  /**\n   * Añade un producto al carrito\n   * @param product Producto a añadir al carrito\n   */\n  addToCart(product: any) {\n    this.cartService.addToCart(product);\n    alert('Producto agregado al carrito');\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            Categorías\n            \n                \n                    {{ categoria.nombre }}\n                \n            \n        \n        \n        \n            Productos\n            \n                \n                    \n                        \n                        \n                            {{ producto.nombre }}\n                            {{ producto.descripcion }}\n                            Precio: ${{ producto.precio }}\n                            \n                                Agregar al\n                                    carrito\n                            \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Categorías                                                {{ categoria.nombre }}                                                                Productos                                                                                                                            {{ producto.nombre }}                            {{ producto.descripcion }}                            Precio: ${{ producto.precio }}                                                            Agregar al                                    carrito                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonService.html":{"url":"injectables/JsonService.html","title":"injectable - JsonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptionsCategorias\n                            \n                            \n                                httpOptionsProductos\n                            \n                            \n                                httpOptionsUsuarios\n                            \n                            \n                                    Private\n                                jsonCategoriasUrl\n                            \n                            \n                                    Private\n                                jsonProductosUrl\n                            \n                            \n                                    Private\n                                jsonUsuariosUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJsonCategoriasData\n                            \n                            \n                                getJsonProductosData\n                            \n                            \n                                getJsonUsuariosData\n                            \n                            \n                                MetodoCategorias\n                            \n                            \n                                MetodoProductos\n                            \n                            \n                                MetodoUsuarios\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/json.service.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonCategoriasData\n                        \n                    \n                \n            \n            \n                \ngetJsonCategoriasData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Trae todas las categorias del archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonProductosData\n                        \n                    \n                \n            \n            \n                \ngetJsonProductosData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Trae todos los productos del archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJsonUsuariosData\n                        \n                    \n                \n            \n            \n                \ngetJsonUsuariosData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Trae todos los usuarios del archivo JSON\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoCategorias\n                        \n                    \n                \n            \n            \n                \nMetodoCategorias(listaCategorias: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON de categorias con la lista de categorias proporcionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                listaCategorias\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoProductos\n                        \n                    \n                \n            \n            \n                \nMetodoProductos(listaProductos: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON de productos con la lista de productos proporcionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                listaProductos\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MetodoUsuarios\n                        \n                    \n                \n            \n            \n                \nMetodoUsuarios(listaUsuarios: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/json.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Sobrescribe el archivo JSON de usuarios con la lista de usuarios proporcionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                listaUsuarios\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptionsCategorias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 80759020-58e2-44d2-b8b7-c4770cc93d76'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:12\n                        \n                    \n\n            \n                \n                    Opciones de cabecera para las peticiones HTTP a la API de categorias\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptionsProductos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer fd5435c0-e522-4ae8-a7eb-e977e471cce7'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:26\n                        \n                    \n\n            \n                \n                    Opciones de cabecera para las peticiones HTTP a la API de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptionsUsuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f11c237d-cda1-41f9-924e-02cfbe260069'\n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:40\n                        \n                    \n\n            \n                \n                    Opciones de cabecera para las peticiones HTTP a la API de usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonCategoriasUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v0/b/fsii-sumativa-angular.appspot.com/o/categorias.json?alt=media&token=80759020-58e2-44d2-b8b7-c4770cc93d76'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:21\n                        \n                    \n\n            \n                \n                    URL de la API de categorias\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonProductosUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v0/b/fsii-sumativa-angular.appspot.com/o/productos.json?alt=media&token=fd5435c0-e522-4ae8-a7eb-e977e471cce7'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:35\n                        \n                    \n\n            \n                \n                    URL de la API de productos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonUsuariosUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v0/b/fsii-sumativa-angular.appspot.com/o/usuarios.json?alt=media&token=f11c237d-cda1-41f9-924e-02cfbe260069'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/json.service.ts:49\n                        \n                    \n\n            \n                \n                    URL de la API de usuarios\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonService {\n  /**\n   * Opciones de cabecera para las peticiones HTTP a la API de categorias\n   */\n  httpOptionsCategorias = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 80759020-58e2-44d2-b8b7-c4770cc93d76'\n    })\n  }\n  /**\n   * URL de la API de categorias\n   */\n  private jsonCategoriasUrl = '/api/v0/b/fsii-sumativa-angular.appspot.com/o/categorias.json?alt=media&token=80759020-58e2-44d2-b8b7-c4770cc93d76'; \n\n  /**\n   * Opciones de cabecera para las peticiones HTTP a la API de productos\n   */\n  httpOptionsProductos = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer fd5435c0-e522-4ae8-a7eb-e977e471cce7'\n    })\n  }\n  /**\n   * URL de la API de productos\n   */\n  private jsonProductosUrl = '/api/v0/b/fsii-sumativa-angular.appspot.com/o/productos.json?alt=media&token=fd5435c0-e522-4ae8-a7eb-e977e471cce7';\n\n  /**\n   * Opciones de cabecera para las peticiones HTTP a la API de usuarios\n   */\n  httpOptionsUsuarios = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f11c237d-cda1-41f9-924e-02cfbe260069'\n    })\n  }\n  /**\n   * URL de la API de usuarios\n   */\n  private jsonUsuariosUrl = '/api/v0/b/fsii-sumativa-angular.appspot.com/o/usuarios.json?alt=media&token=f11c237d-cda1-41f9-924e-02cfbe260069';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Trae todas las categorias del archivo JSON\n   */\n  getJsonCategoriasData(): Observable {\n    return this.http.get(this.jsonCategoriasUrl);\n  }\n\n  /**\n   * Sobrescribe el archivo JSON de categorias con la lista de categorias proporcionada\n   */\n  MetodoCategorias(listaCategorias:any) {\n    console.log(listaCategorias);\n    this.http.post(this.jsonCategoriasUrl, listaCategorias, this.httpOptionsCategorias).subscribe(\n      response => {\n        console.log('Archivo JSON sobrescrito con exito', response);\n      },\n      error => {\n        console.error('Error al sobrescribir el archivo JSON', error);\n      })\n  }\n\n  /**\n   * Trae todos los productos del archivo JSON\n   */\n  getJsonProductosData(): Observable {\n    return this.http.get(this.jsonProductosUrl);\n  }\n\n  /**\n   * Sobrescribe el archivo JSON de productos con la lista de productos proporcionada\n   */\n  MetodoProductos(listaProductos:any) {\n    console.log(listaProductos);\n    this.http.post(this.jsonProductosUrl, listaProductos, this.httpOptionsProductos).subscribe(\n      response => {\n        console.log('Archivo JSON sobrescrito con exito', response);\n      },\n      error => {\n        console.error('Error al sobrescribir el archivo JSON', error);\n      })\n  }\n\n  /**\n   * Trae todos los usuarios del archivo JSON\n   */\n  getJsonUsuariosData(): Observable {\n    return this.http.get(this.jsonUsuariosUrl);\n  }\n\n  /**\n   * Sobrescribe el archivo JSON de usuarios con la lista de usuarios proporcionada\n   */  \n  MetodoUsuarios(listaUsuarios: any): Observable {\n    return this.http.post(this.jsonUsuariosUrl, listaUsuarios, this.httpOptionsUsuarios);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el inicio de sesión de usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario de inicio de sesión\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para manejar el inicio de sesión de usuarios.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /** Formulario de inicio de sesión */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura el formulario de inicio de sesión\n   */\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario de inicio de sesión\n   */\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const { email, password } = this.loginForm.value;\n\n      this.authService.login(email, password).subscribe(\n        (success) => {\n          if (success) {\n            alert(\"¡Inicio de sesión exitoso!\");\n            this.router.navigate(['/']);\n          } else {\n            alert(\"Correo electrónico o contraseña incorrectos. Por favor, intenta nuevamente.\");\n          }\n        },\n        (error) => {\n          console.error('Error durante el inicio de sesión:', error);\n          alert(\"Ocurrió un error durante el inicio de sesión. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      Object.values(this.loginForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Iniciar sesión\n            \n                \n                    Correo electrónico\n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es requerida.\n                    \n                \n                Iniciar sesión\n            \n            \n                ¿No tienes una cuenta? Regístrate\n                ¿Olvidaste tu contraseña?\n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Iniciar sesión                                                Correo electrónico                                                                El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                                        Contraseña                                                                La contraseña es requerida.                                                    Iniciar sesión                                        ¿No tienes una cuenta? Regístrate                ¿Olvidaste tu contraseña?                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagerUsersComponent.html":{"url":"components/ManagerUsersComponent.html","title":"component - ManagerUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManagerUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/manager-users/manager-users.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para gestionar usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manager-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./manager-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manager-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                editingUser\n                            \n                            \n                                isModalOpen\n                            \n                            \n                                usuarios\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                deleteUser\n                            \n                            \n                                edadMinimaValidator\n                            \n                            \n                                editUser\n                            \n                            \n                                initForm\n                            \n                            \n                                loadUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/manager-users/manager-users.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminacion de un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { edadMinima: boolean; }\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(usuario: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Prepara el formulario para editar un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                usuario\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario a editar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Inicializa el formulario de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n            \n                \nloadUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Carga la lista de usuarios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, carga los usuarios y configura el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/manager-users/manager-users.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de edición\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:21\n                        \n                    \n\n            \n                \n                    Formulario para editar usuarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:23\n                        \n                    \n\n            \n                \n                    Usuario actualmente en edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:25\n                        \n                    \n\n            \n                \n                    control visibilidad del modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/manager-users/manager-users.component.ts:19\n                        \n                    \n\n            \n                \n                    Lista de usuarios\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para gestionar usuarios.\n */\n@Component({\n  selector: 'app-manager-users',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './manager-users.component.html',\n  styleUrls: ['./manager-users.component.scss']\n})\nexport class ManagerUsersComponent implements OnInit {\n  /** Lista de usuarios */\n  usuarios: any[] = [];\n  /** Formulario para editar usuarios */\n  editForm!: FormGroup;\n  /** Usuario actualmente en edición */\n  editingUser: any = null;\n  /** control visibilidad del modal */\n  isModalOpen: boolean = false;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) { }\n\n  /**\n   * Inicializa el componente, carga los usuarios y configura el formulario\n   */\n  ngOnInit() {\n    this.loadUsers();\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario de edición\n   */\n  initForm() {\n    this.editForm = this.fb.group({\n      email: [{ value: '', disabled: true }, [Validators.required, Validators.email]],\n      nombre: ['', Validators.required],\n      celular: ['', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: ['', [Validators.required, this.edadMinimaValidator]],\n      rol: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Carga la lista de usuarios\n   */\n  loadUsers() {\n    this.authService.getUsuarios().subscribe(\n      (users) => {\n        this.usuarios = users;\n      },\n      (error) => {\n        console.error('Error loading users:', error);\n        alert('Error al cargar los usuarios. Por favor, intenta nuevamente.');\n      }\n    );\n  }\n\n  /**\n   * Prepara el formulario para editar un usuario\n   * @param usuario Usuario a editar\n   */\n  editUser(usuario: any) {\n    this.editingUser = usuario;\n    this.editForm.patchValue(usuario);\n    this.isModalOpen = true;\n  }\n\n  /**\n   * Maneja el envío del formulario de edición\n   */\n  onSubmit() {\n    if (this.editForm.valid) {\n      const updatedUser = {\n        ...this.editingUser,\n        ...this.editForm.value\n      };\n      this.authService.actualizarUsuario(updatedUser).subscribe(\n        (success) => {\n          if (success) {\n            alert('Usuario actualizado correctamente');\n            this.loadUsers();\n            this.closeModal();\n          } else {\n            alert('Error al actualizar el usuario. Por favor, intenta nuevamente.');\n          }\n        },\n        (error) => {\n          console.error('Error updating user:', error);\n          alert('Error al actualizar el usuario. Por favor, intenta nuevamente.');\n        }\n      );\n    } else {\n      Object.values(this.editForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n\n  /**\n   * Maneja la eliminacion de un usuario\n   */\n  deleteUser(usuario: any) {\n    if (usuario.rol === 'administrador') {\n      alert('No se puede eliminar un usuario administrador.');\n      return;\n    }\n\n    if (confirm(`¿Estás seguro de que quieres eliminar al usuario ${usuario.nombre}?`)) {\n      this.authService.eliminarUsuario(usuario.email).subscribe(\n        (success) => {\n          if (success) {\n            alert('Usuario eliminado correctamente');\n            this.loadUsers();\n          } else {\n            alert('Error al eliminar el usuario');\n          }\n        },\n        (error) => {\n          console.error('Error deleting user:', error);\n          alert('Error al eliminar el usuario');\n        }\n      );\n    }\n  }\n\n  /**\n   * Cierra el modal de edición\n   */\n  closeModal() {\n    this.isModalOpen = false;\n    this.editingUser = null;\n    this.editForm.reset();\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: any) {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n}\n    \n\n    \n        \n  Administrar usuarios\n  \n    \n      \n        Email\n        Nombre\n        Celular\n        Fecha de nacimiento\n        Rol\n        Acciones\n      \n    \n    \n      \n        {{ usuario.email }}\n        {{ usuario.nombre }}\n        {{ usuario.celular }}\n        {{ usuario.fechaNacimiento }}\n        {{ usuario.rol }}\n        \n          Editar\n          Eliminar\n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n          Editar usuario\n          \n        \n        \n          \n            \n              Email\n              \n              \n                El email es requerido.\n              \n              \n                Ingrese un email válido.\n              \n            \n            \n              Nombre\n              \n              \n                El nombre es requerido.\n              \n            \n            \n              Celular\n              \n              \n                El celular es requerido.\n              \n              \n                El celular debe contener 9 dígitos numéricos.\n              \n            \n            \n              Fecha de nacimiento\n              \n              \n                La fecha de nacimiento es requerida.\n              \n              \n                El usuario debe ser mayor de 14 años.\n              \n            \n            \n              Rol\n              \n                Usuario\n                Administrador\n              \n              \n                El rol es requerido.\n              \n            \n          \n        \n        \n          Cerrar\n          Guardar cambios\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./manager-users.component.scss\n                \n                .modal {\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.modal-dialog {\n    margin: 1.75rem auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrar usuarios                    Email        Nombre        Celular        Fecha de nacimiento        Rol        Acciones                            {{ usuario.email }}        {{ usuario.nombre }}        {{ usuario.celular }}        {{ usuario.fechaNacimiento }}        {{ usuario.rol }}                  Editar          Eliminar                                                    Editar usuario                                                              Email                                            El email es requerido.                                            Ingrese un email válido.                                                    Nombre                                            El nombre es requerido.                                                    Celular                                            El celular es requerido.                                            El celular debe contener 9 dígitos numéricos.                                                    Fecha de nacimiento                                            La fecha de nacimiento es requerida.                                            El usuario debe ser mayor de 14 años.                                                    Rol                              Usuario                Administrador                                            El rol es requerido.                                                              Cerrar          Guardar cambios                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagerUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModificarPerfilComponent.html":{"url":"components/ModificarPerfilComponent.html","title":"component - ModificarPerfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModificarPerfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modificar-perfil/modificar-perfil.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para modificar el perfil del usuario y cambiar la contraseña\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modificar-perfil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./modificar-perfil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modificar-perfil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordForm\n                            \n                            \n                                perfilForm\n                            \n                            \n                                usuarioActual\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edadMinimaValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitPassword\n                            \n                            \n                                onSubmitPerfil\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear los formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente, carga los datos del usuario y configura los formularios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitPassword\n                        \n                    \n                \n            \n            \n                \nonSubmitPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de cambio de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitPerfil\n                        \n                    \n                \n            \n            \n                \nonSubmitPerfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de perfil\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(g: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                g\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    FormGroup que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:21\n                        \n                    \n\n            \n                \n                    Formulario para cambiar la contraseña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perfilForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:19\n                        \n                    \n\n            \n                \n                    Formulario para modificar datos del perfil\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioActual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modificar-perfil/modificar-perfil.component.ts:23\n                        \n                    \n\n            \n                \n                    Datos del usuario actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para modificar el perfil del usuario y cambiar la contraseña\n */\n@Component({\n  selector: 'app-modificar-perfil',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './modificar-perfil.component.html',\n  styleUrls: ['./modificar-perfil.component.scss']\n})\nexport class ModificarPerfilComponent implements OnInit {\n  /** Formulario para modificar datos del perfil */\n  perfilForm!: FormGroup;\n  /** Formulario para cambiar la contraseña */\n  passwordForm!: FormGroup;\n  /** Datos del usuario actual */\n  usuarioActual: any;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear los formularios reactivos\n   * @param authService Servicio de autenticación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Inicializa el componente, carga los datos del usuario y configura los formularios\n   */\n  ngOnInit() {\n    this.usuarioActual = this.authService.getUsuarioActual();\n\n    this.perfilForm = this.fb.group({\n      nombre: [this.usuarioActual?.nombre || '', Validators.required],\n      celular: [this.usuarioActual?.celular || '', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: [this.usuarioActual?.fechaNacimiento || '', [Validators.required, this.edadMinimaValidator]]\n    });\n\n    this.passwordForm = this.fb.group({\n      newPassword: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: AbstractControl): ValidationErrors | null {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param g FormGroup que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('newPassword')?.value === g.get('confirmPassword')?.value\n      ? null : { 'mismatch': true };\n  }\n\n  /**\n   * Maneja el envío del formulario de perfil\n   */\n  onSubmitPerfil() {\n    if (this.perfilForm.valid) {\n      const datosActualizados = this.perfilForm.value;\n      this.authService.actualizarPerfil(datosActualizados).subscribe(\n        (success) => {\n          if (success) {\n            console.log('Perfil actualizado con éxito');\n            alert(\"Información personal actualizada correctamente.\");\n            // Actualizar el usuarioActual en el componente\n            this.usuarioActual = this.authService.getUsuarioActual();\n          } else {\n            console.log('Error al actualizar el perfil');\n            alert(\"Hubo un error al actualizar la información.\");\n          }\n        },\n        (error) => {\n          console.error('Error al actualizar el perfil:', error);\n          alert(\"Ocurrió un error al actualizar la información. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de cambio de contraseña\n   */\n  onSubmitPassword() {\n    if (this.passwordForm.valid) {\n      const newPassword = this.passwordForm.get('newPassword')?.value;\n      this.authService.actualizarContraseña(newPassword).subscribe(\n        (success) => {\n          if (success) {\n            console.log('Contraseña actualizada con éxito');\n            alert(\"Contraseña actualizada correctamente.\");\n            this.passwordForm.reset();\n          } else {\n            console.log('Error al actualizar la contraseña');\n            alert(\"Hubo un error al actualizar la contraseña.\");\n          }\n        },\n        (error) => {\n          console.error('Error al actualizar la contraseña:', error);\n          alert(\"Ocurrió un error al actualizar la contraseña. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Modificar información personal\n            \n                \n                    Nombre\n                    \n                    \n                        El nombre es requerido.\n                    \n                \n                \n                    Celular\n                    \n                    \n                        El celular es requerido.\n                    \n                    \n                        El celular debe contener 9 dígitos numéricos.\n                    \n                \n                \n                    Fecha de nacimiento\n                    \n                    \n                        La fecha de nacimiento es requerida.\n                    \n                    \n                        Debes ser mayor de 14 años para modificar tu perfil.\n                    \n                \n                Guardar cambios\n            \n        \n        \n            Modificar contraseña\n            \n                \n                    Nueva contraseña\n                    \n                    \n                        La nueva contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir nueva contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Cambiar\n                    contraseña\n            \n        \n    \n\n    \n\n    \n                \n                    ./modificar-perfil.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Modificar información personal                                                Nombre                                                                El nombre es requerido.                                                                        Celular                                                                El celular es requerido.                                                                El celular debe contener 9 dígitos numéricos.                                                                        Fecha de nacimiento                                                                La fecha de nacimiento es requerida.                                                                Debes ser mayor de 14 años para modificar tu perfil.                                                    Guardar cambios                                        Modificar contraseña                                                Nueva contraseña                                                                La nueva contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir nueva contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Cambiar                    contraseña                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModificarPerfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductosService.html":{"url":"injectables/ProductosService.html","title":"injectable - ProductosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/productos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsonService: JsonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/productos.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsonService\n                                                  \n                                                        \n                                                                        JsonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/productos.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, forkJoin, map } from 'rxjs';\nimport { JsonService } from './json.service'; // Asegúrese de que la ruta de importación sea correcta\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductosService {\n  constructor(private jsonService: JsonService) { }\n\n  getData(): Observable {\n    return forkJoin({\n      categorias: this.jsonService.getJsonCategoriasData(),\n      productos: this.jsonService.getJsonProductosData()\n    }).pipe(\n      map(result => ({\n        categorias: result.categorias,\n        productos: result.productos\n      }))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecuperarPasswordComponent.html":{"url":"components/RecuperarPasswordComponent.html","title":"component - RecuperarPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecuperarPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/recuperar-password/recuperar-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el proceso de recuperación de contraseña\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recuperar-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./recuperar-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recuperar-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailForm\n                            \n                            \n                                passwordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generarToken\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear los formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generarToken\n                        \n                    \n                \n            \n            \n                \ngenerarToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Genera y envía un token de recuperación al correo electrónico proporcionado\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura los formularios\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de recuperación de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/recuperar-password/recuperar-password.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    AbstractControl que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario para ingresar el correo electrónico\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/recuperar-password/recuperar-password.component.ts:22\n                        \n                    \n\n            \n                \n                    Formulario para ingresar el token y la nueva contraseña\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * @description\n * Componente para manejar el proceso de recuperación de contraseña\n */\n@Component({\n  selector: 'app-recuperar-password',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './recuperar-password.component.html',\n  styleUrls: ['./recuperar-password.component.scss']\n})\nexport class RecuperarPasswordComponent implements OnInit {\n  /** Formulario para ingresar el correo electrónico */\n  emailForm!: FormGroup;\n  /** Formulario para ingresar el token y la nueva contraseña */\n  passwordForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear los formularios reactivos\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura los formularios\n   */\n  ngOnInit() {\n    this.emailForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.passwordForm = this.fb.group({\n      token: ['', [Validators.required, Validators.pattern('^[0-9]{6}$')]],\n      newPassword: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param control AbstractControl que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const newPassword = control.get('newPassword');\n    const confirmPassword = control.get('confirmPassword');\n\n    if (newPassword && confirmPassword && newPassword.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ mismatch: true });\n      return { mismatch: true };\n    } else {\n      confirmPassword?.setErrors(null);\n      return null;\n    }\n  }\n  /**\n   * Genera y envía un token de recuperación al correo electrónico proporcionado\n   */\n  generarToken() {\n    if (this.emailForm.valid) {\n      const email = this.emailForm.get('email')?.value;\n      this.authService.generarTokenRecuperacion(email).subscribe(\n        (token) => {\n          if (token) {\n            alert(`Tu token de recuperación es: ${token}`);\n          } else {\n            alert(\"El correo electrónico ingresado no está registrado.\");\n          }\n        },\n        (error) => {\n          console.error('Error al generar el token:', error);\n          alert(\"Ocurrió un error al generar el token. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      this.emailForm.markAllAsTouched();\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de recuperación de contraseña\n   */\n  onSubmit() {\n    if (this.passwordForm.valid) {\n      const email = this.emailForm.get('email')?.value;\n      const token = this.passwordForm.get('token')?.value;\n      const newPassword = this.passwordForm.get('newPassword')?.value;\n\n      this.authService.recuperarPassword(email, token, newPassword).subscribe(\n        (success) => {\n          if (success) {\n            alert(\"La contraseña ha sido actualizada correctamente.\");\n            this.router.navigate(['/login']);\n          } else {\n            alert(\"El correo electrónico o el token ingresados no son válidos. Por favor, verifica nuevamente.\");\n          }\n        },\n        (error) => {\n          console.error('Error al recuperar la contraseña:', error);\n          alert(\"Ocurrió un error al actualizar la contraseña. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      Object.values(this.passwordForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Recuperar contraseña\n\n            \n                \n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                Generar token\n            \n\n            \n\n            \n                \n                    Ingresar token enviado al correo\n                    \n                    \n                        El token es requerido.\n                    \n                    \n                        El token debe ser de 6 dígitos numéricos.\n                    \n                \n                \n                    Nueva contraseña\n                    \n                    \n                        La nueva contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Cambiar\n                    contraseña\n            \n        \n    \n\n    \n\n    \n                \n                    ./recuperar-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Recuperar contraseña                                                                                            El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                    Generar token                                                                        Ingresar token enviado al correo                                                                El token es requerido.                                                                El token debe ser de 6 dígitos numéricos.                                                                        Nueva contraseña                                                                La nueva contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Cambiar                    contraseña                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecuperarPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrarmeComponent.html":{"url":"components/RegistrarmeComponent.html","title":"component - RegistrarmeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrarmeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registrarme/registrarme.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para manejar el registro de nuevos usuarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registrarme\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./registrarme.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registrarme.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registroForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edadMinimaValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registrarme/registrarme.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        edadMinimaValidator\n                        \n                    \n                \n            \n            \n                \nedadMinimaValidator(control: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar la edad mínima\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Control del formulario a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { edadMinima: boolean; }\n\n                        \n                            \n                                Objeto con error si la edad es menor a 14, null si es válida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente y configura el formulario de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/registrarme/registrarme.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para verificar que las contraseñas coincidan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    AbstractControl que contiene los campos de contraseña\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                Objeto con error si las contraseñas no coinciden, null si son iguales\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registroForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registrarme/registrarme.component.ts:20\n                        \n                    \n\n            \n                \n                    Formulario de registro de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para manejar el registro de nuevos usuarios\n */\n@Component({\n  selector: 'app-registrarme',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './registrarme.component.html',\n  styleUrls: ['./registrarme.component.scss']\n})\nexport class RegistrarmeComponent implements OnInit {\n  /** Formulario de registro de usuario */\n  registroForm!: FormGroup;\n\n  /**\n   * Constructor del componente\n   * @param fb FormBuilder para crear el formulario reactivo\n   * @param authService Servicio de autenticación\n   * @param router Router para la navegación\n   */\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n   * Inicializa el componente y configura el formulario de registro\n   */\n  ngOnInit() {\n    this.registroForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      nombre: ['', Validators.required],\n      celular: ['', [Validators.required, Validators.pattern('^[0-9]{9}$')]],\n      fechaNacimiento: ['', [Validators.required, this.edadMinimaValidator]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{6,15}$/)]],\n      repetirPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   * @param control AbstractControl que contiene los campos de contraseña\n   * @returns Objeto con error si las contraseñas no coinciden, null si son iguales\n   */\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password');\n    const repetirPassword = control.get('repetirPassword');\n\n    if (password && repetirPassword && password.value !== repetirPassword.value) {\n      repetirPassword.setErrors({ mismatch: true });\n      return { mismatch: true };\n    } else {\n      repetirPassword?.setErrors(null);\n      return null;\n    }\n  }\n\n  /**\n   * Validador personalizado para verificar la edad mínima\n   * @param control Control del formulario a validar\n   * @returns Objeto con error si la edad es menor a 14, null si es válida\n   */\n  edadMinimaValidator(control: any) {\n    const hoy = new Date();\n    const fechaNac = new Date(control.value);\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\n    const m = hoy.getMonth() - fechaNac.getMonth();\n    if (m = 14 ? null : { 'edadMinima': true };\n  }\n\n  /**\n   * Maneja el envío del formulario de registro\n   */\n  onSubmit() {\n    if (this.registroForm.valid) {\n      const nuevoUsuario = {\n        ...this.registroForm.value,\n        rol: 'usuario',\n        token: ''\n      };\n\n      this.authService.registrarUsuario(nuevoUsuario).subscribe(\n        (success) => {\n          if (success) {\n            alert(\"¡Usuario registrado correctamente!\");\n            this.router.navigate(['/login']);\n          } else {\n            alert(\"El usuario ya está registrado. Por favor, inicia sesión o utiliza otro correo electrónico.\");\n          }\n        },\n        (error) => {\n          console.error('Error durante el registro:', error);\n          alert(\"Ocurrió un error durante el registro. Por favor, inténtalo de nuevo.\");\n        }\n      );\n    } else {\n      Object.values(this.registroForm.controls).forEach(control => {\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            Registro de usuario\n            \n                \n                    Correo electrónico\n                    \n                    \n                        El correo electrónico es requerido.\n                    \n                    \n                        Ingrese un correo electrónico válido.\n                    \n                \n                \n                    Nombre completo\n                    \n                    \n                        El nombre es requerido.\n                    \n                \n                \n                    Celular\n                    \n                    \n                        El celular es requerido.\n                    \n                    \n                        El celular debe contener 9 dígitos numéricos.\n                    \n                \n                \n                    Fecha de nacimiento\n                    \n                    \n                        La fecha de nacimiento es requerida.\n                    \n                    \n                        Debes ser mayor de 14 años para registrarte.\n                    \n                \n                \n                    Contraseña\n                    \n                    \n                        La contraseña es requerida.\n                    \n                    \n                        La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra\n                        minúscula, una letra mayúscula y un carácter especial.\n                    \n                \n                \n                    Repetir contraseña\n                    \n                    \n                        Debe repetir la contraseña.\n                    \n                    \n                        Las contraseñas no coinciden.\n                    \n                \n                Registrarme\n            \n        \n    \n\n    \n\n    \n                \n                    ./registrarme.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Registro de usuario                                                Correo electrónico                                                                El correo electrónico es requerido.                                                                Ingrese un correo electrónico válido.                                                                        Nombre completo                                                                El nombre es requerido.                                                                        Celular                                                                El celular es requerido.                                                                El celular debe contener 9 dígitos numéricos.                                                                        Fecha de nacimiento                                                                La fecha de nacimiento es requerida.                                                                Debes ser mayor de 14 años para registrarte.                                                                        Contraseña                                                                La contraseña es requerida.                                                                La contraseña debe tener entre 6 y 15 caracteres, y contener al menos un número, una letra                        minúscula, una letra mayúscula y un carácter especial.                                                                        Repetir contraseña                                                                Debe repetir la contraseña.                                                                Las contraseñas no coinciden.                                                    Registrarme                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'ContactoComponent', 'selector': 'app-contacto'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagerUsersComponent', 'selector': 'app-manager-users'},{'name': 'ModificarPerfilComponent', 'selector': 'app-modificar-perfil'},{'name': 'RecuperarPasswordComponent', 'selector': 'app-recuperar-password'},{'name': 'RegistrarmeComponent', 'selector': 'app-registrarme'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrarmeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Usuario.html":{"url":"interfaces/Usuario.html","title":"interface - Usuario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Usuario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un usuario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            celular\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fechaNacimiento\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                                \n                                        \n                                            rol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        celular\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        celular:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Celular del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaNacimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaNacimiento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de nacimiento del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { isPlatformBrowser, } from '@angular/common';\nimport { JsonService } from './json.service';\nimport { map, catchError, switchMap, tap } from 'rxjs/operators';\n\n/**\n * Interfaz que define la estructura de un usuario\n */\ninterface Usuario {\n  /** Email del usuario */\n  email: string;\n  /** Nombre del usuario */\n  nombre: string;\n  /** Celular del usuario */\n  celular: string;\n  /** Fecha de nacimiento del usuario */\n  fechaNacimiento: string;\n  /** Rol del usuario */\n  rol: string;\n}\n\n/**\n * @description\n * Servicio para manejar la autenticación y gestión de usuarios\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  /** BehaviorSubject para manejar el usuario actual */\n  private usuarioActual = new BehaviorSubject(null);\n  /** Indica si el código se está ejecutando en un navegador */\n  private isBrowser: boolean;\n\n  /**\n   * Constructor del servicio\n   * @param platformId ID de la plataforma para determinar si es un navegador\n   */\n  constructor(\n    @Inject(PLATFORM_ID) platformId: Object,\n    private jsonService: JsonService\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.cargarSesion();\n  }\n\n  /**\n   * Carga la sesión del usuario desde el almacenamiento local\n   */\n  cargarSesion() {\n    if (this.isBrowser) {\n      const sesionUsuario = JSON.parse(localStorage.getItem('sesionUsuario') || 'null');\n      this.usuarioActual.next(sesionUsuario);\n    }\n  }\n\n  /**\n   * Obtiene el usuario actual\n   * @returns El usuario actual o null si no hay sesión\n   */\n  getUsuarioActual(): any {\n    return this.usuarioActual.value;\n  }\n\n  /**\n   * Obtiene un Observable del usuario actual\n   * @returns Observable del usuario actual\n   */\n  getUsuarioActualObservable(): Observable {\n    return this.usuarioActual.asObservable();\n  }\n\n  /**\n   * Realiza el inicio de sesión de un usuario\n   * @param email Email del usuario\n   * @param password Contraseña del usuario\n   * @returns true si el login es exitoso, false en caso contrario\n   */\n  login(email: string, password: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      map(usuarios => {\n        const usuarioEncontrado = usuarios.find(\n          (usuario: any) => usuario.email === email && usuario.password === password\n        );\n        if (usuarioEncontrado) {\n          const usuarioSinContraseña: Usuario = {\n            email: usuarioEncontrado.email,\n            nombre: usuarioEncontrado.nombre,\n            celular: usuarioEncontrado.celular,\n            fechaNacimiento: usuarioEncontrado.fechaNacimiento,\n            rol: usuarioEncontrado.rol,\n          };\n          if (this.isBrowser) {\n            localStorage.setItem('sesionUsuario', JSON.stringify(usuarioSinContraseña));\n          }\n          this.usuarioActual.next(usuarioSinContraseña);\n          return true;\n        }\n        return false;\n      }),\n      catchError(error => {\n        console.error('Error during login:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Cierra la sesión del usuario actual\n   */\n  logout() {\n    if (this.isBrowser) {\n      localStorage.removeItem('sesionUsuario');\n    }\n    this.usuarioActual.next(null);\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador\n   * @returns true si el usuario es administrador, false en caso contrario\n   */\n  esAdministrador(): boolean {\n    return this.usuarioActual.value?.rol === 'administrador';\n  }\n\n\n  /**\n   * Registra un nuevo usuario\n   * @param nuevoUsuario Datos del nuevo usuario\n   * @returns true si el registro es exitoso, false si el usuario ya existe\n   */\n  registrarUsuario(nuevoUsuario: any): Observable {\n    console.log('Iniciando registro de usuario:', nuevoUsuario);\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        console.log('Usuarios obtenidos:', usuarios);\n        const usuarioExistente = usuarios.find((u: any) => u.email === nuevoUsuario.email);\n        if (usuarioExistente) {\n          console.log('Usuario ya existe:', nuevoUsuario.email);\n          return of(false);\n        }\n        console.log('Añadiendo nuevo usuario a la lista');\n        \n        // Creamos un nuevo objeto de usuario sin el campo repetirPassword\n        const usuarioParaGuardar = {\n          email: nuevoUsuario.email,\n          nombre: nuevoUsuario.nombre,\n          celular: nuevoUsuario.celular,\n          fechaNacimiento: nuevoUsuario.fechaNacimiento,\n          password: nuevoUsuario.password,\n          rol: nuevoUsuario.rol,\n          token: nuevoUsuario.token\n        };\n  \n        usuarios.push(usuarioParaGuardar);\n        return this.jsonService.MetodoUsuarios(usuarios).pipe(\n          map(() => {\n            console.log('Usuario registrado exitosamente');\n            return true;\n          }),\n          catchError(error => {\n            console.error('Error al guardar usuario en Firebase:', error);\n            return of(false);\n          })\n        );\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Genera un token de recuperación para un email dado\n   * @param email Email del usuario\n   * @returns El token generado o null si el email no existe\n   */\n  generarTokenRecuperacion(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email);\n        if (usuario) {\n          const token = Math.floor(Math.random() * 900000) + 100000;\n          usuario.token = token.toString();\n          console.log('Usuario actualizado:', usuario);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuario : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => token.toString()),\n            catchError(error => {\n              console.error('Error al guardar el token en Firebase:', error);\n              return of(null);\n            })\n          );\n        }\n        return of(null);\n      }),\n      catchError(error => {\n        console.error('Error al generar el token de recuperación:', error);\n        return of(null);\n      })\n    );\n  }\n\n  /**\n   * Recupera la contraseña de un usuario\n   * @param email Email del usuario\n   * @param token Token de recuperación\n   * @param newPassword Nueva contraseña\n   * @returns true si la recuperación es exitosa, false en caso contrario\n   */\n  recuperarPassword(email: string, token: string, newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const usuario = usuarios.find((u: any) => u.email === email && u.token === token);\n        if (usuario) {\n          // Actualizamos solo los campos necesarios\n          const usuarioActualizado = {\n            ...usuario,\n            password: newPassword,\n            token: ''\n          };\n          // Eliminamos el campo repetirPassword si existe\n          delete usuarioActualizado.repetirPassword;\n\n          console.log('Usuario actualizado:', usuarioActualizado);\n          \n          // Actualizamos la lista de usuarios\n          const usuariosActualizados = usuarios.map((u: any) => \n            u.email === email ? usuarioActualizado : u\n          );\n\n          // Sobrescribimos todo el archivo JSON\n          return this.jsonService.MetodoUsuarios(usuariosActualizados).pipe(\n            map(() => true),\n            catchError(error => {\n              console.error('Error al guardar la nueva contraseña en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al recuperar la contraseña:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza el perfil del usuario actual\n   * @param datosActualizados Nuevos datos del perfil\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarPerfil(datosActualizados: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = { ...usuarios[usuarioIndex], ...datosActualizados };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              tap(() => {\n                const usuarioActualizado = { ...sesionUsuario, ...datosActualizados };\n                if (this.isBrowser) {\n                  localStorage.setItem('sesionUsuario', JSON.stringify(usuarioActualizado));\n                }\n                this.usuarioActual.next(usuarioActualizado);\n              }),\n              map(() => true)\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error updating profile:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Actualiza la contraseña del usuario actual\n   * @param newPassword Nueva contraseña\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarContraseña(newPassword: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const sesionUsuario = this.getUsuarioActual();\n        if (sesionUsuario) {\n          const usuarioIndex = usuarios.findIndex((u: any) => u.email === sesionUsuario.email);\n          if (usuarioIndex !== -1) {\n            usuarios[usuarioIndex] = {\n              ...usuarios[usuarioIndex],\n              password: newPassword\n            };\n            return this.jsonService.MetodoUsuarios(usuarios).pipe(\n              map(() => {\n                console.log('Contraseña actualizada correctamente');\n                return true;\n              }),\n              catchError(error => {\n                console.error('Error al actualizar la contraseña en Firebase:', error);\n                return of(false);\n              })\n            );\n          }\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de todos los usuarios\n   * @returns Array de usuarios\n   */\n  getUsuarios(): Observable {\n    return this.jsonService.getJsonUsuariosData();\n  }\n\n  /**\n   * Actualiza los datos de un usuario\n   * @param usuario Datos actualizados del usuario\n   * @returns true si la actualización es exitosa, false en caso contrario\n   */\n  actualizarUsuario(usuario: any): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === usuario.email);\n        if (index !== -1) {\n          usuarios[index] = { ...usuarios[index], ...usuario };\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario actualizado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al actualizar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n   * elimina un usuario\n   * @param email Email del usuario a eliminar\n   * @returns true si la eliminación es exitosa, false en caso contrario\n   */\n  eliminarUsuario(email: string): Observable {\n    return this.jsonService.getJsonUsuariosData().pipe(\n      switchMap(usuarios => {\n        const index = usuarios.findIndex((u: any) => u.email === email);\n        if (index !== -1) {\n          usuarios.splice(index, 1);\n          return this.jsonService.MetodoUsuarios(usuarios).pipe(\n            map(() => {\n              console.log('Usuario eliminado correctamente');\n              return true;\n            }),\n            catchError(error => {\n              console.error('Error al eliminar usuario en Firebase:', error);\n              return of(false);\n            })\n          );\n        }\n        return of(false);\n      }),\n      catchError(error => {\n        console.error('Error al obtener usuarios:', error);\n        return of(false);\n      })\n    );\n  }  \n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/cart/cart.component.ts\n            \n            interface\n            CartItem\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/contacto/contacto.component.ts\n            \n            component\n            ContactoComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/manager-users/manager-users.component.ts\n            \n            component\n            ManagerUsersComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/components/modificar-perfil/modificar-perfil.component.ts\n            \n            component\n            ModificarPerfilComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/recuperar-password/recuperar-password.component.ts\n            \n            component\n            RecuperarPasswordComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/registrarme/registrarme.component.ts\n            \n            component\n            RegistrarmeComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            interface\n            Usuario\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/cart.service.ts\n            \n            injectable\n            CartService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/cart.service.ts\n            \n            interface\n            CartItem\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/data-initialization.service.ts\n            \n            injectable\n            DataInitializationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/json.service.ts\n            \n            injectable\n            JsonService\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/services/productos.service.ts\n            \n            injectable\n            ProductosService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/fire : ^18.0.1\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/platform-server : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/ssr : ^18.0.3\n        \n            @popperjs/core : ^2.11.8\n        \n            bootstrap : ^5.3.3\n        \n            bootstrap-icons : ^1.11.3\n        \n            express : ^4.18.2\n        \n            firebase : ^10.12.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n                        Crea y configura la aplicación Express para el servidor SSR\n\n\n                        \n                            Returns :     express.Express\n\n                        \n                            \n                                Una instancia configurada de Express\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n                        Inicia el servidor Node\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFSII_SUMATIVA_ANGULAR\nFSII - SUMATIVA - ANGULAR\nCOMPODOC COMANDOS\n\nComando para generar documentacion: npx compodoc -p tsconfig.json\nComando para levantar servidor de documentacion: compodoc -s\n\nCOMPODOC DECLARACIONES\n\n@description | Se utiliza para proporcionar una descripción general del componente.\n  /**\n\n@description Se ingresa la descripcion del componente\n  */\n\n\n@param | Se utiliza para describir los parámetros de una función o método. Proporciona detalles sobre el tipo de datos, el propósito y cualquier restricción asociada al parámetro.\n  /**\n\nConstructor del componente\n@param cartService Servicio para manejar el carrito\n@param authService Servicio de autenticación\n@param dataInitService Servicio de inicialización de datos\n */\n\n\n@return | Describe el valor de retorno de una función o método. Proporciona detalles sobre el tipo de datos y el significado del valor devuelto.\n/**\n\nMétodo para verificar si el usuario es administrador\n@returns {boolean} Verdadero si el usuario es administrador, falso en caso contrario\n */\n\n\n@usageNotes | Se utiliza para proporcionar ejemplos de uso del módulo. Cuando documentas tus componentes, directivas, servicios o cualquier otro elemento en TypeScript con JSDoc, puedes incluir secciones personalizadas para proporcionar notas de uso.\n/**\n\n@description Prueba: No debería iniciar sesión con una contraseña incorrecta\n@usageNotes \nEsta prueba verifica el manejo de credenciales inválidas\n\n\nRellena el formulario con un email correcto pero una contraseña incorrecta.\n\n\n\nVerifica que el formulario sea válido.\n\n\n\nSimula una respuesta fallida del servicio de autenticación.\n\n\n\nEspía la función alert del navegador.\n\n\n\nLlama al método onSubmit().\n\n\n\nVerifica que se haya llamado al servicio de login con las credenciales proporcionadas.\n\n\n\nComprueba que no se haya llamado a la navegación.\n\n\n\nVerifica que se haya mostrado el mensaje de alerta correcto.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Proporciona detección de cambios basada en Zone.js con coalescencia de eventos\n     * @description Mejora el rendimiento agrupando múltiples cambios en una sola actualización\n     */\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    /**\n     * Configura el enrutador de la aplicación\n     * @description Utiliza las rutas definidas en app.routes\n     */\n    provideRouter(routes),\n    /**\n     * Habilita la hidratación del cliente\n     * @description Permite la transición suave del renderizado del lado del servidor al lado del cliente\n     */\n    provideClientHydration(),\n    /**\n     * Configura el cliente HTTP para usar Fetch API\n     * @description Proporciona una implementación moderna y eficiente para las solicitudes HTTP\n     */\n    provideHttpClient(withFetch())\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración principal de la aplicación Angular\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n            \n                \n                    Función de arranque de la aplicación Angular para el entorno de servidor\n\n                \n            \n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n            \n                \n                    Configuración final de la aplicación para el entorno de servidor\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración específica para el servidor de la aplicación Angular\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
